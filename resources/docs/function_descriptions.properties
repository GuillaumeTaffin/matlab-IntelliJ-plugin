plot=2-D line plot
legend=Add legend to axes
function=Declare function name, inputs, and outputs
axis=Set axis limits and aspect ratios
fprintf=Write data to text file
find=Find indices and values of nonzero elements
fft=Fast Fourier transform
for=for loop to repeat specified number of times
save=Save workspace variables to file
scatter=Scatter plot
sum=Sum of array elements
linspace=Generate linearly spaced vector
size=Array size
colormap=View and set current colormap
disp=Display value of variable
histogram=Histogram plot
mean=Mean of timeseries data
max=Maximum of timeseries data
zeros=Create array of all zeros
ans=Most recent answer
clc=Clear Command Window
diary=Log Command Window text to file
format=Set Command Window output display format
home=Send cursor home
iskeyword=Determine whether input is MATLAB keyword
more=Control paged output in Command Window
ones=Create array of all ones
rand=Uniformly distributed random numbers
true=Logical 1 (true)
false=Logical 0 (false)
eye=Identity matrix
diag=Create diagonal matrix or get diagonal elements of matrix
blkdiag=Block diagonal matrix
cat=Concatenate arrays
horzcat=Concatenate arrays horizontally
vertcat=Concatenate arrays vertically
repelem=Repeat copies of array elements
repmat=Repeat copies of array
logspace=Generate logarithmically spaced vector
freqspace=Frequency spacing for frequency response
meshgrid=2-D and 3-D grids
ndgrid=Rectangular grid in N-D space
length=Length of largest array dimension
ndims=Number of array dimensions
numel=Number of array elements
isscalar=Determine whether input is scalar
issorted=Determine if array is sorted
issortedrows=Determine if matrix or table rows are sorted
isvector=Determine whether input is vector
ismatrix=Determine whether input is matrix
isrow=Determine whether input is row vector
iscolumn=Determine whether input is column vector
isempty=Determine whether array is empty
sort=Sort array elements
sortrows=Sort rows of matrix or table
flip=Flip order of elements
fliplr=Flip array left to right
flipud=Flip array up to down
rot90=Rotate array 90 degrees
transpose=Transpose vector or matrix
ctranspose=Complex conjugate transpose
permute=Permute array dimensions
ipermute=Inverse permute array dimensions
circshift=Shift array circularly
shiftdim=Shift array dimensions
reshape=Reshape array
squeeze=Remove dimensions of length 1
colon=Vector creation, array subscripting, and for-loop iteration
end=Terminate block of code or indicate last array index
ind2sub=Convert linear indices to subscripts
sub2ind=Convert subscripts to linear indices
inline=(Not recommended) Construct inline object
flipdim=(Not recommended) Flip array along specified dimension
vectorize=(Not recommended) Vectorize expression
double=Double-precision arrays
single=Single-precision arrays
int8=8-bit signed integer arrays
int16=16-bit signed integer arrays
int32=32-bit signed integer arrays
int64=64-bit signed integer arrays
uint8=8-bit unsigned integer arrays
uint16=16-bit unsigned integer arrays
uint32=32-bit unsigned integer arrays
uint64=64-bit unsigned integer arrays
cast=Convert variable to different data type
typecast=Convert data type without changing underlying data
isinteger=Determine whether input is integer array
isfloat=Determine if input is floating-point array
isnumeric=Determine whether input is numeric array
isreal=Determine whether array is real
isfinite=Determine which array elements are finite
isinf=Determine which array elements are infinite
isnan=Determine which array elements are NaN
eps=Floating-point relative accuracy
flintmax=Largest consecutive integer in floating-point format
Inf=Create array of all Inf values
intmax=Largest value of specific integer type
intmin=Smallest value of specified integer type
NaN=Create array of all NaN values
realmax=Largest positive floating-point number
realmin=Smallest normalized floating-point number
string=String array
strings=Create string array with no characters
join=Combine strings
char=Character array
cellstr=Convert to cell array of character vectors
blanks=Create character array of blanks
newline=Create newline character
compose=Format data into multiple strings
sprintf=Format data into string or character vector
strcat=Concatenate strings horizontally
append=Combine strings
convertCharsToStrings=Convert character arrays to string arrays, leaving other arrays unaltered
convertStringsToChars=Convert string arrays to character arrays, leaving other arrays unaltered
convertContainedStringsToChars=Convert string arrays at any level of cell array or structure
str2double=Convert strings to double precision values
num2str=Convert numbers to character array
ischar=Determine if input is character array
iscellstr=Determine if input is cell array of character vectors
isstring=Determine if input is string array
isStringScalar=Determine if input is string array with one element
strlength=Lengths of strings
isstrprop=Determine which characters in input strings are of specified category
isletter=Determine which characters are letters
isspace=Determine which characters are space characters
contains=Determine if pattern is in strings
matches=Determine if pattern matches strings
count=Count occurrences of pattern in strings
endsWith=Determine if strings end with pattern
startsWith=Determine if strings start with pattern
strfind=Find strings within other strings
sscanf=Read formatted data from strings
replace=Find and replace one or more substrings
replaceBetween=Replace substrings between start and end points
strrep=Find and replace substrings
split=Split strings at delimiters
splitlines=Split strings at newline characters
strjoin=Join strings in array
strsplit=Split string or character vector at specified delimiter
strtok=Selected parts of strings
erase=Delete substrings within strings
eraseBetween=Delete substrings between start and end points
extractAfter=Extract substrings after specified positions
extractBefore=Extract substrings before specified positions
extractBetween=Extract substrings between start and end points
insertAfter=Insert strings after specified substrings
insertBefore=Insert strings before specified substrings
pad=Add leading or trailing characters to strings
strip=Remove leading and trailing characters from strings
lower=Convert strings to lowercase
upper=Convert strings to uppercase
reverse=Reverse order of characters in strings
deblank=Remove trailing whitespace from ends of strings
strtrim=Remove leading and trailing whitespace from strings
strjust=Justify strings
strcmp=Compare strings
strcmpi=Compare strings (case insensitive)
strncmp=Compare first n characters of strings (case sensitive)
strncmpi=Compare first n characters of strings (case insensitive)
regexp=Match regular expression (case sensitive)
regexpi=Match regular expression (case insensitive)
regexprep=Replace text using regular expression
regexptranslate=Translate text into regular expression
symvar=Determine symbolic variables in expression
setstr=(Not recommended) Convert numeric values or strings into character representation
strvcat=(Not recommended) Concatenate strings vertically
findstr=(Not recommended) Find string within another, longer string
strread=(Not recommended) Read formatted data from string
strmatch=(Not recommended) Find possible matches for string
datetime=Arrays that represent points in time
NaT=Not-a-Time
years=Duration in years
days=Duration in days
hours=Duration in hours
minutes=Duration in minutes
seconds=Duration in seconds
milliseconds=Duration in milliseconds
duration=Lengths of time in fixed-length units
calyears=Calendar duration in years
calquarters=Calendar duration in quarters
calmonths=Calendar duration in months
calweeks=Calendar duration in weeks
caldays=Calendar duration in days
calendarDuration=Lengths of time in variable-length calendar units
year=Year number
quarter=Quarter number
month=Month number and name
week=Week number
day=Day number or name
hour=Hour number
minute=Minute number
second=Second number
ymd=Year, month, and day numbers of datetime
hms=Hour, minute, and second numbers of datetime or duration
time=Convert time of calendar duration to duration
timeofday=Elapsed time since midnight for datetimes
isdatetime=Determine if input is datetime array
isduration=Determine if input is duration array
iscalendarduration=Determine if input is calendar duration array
isnat=Determine NaT (Not-a-Time) elements
isdst=Determine daylight saving time elements
isweekend=Determine weekend elements
leapseconds=List all leap seconds supported by datetime data type
timezones=List time zones
tzoffset=Time zone offset from UTC
between=Calendar math differences
caldiff=Calendar math successive differences
dateshift=Shift date or generate sequence of dates and time
isbetween=Determine elements within date and time interval
datenum=Convert date and time to serial date number
convertTo=Convert datetime values to numeric representations
datevec=Convert date and time to vector of components
exceltime=Convert MATLAB datetime to Excel date number
juliandate=Convert MATLAB datetime to Julian date
posixtime=Convert MATLAB datetime to POSIX time
yyyymmdd=Convert MATLAB datetime to YYYYMMDD numeric value
addtodate=Modify date number by field
datestr=Convert date and time to string format
now=Current date and time as serial date number
clock=Current date and time as date vector
date=Current date as character vector
calendar=Calendar for specified month
eomday=Last day of month
weekday=Day of week
etime=Time elapsed between date vectors
categorical=Array that contains values assigned to categories
iscategorical=Determine whether input is categorical array
discretize=Group data into bins or categories
categories=Categories of categorical array
iscategory=Test for categorical array categories
isordinal=Determine whether input is ordinal categorical array
isprotected=Determine whether categories of categorical array are protected
addcats=Add categories to categorical array
mergecats=Merge categories in categorical array
removecats=Remove categories from categorical array
renamecats=Rename categories in categorical array
reordercats=Reorder categories in categorical array
setcats=Set categories in categorical array
summary=Print summary of table, timetable, or categorical array
countcats=Count occurrences of categorical array elements by category
isundefined=Find undefined elements in categorical array
table=Table array with named variables that can contain different types
array2table=Convert homogeneous array to table
cell2table=Convert cell array to table
struct2table=Convert structure array to table
table2array=Convert table to homogeneous array
table2cell=Convert table to cell array
table2struct=Convert table to structure array
table2timetable=Convert table to timetable
timetable2table=Convert timetable to table
readtable=Create table from file
writetable=Write table to file
detectImportOptions=Create import options based on file content
spreadsheetImportOptions=Import options object for Spreadsheets
getvaropts=Get variable import options
setvaropts=Set variable import options
setvartype=Set variable data types
preview=Preview eight rows from file using import options
head=Get top rows of table, timetable, or tall array
tail=Get bottom rows of table, timetable, or tall array
height=Number of table rows
width=Number of table variables
istable=Determine whether input is table
stackedplot=Stacked plot of several variables with common x-axis
unique=Unique values in array
topkrows=Top rows in sorted order
addvars=Add variables to table or timetable
renamevars=Rename variables in table or timetable
movevars=Move variables in table or timetable
removevars=Delete variables from table or timetable
convertvars=Convert table or timetable variables to specified data type
splitvars=Split multicolumn variables in table or timetable
mergevars=Combine table or timetable variables into multicolumn variable
vartype=Subscript into table or timetable by variable type
rows2vars=Reorient table or timetable so that rows become variables
stack=Stack data from multiple variables into single variable
unstack=Unstack data from single variable into multiple variables
inner2outer=Invert nested table-in-table hierarchy in tables or timetables
addprop=Add custom properties to table or timetable
rmprop=Remove custom properties from table or timetable
innerjoin=Inner join between two tables or timetables
outerjoin=Outer join between two tables or timetables
union=Set union of two arrays
intersect=Set intersection of two arrays
ismember=Array elements that are members of set array
setdiff=Set difference of two arrays
setxor=Set exclusive OR of two arrays
ismissing=Find missing values
standardizeMissing=Insert standard missing values
rmmissing=Remove missing entries
fillmissing=Fill missing values
varfun=Apply function to table or timetable variables
rowfun=Apply function to table or timetable rows
findgroups=Find groups and return group numbers
splitapply=Split data into groups and apply function
groupsummary=Group summary computations
timetable=Timetable array with time-stamped rows and variables of different types
array2timetable=Convert homogeneous array to timetable
istimetable=Determine if input is timetable
readtimetable=Create timetable from file
writetimetable=Write timetable to file
timerange=Time range for timetable row subscripting
withtol=Time tolerance for timetable row subscripting
retime=Resample or aggregate data in timetable, and resolve duplicate or irregular times
synchronize=Synchronize timetables to common time vector, and resample or aggregate data from input timetables
lag=Time-shift data in timetable
containsrange=Determine if timetable row times contain specified time range
overlapsrange=Determine if timetable row times overlap specified time range
withinrange=Determine if timetable row times are within specified time range
isregular=Determine if timetable is regular with respect to time or calendar unit
struct=Structure array
fieldnames=Field names of structure, or public fields of Java or Microsoft COM object
getfield=Field of structure array
isfield=Determine if input is structure array field
isstruct=Determine if input is structure array
orderfields=Order fields of structure array
rmfield=Remove fields from structure
setfield=Assign value to structure array field
arrayfun=Apply function to each element of array
structfun=Apply function to each field of scalar structure
cell2struct=Convert cell array to structure array
struct2cell=Convert structure to cell array
cell=Cell array
cell2mat=Convert cell array to ordinary array of the underlying data type
celldisp=Display cell array contents
cellfun=Apply function to each cell in cell array
cellplot=Graphically display structure of cell array
iscell=Determine if input is cell array
mat2cell=Convert array to cell array whose cells contain subarrays
num2cell=Convert array to cell array with consistently sized cells
deal=Distribute inputs to outputs
feval=Evaluate function
func2str=Construct character vector from function handle
str2func=Construct function handle from character vector
localfunctions=Function handles to all local functions in MATLAB file
functions=Information about function handle
containers.Map=Object that maps values to unique keys
isKey=Determine if Map object contains key
keys=Return keys of Map object
remove=Delete key-value pairs from Map object
values=Return values of Map object
timeseries=Create timeseries object
addevent=Add event to timeseries
addsample=Add data sample to timeseries object
delevent=Remove event from timeseries
delsample=Remove sample from timeseries object
detrend=Subtract mean or best-fit line from timeseries object
filter=Modify frequency content of timeseries objects
idealfilter=timeseries ideal filter
resample=Resample timeseries time vector
set=Set timeseries properties
setabstime=Set timeseries times as date character vectors
setinterpmethod=Set default interpolation method for timeseries object
setuniformtime=Modify uniform timeseries time vector
get=Query timeseries properties
getabstime=Convert timeseries time vector to cell array
getdatasamples=Access timeseries data samples
getdatasamplesize=timeseries data sample size
getinterpmethod=timeseries interpolation method
getqualitydesc=timeseries data quality
getsamples=Subset of timeseries
getsampleusingtime=Subset of timeseries data
gettsafteratevent=Create timeseries at or after event
gettsafterevent=Create timeseries after event
gettsatevent=Create timeseries at event
gettsbeforeatevent=Create timeseries at or before event
gettsbeforeevent=Create timeseries before event
gettsbetweenevents=Create timeseries between events
iqr=Interquartile range of timeseries data
median=Median of timeseries data
min=Minimum of timeseries data
std=Standard deviation of timeseries data
var=Variance of timeseries data
tscollection=Create tscollection object
addsampletocollection=Add sample to tscollection
addts=Add timeseries to tscollection
delsamplefromcollection=Delete sample from tscollection
removets=Remove timeseries from tscollection
settimeseriesnames=Rename timeseries in tscollection
gettimeseriesnames=Names of timeseries in tscollection
tsdata.event=Create tsdata.event object
findEvent=Query tsdata.event by name
getTimeStr=Query tsdata.event times
isenum=Determine if variable is enumeration
isgraphics=True for valid graphics object handles
isjava=Determine if input is Java object
islogical=Determine if input is logical array
isobject=Determine if input is MATLAB object
isa=Determine if input has specified data type
class=Class of object
validateattributes=Check validity of array
whos=List variables in workspace, with sizes and types
isstr=(Not recommended) Determine whether input is character array
int2str=Convert integers to characters
mat2str=Convert matrix to characters
str2num=Convert character array or string to numeric array
native2unicode=Convert numeric bytes to Unicode character representation
unicode2native=Convert Unicode character representation to numeric bytes
base2dec=Convert text representing number in base N to decimal number
bin2dec=Convert text representation of binary number to decimal number
dec2base=Convert decimal number to character array representing base-N number
dec2bin=Convert decimal number to character array representing binary number
dec2hex=Convert decimal number to character array representing hexadecimal number
hex2dec=Convert text representation of hexadecimal number to decimal number
hex2num=Convert IEEE hexadecimal format to double-precision number
num2hex=Convert single- and double-precision numbers to IEEE hexadecimal format
str2mat=(Not recommended) Form blank-padded character array from strings
cumsum=Cumulative sum
movsum=Moving sum
diff=Differences and approximate derivatives
prod=Product of array elements
cumprod=Cumulative product
uminus=Unary minus
uplus=Unary plus
mod=Remainder after division (modulo operation)
rem=Remainder after division
idivide=Integer division with rounding option
ceil=Round toward positive infinity
fix=Round toward zero
floor=Round toward negative infinity
round=Round to nearest decimal or integer
bsxfun=Apply element-wise operation to two arrays with implicit expansion enabled
isequal=Determine array equality
isequaln=Determine array equality, treating NaN values as equal
isequalwithequalnans=Test arrays for equality, treating NaNs as equal
xor=Find logical exclusive-OR
all=Determine if all array elements are nonzero or true
any=Determine if any array elements are nonzero
logical=Convert numeric values to logicals
ismembertol=Members of set within tolerance
uniquetol=Unique values within tolerance
bitand=Bit-wise AND
bitor=Bit-wise OR
bitxor=Bit-wise XOR
bitcmp=Bit-wise complement
bitget=Get bit at specified position
bitset=Set bit at specific location
bitshift=Shift bits specified number of places
swapbytes=Swap byte ordering
while=while loop to repeat when condition is true
break=Terminate execution of for or while loop
return=Return control to invoking script or function
continue=Pass control to next iteration of for or while loop
pause=Stop MATLAB execution temporarily
parfor=Parallel for loop
daqread=Read Data Acquisition Toolbox (.daq) file
delimitedTextImportOptions=Import options object for delimited text
fixedWidthImportOptions=Import options object for fixed-width text files
readmatrix=Read matrix from file
writematrix=Write a matrix to a file
readcell=Read cell array from file
writecell=Write cell array to file
readvars=Read variables from file
textscan=Read formatted data from text file or string
type=Display contents of file
fileread=Read contents of file as text
textread=Read data from text file; write to multiple outputs
dlmread=(Not recommended) Read ASCII-delimited file of numeric data into matrix
dlmwrite=(Not recommended) Write matrix to ASCII-delimited file
csvread=(Not recommended) Read comma-separated value (CSV) file
csvwrite=(Not recommended) Write comma-separated value file
tabularTextDatastore=Datastore for tabular text files
sheetnames=Get sheet names from spreadsheet file
importdata=Load data from file
xlsread=(Not recommended) Read Microsoft Excel spreadsheet file
xlswrite=(Not recommended) Write Microsoft Excel spreadsheet file
xlsfinfo=(Not recommended) Determine if file contains Microsoft Excel spreadsheet
spreadsheetDatastore=Datastore for spreadsheet files
im2java=Convert image to Java image
imfinfo=Information about graphics file
imread=Read image from graphics file
imwrite=Write image to graphics file
Tiff=MATLAB Gateway to LibTIFF library routines
Tiff.close=Close Tiff object
Tiff.computeStrip=Index number of strip containing specified coordinate
Tiff.computeTile=Index number of tile containing specified coordinates
Tiff.currentDirectory=Return index of current IFD
Tiff.getTag=Value of specified tag
Tiff.getTagNames=List of recognized TIFF tags
Tiff.getVersion=LibTIFF library version
Tiff.isTiled=Determine if image is tiled
Tiff.lastDirectory=Determine if current IFD is last in file
Tiff.nextDirectory=Make next IFD the current IFD
Tiff.numberOfStrips=Total number of strips in image
Tiff.numberOfTiles=Total number of tiles in image
Tiff.read=Read entire TIFF image
Tiff.readEncodedStrip=Read data from specified strip
Tiff.readEncodedTile=Read data from specified tile
Tiff.readRGBAImage=Read image using RGBA interface
Tiff.readRGBAStrip=Read strip data using RGBA interface
Tiff.readRGBATile=Read tile data using RGBA interface
Tiff.rewriteDirectory=Write modified metadata to existing IFD
Tiff.setDirectory=Make specified IFD the current IFD
Tiff.setSubDirectory=Make subIFD the current IFD
Tiff.setTag=Set value of tag
Tiff.write=Write entire image
Tiff.writeDirectory=Create new IFD and make it current IFD
Tiff.writeEncodedStrip=Write data to specified strip
Tiff.writeEncodedTile=Write data to specified tile
nccreate=Create variable in NetCDF file
ncdisp=Display contents of NetCDF data source in Command Window
ncinfo=Return information about NetCDF data source
ncread=Read data from variable in NetCDF data source
ncreadatt=Read attribute value from NetCDF data source
ncwrite=Write data to NetCDF file
ncwriteatt=Write attribute to NetCDF file
ncwriteschema=Add NetCDF schema definitions to NetCDF file
netcdf.setChunkCache=Set default chunk cache settings for NetCDF library
netcdf.getChunkCache=Retrieve chunk cache settings for NetCDF library
netcdf.inqLibVers=Return NetCDF library version information
netcdf.setDefaultFormat=Change default netCDF file format
netcdf.abort=Revert recent netCDF file definitions
netcdf.close=Close netCDF file
netcdf.create=Create new NetCDF dataset
netcdf.endDef=End netCDF file define mode
netcdf.inq=Return information about netCDF file
netcdf.inqFormat=Determine format of NetCDF file
netcdf.inqGrps=Retrieve array of child group IDs
netcdf.inqUnlimDims=Return list of unlimited dimensions in group
netcdf.open=Open NetCDF data source
netcdf.reDef=Put open netCDF file into define mode
netcdf.setFill=Set netCDF fill mode
netcdf.sync=Synchronize netCDF file to disk
netcdf.defDim=Create netCDF dimension
netcdf.inqDim=Return netCDF dimension name and length
netcdf.inqDimID=Return dimension ID
netcdf.renameDim=Change name of netCDF dimension
netcdf.defGrp=Create group in NetCDF file
netcdf.inqDimIDs=Retrieve list of dimension identifiers in group
netcdf.inqGrpName=Retrieve name of group
netcdf.inqGrpNameFull=Complete pathname of group
netcdf.inqGrpParent=Retrieve ID of parent group.
netcdf.inqNcid=Return ID of named group
netcdf.inqVarIDs=IDs of all variables in group
netcdf.defVarFill=Define fill parameters for NetCDF variable
netcdf.inqVarDeflate=Determine compression settings for NetCDF variable
netcdf.defVar=Create NetCDF variable
netcdf.defVarChunking=Define chunking behavior for NetCDF variable
netcdf.defVarDeflate=Define compression parameters for NetCDF variable
netcdf.defVarFletcher32=Define checksum parameters for NetCDF variable
netcdf.getVar=Read data from NetCDF variable
netcdf.inqVar=Information about variable
netcdf.inqVarChunking=Determine chunking settings for NetCDF variable
netcdf.inqVarFill=Determine values of fill parameters for NetCDF variable
netcdf.inqVarFletcher32=Fletcher32 checksum setting for NetCDF variable
netcdf.inqVarID=Return ID associated with variable name
netcdf.putVar=Write data to netCDF variable
netcdf.renameVar=Change name of netCDF variable
netcdf.copyAtt=Copy attribute to new location
netcdf.delAtt=Delete netCDF attribute
netcdf.getAtt=Return netCDF attribute
netcdf.inqAtt=Return information about netCDF attribute
netcdf.inqAttID=Return ID of netCDF attribute
netcdf.inqAttName=Return name of netCDF attribute
netcdf.putAtt=Write netCDF attribute
netcdf.renameAtt=Change name of attribute
netcdf.getConstant=Return numeric value of named constant
netcdf.getConstantNames=Return list of constants known to netCDF library
h5create=Create HDF5 dataset
h5disp=Display contents of HDF5 file
h5info=Information about HDF5 file
h5read=Read data from HDF5 dataset
h5readatt=Read attribute from HDF5 file
h5write=Write to HDF5 dataset
h5writeatt=Write HDF5 attribute
hdf5info=(Not recommended) Information about HDF5 file
hdf5read=(Not recommended) Read HDF5 file
hdf5write=(Not recommended) Write data to file in HDF5 format
H5.close=Close HDF5 library
H5.open=Open HDF5 library
H5A.close=Close specified attribute
H5A.create=Create attribute
H5A.delete=Delete attribute
H5A.iterate=Execute function for attributes attached to object
H5A.open=Open attribute
H5A.read=Read attribute
H5A.write=Write attribute
H5D.close=Close dataset
H5D.create=Create new dataset
H5D.open=Open specified dataset
H5D.read=Read data from HDF5 dataset
H5D.write=Write data to HDF5 dataset
H5E.clear=Clear error stack
H5E.walk=Walk error stack
H5F.close=Close HDF5 file
H5F.create=Create HDF5 file
H5F.flush=Flush buffers to disk
H5F.mount=Mount HDF5 file onto specified location
H5F.open=Open HDF5 file
H5F.reopen=Reopen HDF5 file
H5F.unmount=Unmount file or group from mount point
H5G.close=Close group
H5G.create=Create group
H5G.open=Open specified group
H5L.copy=Copy link from source location to destination location
H5L.delete=Remove link
H5L.exists=Determine if link exists
H5L.iterate=Iterate over links
H5L.move=Rename link
H5L.visit=Recursively iterate through links in group specified by group identifier
H5ML.hoffset=Determine the offset of a field within a structure
H5ML.sizeof=Return the size (in bytes) of a variable as stored on disk
H5O.close=Close object
H5O.copy=Copy object from source location to destination location
H5O.link=Create hard link to specified object
H5O.open=Open specified object
H5O.visit=Visit objects specified by object identifier
H5P.close=Close property list
H5P.copy=Copy of property list
H5P.create=Create new property list
H5P.equal=Determine equality of property lists
H5P.exist=Determine if specified property exists in property list
H5P.get=Value of specified property in property list
H5P.iterate=Iterate over properties in property list
H5P.set=Set property list value
H5R.create=Create reference
H5R.dereference=Open object specified by reference
H5S.copy=Create copy of data space
H5S.create=Create new data space
H5S.close=Close data space
H5T.close=Close data type
H5T.commit=Commit transient data type
H5T.committed=Determine if data type is committed
H5T.copy=Copy data type
H5T.create=Create new data type
H5T.equal=Determine equality of data types
H5T.lock=Lock data type
H5T.open=Open named data type
H5T.insert=Add member to compound data type
H5T.pack=Recursively remove padding from compound data type
hdfinfo=Information about HDF4 or HDF-EOS file
hdfread=Read data from HDF4 or HDF-EOS file
hdftool=(Removed) Browse and import data from HDF4 or HDF-EOS files
matlab.io.hdf4.sd=Interact directly with HDF4 multifile scientific data set (SD) interface
matlab.io.hdfeos.gd=Low-level access to HDF-EOS grid data
matlab.io.hdfeos.sw=Low-level access to HDF-EOS swath files
hdfan=Gateway to HDF multifile annotation (AN) interface
hdfhx=Gateway to HDF external data (HX) interface
hdfh=Gateway to HDF H interface
hdfhd=Gateway to HDF HD interface
hdfhe=Gateway to HDF HE interface
hdfml=Utilities for working with MATLAB HDF gateway functions
hdfpt=Interface to HDF-EOS Point object
hdfv=Gateway to HDF Vgroup (V) interface
hdfvf=Gateway to VF functions in HDF Vdata interface
hdfvh=Gateway to VH functions in HDF Vdata interface
hdfvs=Gateway to VS functions in HDF Vdata interface
hdfdf24=Gateway to HDF 24-bit raster image (DF24) interface
hdfdfr8=Gateway to HDF 8-bit raster image (DFR8) interface
matlab.io.hdf4.sd.attrInfo=Information about attribute
matlab.io.hdf4.sd.close=Terminate access to SD interface
matlab.io.hdf4.sd.create=Create new data set
matlab.io.hdf4.sd.dimInfo=Information about dimension
matlab.io.hdf4.sd.endAccess=Terminate access to data set
matlab.io.hdf4.sd.fileInfo=Number of data sets and global attributes in file
matlab.io.hdf4.sd.findAttr=Index of specified attribute
matlab.io.hdf4.sd.getCal=Data set calibration information
matlab.io.hdf4.sd.getChunkInfo=Chunk size for data set
matlab.io.hdf4.sd.getCompInfo=Information about data set compression
matlab.io.hdf4.sd.getDataStrs=Predefined attributes for data set
matlab.io.hdf4.sd.getDimID=Dimension identifier
matlab.io.hdf4.sd.getDimScale=Scale data for dimension
matlab.io.hdf4.sd.getDimStrs=Predefined attributes for dimension
matlab.io.hdf4.sd.getFilename=Name of file
matlab.io.hdf4.sd.getFillValue=Fill value for data set
matlab.io.hdf4.sd.getInfo=Information about data set
matlab.io.hdf4.sd.getRange=Maximum and minimum range values
matlab.io.hdf4.sd.idToRef=Reference number corresponding to data set identifier
matlab.io.hdf4.sd.idType=Type of object
matlab.io.hdf4.sd.isCoordVar=Determine if data set is a coordinate variable
matlab.io.hdf4.sd.isRecord=Determine if data set is appendable
matlab.io.hdf4.sd.nameToIndex=Index value of named data set
matlab.io.hdf4.sd.nameToIndices=List of data sets with same name
matlab.io.hdf4.sd.readAttr=Read attribute value
matlab.io.hdf4.sd.readChunk=Read chunk from data set
matlab.io.hdf4.sd.readData=Read subsample of data
matlab.io.hdf4.sd.refToIndex=Index of data set corresponding to reference number
matlab.io.hdf4.sd.select=Identifier of data set with specified index
matlab.io.hdf4.sd.setAttr=Write attribute value
matlab.io.hdf4.sd.setCal=Set data set calibration information
matlab.io.hdf4.sd.setChunk=Set chunk size and compression method of data set
matlab.io.hdf4.sd.setCompress=Set compression method of data set
matlab.io.hdf4.sd.setDataStrs=Set predefined attributes for data set
matlab.io.hdf4.sd.setDimName=Associate name with dimension
matlab.io.hdf4.sd.setDimScale=Set scale values for dimension
matlab.io.hdf4.sd.setDimStrs=Set label, unit, and format attributes
matlab.io.hdf4.sd.setExternalFile=Store data in external file
matlab.io.hdf4.sd.setFillMode=Set current fill mode of file
matlab.io.hdf4.sd.setFillValue=Set fill value for data set
matlab.io.hdf4.sd.setNBitDataSet=Specify nonstandard bit length for data set values
matlab.io.hdf4.sd.setRange=Set maximum and minimum range value for data set
matlab.io.hdf4.sd.start=Open HDF file and initialize SD interface
matlab.io.hdf4.sd.writeChunk=Write chunk to data set
matlab.io.hdf4.sd.writeData=Write to data set
matlab.io.hdfeos.gd.attach=Attach to existing grid
matlab.io.hdfeos.gd.close=Close HDF-EOS grid file
matlab.io.hdfeos.gd.compInfo=Compression information for field
matlab.io.hdfeos.gd.create=Create new grid structure
matlab.io.hdfeos.gd.defBoxRegion=Define region of interest by latitude and longitude
matlab.io.hdfeos.gd.defComp=Set grid field compression
matlab.io.hdfeos.gd.defDim=Define new dimension within grid
matlab.io.hdfeos.gd.defField=Define new data field within grid
matlab.io.hdfeos.gd.defOrigin=Define origin of pixels in grid
matlab.io.hdfeos.gd.defPixReg=Define pixel registration within grid
matlab.io.hdfeos.gd.defProj=Define grid projection
matlab.io.hdfeos.gd.defTile=Define tiling parameters
matlab.io.hdfeos.gd.defVrtRegion=Define vertical subset region
matlab.io.hdfeos.gd.detach=Detach from existing grid
matlab.io.hdfeos.gd.dimInfo=Length of dimension
matlab.io.hdfeos.gd.extractRegion=Read region of interest from field
matlab.io.hdfeos.gd.fieldInfo=Information about data field
matlab.io.hdfeos.gd.getFillValue=Fill value for specified field
matlab.io.hdfeos.gd.getPixels=Pixel rows and columns for latitude/longitude pairs
matlab.io.hdfeos.gd.getPixValues=Read data values for specified pixels
matlab.io.hdfeos.gd.gridInfo=Position and size of grid
matlab.io.hdfeos.gd.ij2ll=Convert row and column space to latitude and longitude
matlab.io.hdfeos.gd.inqAttrs=Names of grid attributes
matlab.io.hdfeos.gd.inqDims=Information about dimensions defined in grid
matlab.io.hdfeos.gd.inqFields=Information about data fields defined in grid
matlab.io.hdfeos.gd.inqGrid=Names of grids in file
matlab.io.hdfeos.gd.interpolate=Bilinear interpolation on a grid field
matlab.io.hdfeos.gd.ll2ij=Convert latitude and longitude to row and column space
matlab.io.hdfeos.gd.nEntries=Number of specified objects
matlab.io.hdfeos.gd.open=Open grid file
matlab.io.hdfeos.gd.originInfo=Origin code
matlab.io.hdfeos.gd.pixRegInfo=Pixel registration code
matlab.io.hdfeos.gd.projInfo=GCTP projection information about grid
matlab.io.hdfeos.gd.readAttr=Read grid attribute
matlab.io.hdfeos.gd.readBlkSomOffset=Read Block SOM offset
matlab.io.hdfeos.gd.readField=Read data from grid field
matlab.io.hdfeos.gd.readTile=Read single tile of data from field
matlab.io.hdfeos.gd.regionInfo=Information about subsetted region
matlab.io.hdfeos.gd.setFillValue=Set fill value for specified field
matlab.io.hdfeos.gd.setTileComp=Set tiling and compression for field with fill value
matlab.io.hdfeos.gd.sphereCodeToName=Name corresponding to GCTP sphere code
matlab.io.hdfeos.gd.sphereNameToCode=Numeric GCTP code corresponding to sphere name
matlab.io.hdfeos.gd.tileInfo=Tile size of grid field
matlab.io.hdfeos.gd.writeAttr=Write grid attribute
matlab.io.hdfeos.gd.writeBlkSomOffset=Write Block SOM offset
matlab.io.hdfeos.gd.writeField=Write data to grid field
matlab.io.hdfeos.gd.writeTile=Write tile to field
matlab.io.hdfeos.sw.attach=Attach to swath data set
matlab.io.hdfeos.sw.close=Close swath file
matlab.io.hdfeos.sw.compInfo=Compression information for field
matlab.io.hdfeos.sw.create=Create new swath structure
matlab.io.hdfeos.sw.defBoxRegion=Define latitude-longitude region for swath
matlab.io.hdfeos.sw.defComp=Set grid field compression
matlab.io.hdfeos.sw.defDataField=Define new data field within swath
matlab.io.hdfeos.sw.defDim=Define new dimension within swath
matlab.io.hdfeos.sw.defDimMap=Define mapping between geolocation and data dimensions
matlab.io.hdfeos.sw.defGeoField=Define new data field within swath
matlab.io.hdfeos.sw.defTimePeriod=Define time period of interest
matlab.io.hdfeos.sw.defVrtRegion=Subset on monotonic field or dimension
matlab.io.hdfeos.sw.detach=Detach from swath
matlab.io.hdfeos.sw.dimInfo=Size of dimension
matlab.io.hdfeos.sw.extractPeriod=Read data from subsetted time period
matlab.io.hdfeos.sw.extractRegion=Read subsetted region
matlab.io.hdfeos.sw.fieldInfo=Information about swath field
matlab.io.hdfeos.sw.geoMapInfo=Type of dimension mapping for named dimension
matlab.io.hdfeos.sw.getFillValue=Fill value for specified field
matlab.io.hdfeos.sw.idxMapInfo=Indexed array of geolocation mapping
matlab.io.hdfeos.sw.inqAttrs=Names of swath attributes
matlab.io.hdfeos.sw.inqDataFields=Information about geolocation fields
matlab.io.hdfeos.sw.inqDims=Information about dimensions defined in swath
matlab.io.hdfeos.sw.inqGeoFields=Information about geolocation fields
matlab.io.hdfeos.sw.inqIdxMaps=Information about swath indexed geolocation mapping
matlab.io.hdfeos.sw.inqMaps=Information about swath geolocation relations
matlab.io.hdfeos.sw.inqSwath=Names of swaths in file
matlab.io.hdfeos.sw.mapInfo=Offset and increment of specific geolocation mapping
matlab.io.hdfeos.sw.nEntries=Number of entries for specific type
matlab.io.hdfeos.sw.open=Open swath file
matlab.io.hdfeos.sw.periodInfo=Information about subsetted period
matlab.io.hdfeos.sw.readAttr=Read swath attribute
matlab.io.hdfeos.sw.readField=Read data from swath field
matlab.io.hdfeos.sw.regionInfo=Information about subsetted region
matlab.io.hdfeos.sw.setFillValue=Set fill value for the specified field
matlab.io.hdfeos.sw.writeAttr=Write swath attribute
matlab.io.hdfeos.sw.writeField=Write data to swath field
fitsdisp=Display FITS metadata
fitsinfo=Information about FITS file
fitsread=Read data from FITS file
fitswrite=Write image to FITS file
createFile=Create FITS file
openFile=Open FITS file
openDiskFile=Open FITS file
closeFile=Close FITS file
deleteFile=Delete FITS file
fileName=Name of FITS file
fileMode=I/O mode of FITS file
createImg=Create FITS image
getImgSize=Size of image
getImgType=Data type of image
insertImg=Insert FITS image after current image
readImg=Read image data
setBscale=Reset image scaling
writeImg=Write to FITS image
readCard=Header record of keyword
readKey=Keyword
readKeyCmplx=Keyword as complex scalar value
readKeyDbl=Keyword as double precision value
readKeyLongLong=Keyword as int64
readKeyLongStr=Long string value
readKeyUnit=Physical units string from keyword
readRecord=Header record specified by number
writeComment=Write or append COMMENT keyword to CHU
writeDate=Write DATE keyword to CHU
writeKey=Update or add new keyword into current HDU
writeKeyUnit=Write physical units string
writeHistory=Write or append HISTORY keyword to CHU
deleteKey=Delete key by name
deleteRecord=Delete key by record number
getHdrSpace=Number of keywords in header
copyHDU=Copy current HDU from one file to another
getHDUnum=Number of current HDU in FITS file
getHDUtype=Type of current HDU
getNumHDUs=Total number of HDUs in FITS file
movAbsHDU=Move to absolute HDU number
movNamHDU=Move to first HDU having specific type and keyword values
movRelHDU=Move relative number of HDUs from current HDU
writeChecksum=Compute and write checksum for current HDU
deleteHDU=Delete current HDU in FITS file
imgCompress=Compress HDU from one file into another
isCompressedImg=Determine if current image is compressed
setCompressionType=Set image compression type
setHCompScale=Set scale parameter for HCOMPRESS algorithm
setHCompSmooth=Set smoothing for images compressed with HCOMPRESS
setTileDim=Set tile dimensions
createTbl=Create new ASCII or binary table extension
insertCol=Insert column into table
insertRows=Insert rows into table
insertATbl=Insert ASCII table after current HDU
insertBTbl=Insert binary table after current HDU
deleteCol=Delete column from table
deleteRows=Delete rows from table
getAColParms=ASCII table information
getBColParms=Binary table information
getColName=Table column name
getColType=Scaled column data type, repeat value, width
getEqColType=Column data type, repeat value, width
getNumCols=Number of columns in table
getNumRows=Number of rows in table
readATblHdr=Read header information from current ASCII table
readBTblHdr=Read header information from current binary table
readCol=Read rows of ASCII or binary table column
setTscale=Reset image scaling
writeCol=Write elements into ASCII or binary table column
getConstantValue=Numeric value of named constant
getVersion=Revision number of the CFITSIO library
getOpenFiles=List of open FITS files
multibandread=Read band-interleaved data from binary file
multibandwrite=Write band-interleaved data to file
cdfinfo=Information about Common Data Format (CDF) file
cdfread=Read data from Common Data Format (CDF) file
cdfepoch=Convert date text or serial date number to CDF formatted dates
todatenum=Convert CDF epoch object to MATLAB serial date number
cdflib=Interact directly with CDF library
cdfwrite=Write data to Common Data Format (CDF) file
cdflib.getConstantNames=Names of Common Data Format (CDF) library constants
cdflib.getConstantValue=Numeric value corresponding to Common Data Format (CDF) library constant
cdflib.getFileBackward=Return current backward compatibility mode setting
cdflib.getLibraryCopyright=Copyright notice of Common Data Format (CDF) library
cdflib.getLibraryVersion=Library version and release information
cdflib.getValidate=Library validation mode
cdflib.setFileBackward=Set backward compatibility mode
cdflib.setValidate=Specify library validation mode
cdflib.close=Close Common Data Format (CDF) file
cdflib.create=Create Common Data Format (CDF) file
cdflib.delete=Delete existing Common Data Format (CDF) file
cdflib.getCacheSize=Number of cache buffers used
cdflib.getChecksum=Checksum mode
cdflib.getCompression=Compression settings
cdflib.getCompressionCacheSize=Number of compression cache buffers
cdflib.getCopyright=Copyright notice in Common Data Format (CDF) file
cdflib.getFormat=Format of Common Data Format (CDF) file
cdflib.getMajority=Majority of variables
cdflib.getName=Name of Common Data Format (CDF) file
cdflib.getReadOnlyMode=Read-only mode
cdflib.getStageCacheSize=Number of cache buffers for staging
cdflib.getVersion=Common Data Format (CDF) library version and release information
cdflib.inquire=Basic characteristics of Common Data Format (CDF) file
cdflib.open=Open existing Common Data Format (CDF) file
cdflib.setCacheSize=Specify number of dotCDF cache buffers
cdflib.setChecksum=Specify checksum mode
cdflib.setCompression=Specify compression settings
cdflib.setCompressionCacheSize=Specify number of compression cache buffers
cdflib.setFormat=Specify format of Common Data Format (CDF) file
cdflib.setMajority=Specify majority of variables
cdflib.setReadOnlyMode=Specify read-only mode
cdflib.setStageCacheSize=Specify number of staging cache buffers for Common Data Format (CDF) file
cdflib.closeVar=Close specified variable from multifile format Common Data Format (CDF) file
cdflib.createVar=Create new variable
cdflib.deleteVar=Delete variable
cdflib.deleteVarRecords=Delete range of records from variable
cdflib.getVarAllocRecords=Number of records allocated for variable
cdflib.getVarBlockingFactor=Blocking factor for variable
cdflib.getVarCacheSize=Number of multifile cache buffers
cdflib.getVarCompression=Information about compression used by variable
cdflib.getVarData=Single value from record in variable
cdflib.getVarMaxAllocRecNum=Maximum allocated record number for variable
cdflib.getVarMaxWrittenRecNum=Maximum written record number for variable
cdflib.getVarName=Variable name, given variable number
cdflib.getVarNum=Variable number, given variable name
cdflib.getVarNumRecsWritten=Number of records written to variable
cdflib.getVarPadValue=Pad value for variable
cdflib.getVarRecordData=Entire record for variable
cdflib.getVarReservePercent=Compression reserve percentage for variable
cdflib.getVarsMaxWrittenRecNum=Maximum written record number for CDF file
cdflib.getVarSparseRecords=Information about how variable handles sparse records
cdflib.hyperGetVarData=Read hyperslab of data from variable
cdflib.hyperPutVarData=Write hyperslab of data to variable
cdflib.inquireVar=Information about variable
cdflib.putVarData=Write single value to variable
cdflib.putVarRecordData=Write entire record to variable
cdflib.renameVar=Rename existing variable
cdflib.setVarAllocBlockRecords=Specify range of records to be allocated for variable
cdflib.setVarBlockingFactor=Specify blocking factor for variable
cdflib.setVarCacheSize=Specify number of multi-file cache buffers for variable
cdflib.setVarCompression=Specify compression settings used with variable
cdflib.setVarInitialRecs=Specify initial number of records written to variable
cdflib.setVarPadValue=Specify pad value used with variable
cdflib.SetVarReservePercent=Specify reserve percentage for variable
cdflib.setVarsCacheSize=Specify number of cache buffers used for all variables
cdflib.setVarSparseRecords=Specify how variable handles sparse records
cdflib.createAttr=Create attribute
cdflib.deleteAttr=Delete attribute
cdflib.deleteAttrEntry=Delete attribute entry
cdflib.deleteAttrgEntry=Delete entry in global attribute
cdflib.getAttrEntry=Value of entry in attribute with variable scope
cdflib.getAttrgEntry=Value of entry in global attribute
cdflib.getAttrMaxEntry=Number of last entry for variable attribute
cdflib.getAttrMaxgEntry=Number of last entry for global attribute
cdflib.getAttrName=Name of attribute, given attribute number
cdflib.getAttrNum=Attribute number, given attribute name
cdflib.getAttrScope=Scope of attribute
cdflib.getNumAttrEntries=Number of entries for attribute with variable scope
cdflib.getNumAttrgEntries=Number of entries for attribute with global scope
cdflib.getNumAttributes=Number of attributes with variable scope
cdflib.getNumgAttributes=Number of attributes with global scope
cdflib.inquireAttr=Information about attribute
cdflib.inquireAttrEntry=Information about entry in attribute with variable scope
cdflib.inquireAttrgEntry=Information about entry in attribute with global scope
cdflib.putAttrEntry=Write value to entry in attribute with variable scope
cdflib.putAttrgEntry=Write value to entry in attribute with global scope
cdflib.renameAttr=Rename existing attribute
cdflib.computeEpoch=Convert time value to CDF_EPOCH value
cdflib.computeEpoch16=Convert time value to CDF_EPOCH16 value
cdflib.epoch16Breakdown=Convert CDF_EPOCH16 value to time value
cdflib.epochBreakdown=Convert CDF_EPOCH value into time value
VideoReader=Create object to read video files
read=Read one or more video frames
readFrame=Read next video frame
hasFrame=Determine if video frame is available to read
getFileFormats=File formats that VideoReader supports
mmfileinfo=Information about multimedia file
VideoWriter=Create object to write video files
open=Open file for writing video data
writeVideo=Write video data to file
close=Close file after writing video data
getProfiles=Profiles and file formats that VideoWriter supports
audioread=Read audio file
audiowrite=Write audio file
lin2mu=Convert linear audio signal to mu-law
mu2lin=Convert mu-law audio signal to linear
audioinfo=Information about audio file
audioplayer=Object for playing audio
isplaying=Determine if playback is in progress
play=Play audio from audioplayer object
playblocking=Play audio from audioplayer object, hold control until playback completes
resume=Resume playback or recording from paused state
stop=Stop playback or recording
audiorecorder=Object for recording audio
getaudiodata=Store recorded audio signal in numeric array
getplayer=Creates associated audioplayer object
isrecording=Determine if recording is in progress
record=Record audio to audiorecorder object
recordblocking=Record audio to audiorecorder object, hold control until recording completes
audiodevinfo=Information about audio device
sound=Convert matrix of signal data to sound
soundsc=Scale data and play as sound
beep=Produce operating system beep sound
aviinfo=Information about Audio/Video Interleaved (AVI) file
xmlread=Read XML document and return Document Object Model node
xmlwrite=Write XML Document Object Model node
xslt=Transform XML document using XSLT engine
load=Load variables from file into workspace
matfile=Access and change variables in MAT-file without loading file into memory
who=List variables in workspace
clear=Remove items from workspace, freeing up system memory
clearvars=Clear variables from memory
openvar=Open workspace variable in Variables editor or other graphical editing tool
fclose=Close one or all open files
feof=Test for end of file
ferror=File I/O error information
fgetl=Read line from file, removing newline characters
fgets=Read line from file, keeping newline characters
fopen=Open file, or obtain information about open files
fread=Read data from binary file
frewind=Move file position indicator to beginning of open file
fscanf=Read data from text file
fseek=Move to specified position in file
ftell=Current position
fwrite=Write data to binary file
tcpclient=Create TCP/IP client object to communicate over TCP/IP
write=Write data to remote host over TCP/IP
blelist=Scan nearby Bluetooth Low Energy peripheral devices
ble=Connect to Bluetooth Low Energy peripheral device
characteristic=Access a characteristic on Bluetooth Low Energy peripheral device
descriptor=Access a descriptor on Bluetooth Low Energy peripheral device
subscribe=Subscribe to characteristic notification or indication
unsubscribe=Unsubscribe from characteristic notification and indication
webread=Read content from RESTful web service
webwrite=Write data to RESTful web service
websave=Save content from RESTful web service to file
weboptions=Specify parameters for RESTful web service
web=Open web page or file in browser
sendmail=Send email message to address list
ftp=Object to connect to FTP server and access its files
ascii=Set FTP transfer mode to ASCII
binary=Set FTP transfer mode to binary
cd=Change or view current folder on FTP server
delete=Delete file on FTP server
dir=List folder contents on FTP server
mget=Download files from FTP server
mkdir=Make new folder on FTP server
mput=Upload file or folder to FTP server
rename=Rename file on FTP server
rmdir=Remove folder on FTP server
urlread=Download URL content to character vector (not recommended)
urlwrite=Download URL content and save to file (not recommended)
thingSpeakRead=Read data stored in a ThingSpeak channel
thingSpeakWrite=Write data to a ThingSpeak channel
jsondecode=Decode JSON-formatted text
jsonencode=Create JSON-formatted text from structured MATLAB data
serialportlist=List of serial ports connected to your system
serialport=Connection to serial port
configureTerminator=Set terminator for ASCII string communication on serial port
configureCallback=Set serial port callback function and trigger
readline=Read line of ASCII string data from serial port
writeline=Write line of ASCII data to serial port
flush=Flush serial port buffers
getpinstatus=Get serial pin status
setRTS=Set serial RTS pin
setDTR=Set serial DTR pin
readasync=(Not recommended) Read data asynchronously from device
serial=(Not recommended) Create serial port object
serialbreak=(Not recommended) Send break to device connected to serial port
seriallist=(Not recommended) List of serial ports connected to your system
stopasync=(Not recommended) Stop asynchronous read and write operations
instrcallback=(Not recommended) Event information when event occurs
instrfind=(Not recommended) Read serial port objects from memory to MATLAB workspace
instrfindall=(Not recommended) Find visible and hidden serial port objects
datastore=Create datastore for large collections of data
imageDatastore=Datastore for image data
parquetDatastore=Datastore for collection of Parquet files
fileDatastore=Datastore with custom file reader
readall=Read all data in datastore
hasdata=Determine if data is available to read
reset=Reset datastore to initial state
writeall=Write datastore to files
shuffle=Shuffle files in datastore
isShuffleable=Determine whether datastore is shuffleable
numpartitions=Number of datastore partitions
partition=Partition a datastore
isPartitionable=Determine whether datastore is partitionable
combine=Combine data from multiple datastores
transform=Transform datastore
CombinedDatastore=Datastore to combine data read from multiple underlying datastores
TransformedDatastore=Datastore to transform underlying datastore
KeyValueDatastore=Datastore for key-value pair data for use with mapreduce
TallDatastore=Datastore for checkpointing tall arrays
matlab.io.Datastore=Base datastore class
matlab.io.datastore.Partitionable=Add parallelization support to datastore
matlab.io.datastore.HadoopLocationBased=Add Hadoop support to datastore
matlab.io.datastore.Shuffleable=Add shuffling support to datastore
matlab.io.datastore.DsFileSet=File-set object for collection of files in datastore
matlab.io.datastore.DsFileReader=File-reader object for files in a datastore
matlab.io.datastore.FileWritable=Add file writing support to datastore
matlab.io.datastore.FoldersPropertyProvider=Add Folder property support to datastore
matlab.io.datastore.FileSet=File-set for collection of files in datastore
matlab.io.datastore.BlockedFileSet=Blocked file-set for collection of blocks within file
hasNextFile=Determine if file-set has another file in file-set
hasPreviousFile=Determine if a file-set has a previous file
previousfile=Information on previous file in file-set
hasPreviousBlock=Determine if blocked file-set has previous block
previousblock=Information on previous block in blocked file-set
hasNextBlock=Determine if blocked file-set has another block
nextblock=Information on next block in blocked file-set
progress=Determine how many blocks or files have been read
seek=Seek to a position in the file
hasfile=Determine if more files are available in file-set object
maxpartitions=Maximum number of partitions
nextfile=Information on next file or file chunk
resolve=Information on all files in file-set object
getLocation=Location in Hadoop
initializeDatastore=Initialize datastore with information from Hadoop
isfullfile=Check if datastore reads full files
matlab.io.datastore.HadoopFileBased=(Not recommended) Add Hadoop file support to datastore
populateFoldersFromLocation=Populate Folders property from datastore location argument
currentFileIndexComparator=Compare file indices
getCurrentFilename=Get file name of file read by datastore
getFiles=Get files backing datastore
getFolders=Get folders backing datastore
isSingleReadPerFile=Determine whether datastore reads whole files
validateOutputLocation=Validate output location
countEachLabel=Count files in ImageDatastore labels
readimage=Read specified image from datastore
splitEachLabel=Split ImageDatastore labels by proportions
subset=Create subset of datastore or file-set
tall=Create tall array
gather=Collect tall array into memory after executing queued operations
mapreducer=Define execution environment for mapreduce or tall arrays
tallrng=Control random number generation for tall arrays
istall=Determine if input is tall array
classUnderlying=Class of underlying data in tall array
isaUnderlying=Determine if tall array data is of specified class
matlab.tall.transform=Transform array by applying function handle to blocks of data
matlab.tall.reduce=Reduce arrays by applying reduction algorithm to blocks of data
matlab.tall.movingWindow=Apply moving window function to blocks of data
matlab.tall.blockMovingWindow=Apply moving window function and block reduction to padded blocks of data
mapreduce=Programming technique for analyzing data sets that do not fit in memory
add=Add single key-value pair to KeyValueStore
addmulti=Add multiple key-value pairs to KeyValueStore
hasnext=Determine if ValueIterator has one or more values available
getnext=Get next value from ValueIterator
gcmr=Get current mapreducer configuration
KeyValueStore=Store key-value pairs for use with mapreduce
ValueIterator=An iterator over intermediate values for use with mapreduce
parquetread=Read columnar data from a Parquet file
parquetwrite=Write columnar data to Parquet file
parquetinfo=Get information about Parquet file
memmapfile=Create memory map to a file
missing=Create missing values
isoutlier=Find outliers in data
filloutliers=Detect and replace outliers in data
rmoutliers=Detect and remove outliers in data
movmad=Moving median absolute deviation
ischange=Find abrupt changes in data
islocalmin=Find local minima
islocalmax=Find local maxima
smoothdata=Smooth noisy data
movmean=Moving mean
movmedian=Moving median
normalize=Normalize data
rescale=Scale range of array elements
groupcounts=Number of group elements
groupfilter=Filter by group
grouptransform=Transform by group
histcounts=Histogram bin counts
histcounts2=Bivariate histogram bin counts
accumarray=Construct array with accumulation
mink=Find k smallest elements of array
maxk=Find k largest elements of array
bounds=Smallest and largest elements
mode=Most frequent values in array
corrcoef=Correlation coefficients
cov=Covariance
xcorr=Cross-correlation
xcov=Cross-covariance
cummax=Cumulative maximum
cummin=Cumulative minimum
movmax=Moving maximum
movmin=Moving minimum
movprod=Moving product
movstd=Moving standard deviation
movvar=Moving variance
plotedit=Interactively edit and annotate plots
plottools=Show or hide plot tools
showplottool=Show or hide figure plot tool
figurepalette=Show or hide Figure Palette
plotbrowser=Show or hide figure Plot Browser
propertyeditor=Show or hide Property Editor
propedit=Open Property Editor
datatip=Create data tip
dataTipTextRow=Add row to data tips
axtoolbar=Create axes toolbar
axtoolbarbtn=Add buttons to axes toolbar
addToolbarExplorationButtons=Add data exploration buttons to figure toolbar
removeToolbarExplorationButtons=Remove data exploration buttons from figure toolbar
panInteraction=Pan interaction
rulerPanInteraction=Ruler-pan interaction
zoomInteraction=Zoom interaction
regionZoomInteraction=Region-zoom interaction
rotateInteraction=Rotate interaction
dataTipInteraction=Data tip interaction
enableDefaultInteractivity=Enable built-in axes interactions
disableDefaultInteractivity=Disable built-in axes interactions
pan=Pan view of graph interactively
zoom=Turn zooming on or off or magnify by factor
rotate3d=Rotate 3-D view using mouse
datacursormode=Enable data cursor mode
brush=Interactively mark data values in a chart
enableLegacyExplorationModes=Control behavior of modes in UI figures
linkdata=Automatically update charted data
linkaxes=Synchronize limits of multiple axes
linkprop=Keep same value for corresponding properties of graphics objects
refreshdata=Refresh charted data
selectmoveresize=Select, move, resize, or copy axes and uicontrol graphics objects
sin=Sine of argument in radians
sind=Sine of argument in degrees
sinpi=Compute sin(X*pi) accurately
asin=Inverse sine in radians
asind=Inverse sine in degrees
sinh=Hyperbolic sine
asinh=Inverse hyperbolic sine
cos=Cosine of argument in radians
cosd=Cosine of argument in degrees
cospi=Compute cos(X*pi) accurately
acos=Inverse cosine in radians
acosd=Inverse cosine in degrees
cosh=Hyperbolic cosine
acosh=Inverse hyperbolic cosine
tan=Tangent of argument in radians
tand=Tangent of argument in degrees
atan=Inverse tangent in radians
atand=Inverse tangent in degrees
atan2=Four-quadrant inverse tangent
atan2d=Four-quadrant inverse tangent in degrees
tanh=Hyperbolic tangent
atanh=Inverse hyperbolic tangent
csc=Cosecant of input angle in radians
cscd=Cosecant of argument in degrees
acsc=Inverse cosecant in radians
acscd=Inverse cosecant in degrees
csch=Hyperbolic cosecant
acsch=Inverse hyperbolic cosecant
sec=Secant of angle in radians
secd=Secant of argument in degrees
asec=Inverse secant in radians
asecd=Inverse secant in degrees
sech=Hyperbolic secant
asech=Inverse hyperbolic secant
cot=Cotangent of angle in radians
cotd=Cotangent of argument in degrees
acot=Inverse cotangent in radians
acotd=Inverse cotangent in degrees
coth=Hyperbolic cotangent
acoth=Inverse hyperbolic cotangent
hypot=Square root of sum of squares (hypotenuse)
deg2rad=Convert angle from degrees to radians
rad2deg=Convert angle from radians to degrees
cart2pol=Transform Cartesian coordinates to polar or cylindrical
cart2sph=Transform Cartesian coordinates to spherical
pol2cart=Transform polar or cylindrical coordinates to Cartesian
sph2cart=Transform spherical coordinates to Cartesian
exp=Exponential
expm1=Compute exp(x)-1 accurately for small values of x
log=Natural logarithm
log10=Common logarithm (base 10)
log1p=Compute log(1+x) accurately for small values of x
log2=Base 2 logarithm and floating-point number dissection
nextpow2=Exponent of next higher power of 2
nthroot=Real nth root of real numbers
pow2=Base 2 power and scale floating-point numbers
reallog=Natural logarithm for nonnegative real arrays
realpow=Array power for real-only output
realsqrt=Square root for nonnegative real arrays
sqrt=Square root
abs=Absolute value and complex magnitude
angle=Phase angle
complex=Create complex array
conj=Complex conjugate
cplxpair=Sort complex numbers into complex conjugate pairs
i=Imaginary unit
imag=Imaginary part of complex number
j=Imaginary unit
real=Real part of complex number
sign=Sign function (signum function)
unwrap=Shift phase angles
factor=Prime factors
factorial=Factorial of input
gcd=Greatest common divisor
isprime=Determine which array elements are prime
lcm=Least common multiple
nchoosek=Binomial coefficient or all combinations
perms=All possible permutations
matchpairs=Solve linear assignment problem
primes=Prime numbers less than or equal to input value
rat=Rational fraction approximation
rats=Rational output
poly=Polynomial with specified roots or characteristic polynomial
polyeig=Polynomial eigenvalue problem
polyfit=Polynomial curve fitting
residue=Partial fraction expansion (partial fraction decomposition)
roots=Polynomial roots
polyval=Polynomial evaluation
polyvalm=Matrix polynomial evaluation
conv=Convolution and polynomial multiplication
deconv=Deconvolution and polynomial division
polyint=Polynomial integration
polyder=Polynomial differentiation
airy=Airy Functions
besselh=Bessel function of third kind (Hankel function)
besseli=Modified Bessel function of first kind
besselj=Bessel function of first kind
besselk=Modified Bessel function of second kind
bessely=Bessel function of second kind
beta=Beta function
betainc=Incomplete beta function
betaincinv=Beta inverse cumulative distribution function
betaln=Logarithm of beta function
erf=Error function
erfc=Complementary error function
erfcinv=Inverse complementary error function
erfcx=Scaled complementary error function
erfinv=Inverse error function
gamma=Gamma function
gammainc=Incomplete gamma function
gammaincinv=Inverse incomplete gamma function
gammaln=Logarithm of gamma function
psi=Psi (polygamma) function
ellipj=Jacobi elliptic functions
ellipke=Complete elliptic integrals of first and second kind
expint=Exponential integral
legendre=Associated Legendre functions
pi=Ratio of circle's circumference to its diameter
compan=Companion matrix
gallery=Test matrices
hadamard=Hadamard matrix
hankel=Hankel matrix
hilb=Hilbert matrix
invhilb=Inverse of Hilbert matrix
magic=Magic square
pascal=Pascal matrix
rosser=Classic symmetric eigenvalue test problem
toeplitz=Toeplitz matrix
vander=Vandermonde matrix
wilkinson=Wilkinson's eigenvalue test matrix
mldivide=Solve systems of linear equations Ax = B for x
mrdivide=Solve systems of linear equations xA = B for x
decomposition=Matrix decomposition for solving linear systems
lsqminnorm=Minimum norm least-squares solution to linear equation
linsolve=Solve linear system of equations
inv=Matrix inverse
pinv=Moore-Penrose pseudoinverse
lscov=Least-squares solution in presence of known covariance
lsqnonneg=Solve nonnegative linear least-squares problem
sylvester=Solve Sylvester equation AX + XB = C for X
eig=Eigenvalues and eigenvectors
eigs=Subset of eigenvalues and eigenvectors
balance=Diagonal scaling to improve eigenvalue accuracy
svd=Singular value decomposition
svds=Subset of singular values and vectors
gsvd=Generalized singular value decomposition
ordeig=Eigenvalues of quasitriangular matrices
ordqz=Reorder eigenvalues in QZ factorization
ordschur=Reorder eigenvalues in Schur factorization
qz=QZ factorization for generalized eigenvalues
hess=Hessenberg form of matrix
schur=Schur decomposition
rsf2csf=Convert real Schur form to complex Schur form
cdf2rdf=Convert complex diagonal form to real block diagonal form
lu=LU matrix factorization
ldl=Block LDL' factorization for Hermitian indefinite matrices
chol=Cholesky factorization
cholupdate=Rank 1 update to Cholesky factorization
qr=QR decomposition
qrdelete=Remove column or row from QR factorization
qrinsert=Insert column or row into QR factorization
qrupdate=Rank 1 update to QR factorization
planerot=Givens plane rotation
mtimes=Matrix multiplication
mpower=Matrix power
sqrtm=Matrix square root
expm=Matrix exponential
logm=Matrix logarithm
funm=Evaluate general matrix function
kron=Kronecker tensor product
cross=Cross product
dot=Dot product
bandwidth=Lower and upper matrix bandwidth
tril=Lower triangular part of matrix
triu=Upper triangular part of matrix
isbanded=Determine if matrix is within specific bandwidth
isdiag=Determine if matrix is diagonal
ishermitian=Determine if matrix is Hermitian or skew-Hermitian
issymmetric=Determine if matrix is symmetric or skew-symmetric
istril=Determine if matrix is lower triangular
istriu=Determine if matrix is upper triangular
norm=Vector and matrix norms
normest=2-norm estimate
vecnorm=Vector-wise norm
cond=Condition number for inversion
condest=1-norm condition number estimate
rcond=Reciprocal condition number
condeig=Condition number with respect to eigenvalues
det=Matrix determinant
null=Null space of matrix
orth=Orthonormal basis for range of matrix
rank=Rank of matrix
rref=Reduced row echelon form (Gauss-Jordan elimination)
trace=Sum of diagonal elements
subspace=Angle between two subspaces
isIllConditioned=Determine whether matrix is ill conditioned
randn=Normally distributed random numbers
randi=Uniformly distributed pseudorandom integers
randperm=Random permutation of integers
rng=Control random number generator
RandStream=Random number stream
RandStream.create=Create random number streams
RandStream.list=Random number generator algorithms
RandStream.setGlobalStream=Set global random number stream
RandStream.getGlobalStream=Current global random number stream
interp1=1-D data interpolation (table lookup)
interp2=Interpolation for 2-D gridded data in meshgrid format
interp3=Interpolation for 3-D gridded data in meshgrid format
interpn=Interpolation for 1-D, 2-D, 3-D, and N-D gridded data in ndgrid format
griddedInterpolant=Gridded data interpolation
pchip=Piecewise Cubic Hermite Interpolating Polynomial (PCHIP)
makima=Modified Akima piecewise cubic Hermite interpolation
spline=Cubic spline data interpolation
ppval=Evaluate piecewise polynomial
mkpp=Make piecewise polynomial
unmkpp=Extract piecewise polynomial details
padecoef=Padé approximation of time delays
interpft=1-D interpolation (FFT method)
griddata=Interpolate 2-D or 3-D scattered data
griddatan=Interpolate N-D scattered data
scatteredInterpolant=Interpolate 2-D or 3-D scattered data
interp1q=Quick 1-D linear interpolation
TriScatteredInterp=(Not recommended) Interpolate scattered data
fminbnd=Find minimum of single-variable function on fixed interval
fminsearch=Find minimum of unconstrained multivariable function using derivative-free method
fzero=Root of nonlinear function
optimget=Optimization options values
optimset=Create or modify optimization options structure
ode45=Solve nonstiff differential equations — medium order method
ode23=Solve nonstiff differential equations — low order method
ode113=Solve nonstiff differential equations — variable order method
ode15s=Solve stiff differential equations and DAEs — variable order method
ode23s=Solve stiff differential equations — low order method
ode23t=Solve moderately stiff ODEs and DAEs — trapezoidal rule
ode23tb=Solve stiff differential equations — trapezoidal rule + backward differentiation formula
ode15i=Solve fully implicit differential equations — variable order method
decic=Compute consistent initial conditions for ode15i
odeget=Extract ODE option values
odeset=Create or modify options structure for ODE and PDE solvers
deval=Evaluate differential equation solution structure
odextend=Extend solution to ODE
bvp4c=Solve boundary value problem — fourth-order method
bvp5c=Solve boundary value problem — fifth-order method
bvpinit=Form initial guess for boundary value problem solver
bvpget=Extract properties from options structure created with bvpset
bvpset=Create or alter options structure of boundary value problem
bvpxtend=Form guess structure for extending boundary value solutions
dde23=Solve delay differential equations (DDEs) with constant delays
ddesd=Solve delay differential equations (DDEs) with general delays
ddensd=Solve delay differential equations (DDEs) of neutral type
ddeget=Extract properties from delay differential equations options structure
ddeset=Create or alter delay differential equations options structure
pdepe=Solve 1-D parabolic and elliptic PDEs
pdeval=Interpolate numerical solution of PDE
integral=Numerical integration
integral2=Numerically evaluate double integral
integral3=Numerically evaluate triple integral
quadgk=Numerically evaluate integral — Gauss-Kronrod quadrature
quad2d=Numerically evaluate double integral — tiled method
cumtrapz=Cumulative trapezoidal numerical integration
trapz=Trapezoidal numerical integration
del2=Discrete Laplacian
gradient=Numerical gradient
quad=(Not recommended) Numerically evaluate integral, adaptive Simpson quadrature
quadl=(Not recommended) Numerically evaluate integral, adaptive Lobatto quadrature
quadv=(Not recommended) Vectorized quadrature
dblquad=(Not recommended) Numerically evaluate double integral over rectangle
triplequad=(Not recommended) Numerically evaluate triple integral
fft2=2-D fast Fourier transform
fftn=N-D fast Fourier transform
nufft=Nonuniform fast Fourier transform
nufftn=N-D nonuniform fast Fourier transform
fftshift=Shift zero-frequency component to center of spectrum
fftw=Define method for determining FFT algorithm
ifft=Inverse fast Fourier transform
ifft2=2-D inverse fast Fourier transform
ifftn=Multidimensional inverse fast Fourier transform
ifftshift=Inverse zero-frequency shift
conv2=2-D convolution
convn=N-D convolution
filter2=2-D digital filter
ss2tf=Convert state-space representation to transfer function
spalloc=Allocate space for sparse matrix
spdiags=Extract nonzero diagonals and create sparse band and diagonal matrices
speye=Sparse identity matrix
sprand=Sparse uniformly distributed random matrix
sprandn=Sparse normally distributed random matrix
sprandsym=Sparse symmetric random matrix
sparse=Create sparse matrix
spconvert=Import from sparse matrix external format
issparse=Determine whether input is sparse
nnz=Number of nonzero matrix elements
nonzeros=Nonzero matrix elements
nzmax=Amount of storage allocated for nonzero matrix elements
spfun=Apply function to nonzero sparse matrix elements
spones=Replace nonzero sparse matrix elements with ones
spparms=Set parameters for sparse matrix routines
spy=Visualize sparsity pattern of matrix
full=Convert sparse matrix to full storage
dissect=Nested dissection permutation
amd=Approximate minimum degree permutation
colamd=Column approximate minimum degree permutation
colperm=Sparse column permutation based on nonzero count
dmperm=Dulmage-Mendelsohn decomposition
symamd=Symmetric approximate minimum degree permutation
symrcm=Sparse reverse Cuthill-McKee ordering
pcg=Solve system of linear equations — preconditioned conjugate gradients method
lsqr=Solve system of linear equations — least-squares method
minres=Solve system of linear equations — minimum residual method
symmlq=Solve system of linear equations — symmetric LQ method
gmres=Solve system of linear equations — generalized minimum residual method
bicg=Solve system of linear equations — biconjugate gradients method
bicgstab=Solve system of linear equations — stabilized biconjugate gradients method
bicgstabl=Solve system of linear equations — stabilized biconjugate gradients (l) method
cgs=Solve system of linear equations — conjugate gradients squared method
qmr=Solve system of linear equations — quasi-minimal residual method
tfqmr=Solve system of linear equations — transpose-free quasi-minimal residual method
equilibrate=Matrix scaling for improved conditioning
ichol=Incomplete Cholesky factorization
ilu=Incomplete LU factorization
sprank=Structural rank
etree=Elimination tree
symbfact=Symbolic factorization analysis
spaugment=Form least-squares augmented system
etreeplot=Plot elimination tree
treelayout=Lay out tree or forest
treeplot=Plot picture of tree
gplot=Plot nodes and edges in adjacency matrix
unmesh=Convert edge matrix to coordinate and Laplacian matrices
graph=Graph with undirected edges
digraph=Graph with directed edges
addnode=Add new node to graph
rmnode=Remove node from graph
addedge=Add new edge to graph
rmedge=Remove edge from graph
flipedge=Reverse edge directions
numnodes=Number of nodes in graph
numedges=Number of edges in graph
findnode=Locate node in graph
findedge=Locate edge in graph
edgecount=Number of edges between two nodes
reordernodes=Reorder graph nodes
subgraph=Extract subgraph
centrality=Measure node importance
conncomp=Connected graph components
biconncomp=Biconnected graph components
condensation=Graph condensation
bctree=Block-cut tree graph
toposort=Topological order of directed acyclic graph
isdag=Determine if graph is acyclic
transreduction=Transitive reduction
transclosure=Transitive closure
isisomorphic=Determine whether two graphs are isomorphic
isomorphism=Compute isomorphism between two graphs
ismultigraph=Determine whether graph has multiple edges
simplify=Reduce multigraph to simple graph
bfsearch=Breadth-first graph search
dfsearch=Depth-first graph search
shortestpath=Shortest path between two single nodes
shortestpathtree=Shortest path tree from node
distances=Shortest path distances of all node pairs
maxflow=Maximum flow in graph
minspantree=Minimum spanning tree of graph
adjacency=Graph adjacency matrix
incidence=Graph incidence matrix
laplacian=Graph Laplacian matrix
degree=Degree of graph nodes
neighbors=Neighbors of graph node
nearest=Nearest neighbors within radius
indegree=In-degree of nodes
outdegree=Out-degree of nodes
predecessors=Node predecessors
successors=Node successors
inedges=Incoming edges to node
outedges=Outgoing edges from node
labeledge=Label graph edges
labelnode=Label graph nodes
layout=Change layout of graph plot
highlight=Highlight nodes and edges in plotted graph
GraphPlot=Graph plot for directed and undirected graphs
triangulation=Triangulation in 2-D or 3-D
barycentricToCartesian=Convert coordinates from barycentric to Cartesian
cartesianToBarycentric=Convert coordinates from Cartesian to barycentric
circumcenter=Circumcenter of triangle or tetrahedron
edgeAttachments=Triangles or tetrahedra attached to specified edge
edges=Triangulation edges
faceNormal=Triangulation unit normal vectors
featureEdges=Handle sharp edges of triangulation
freeBoundary=Free boundary facets
incenter=Incenter of triangulation elements
isConnected=Test if two vertices are connected by an edge
nearestNeighbor=Closest vertex
pointLocation=Triangle or tetrahedron enclosing point
vertexAttachments=Triangles or tetrahedra attached to vertex
vertexNormal=Triangulation vertex normal
boundaryshape=Create polyshape from 2-D triangulation
stlread=Create triangulation from STL file
stlwrite=Create STL file from triangulation
tetramesh=Tetrahedron mesh plot
trimesh=Triangular mesh plot
triplot=2-D triangular plot
trisurf=Triangular surface plot
TriRep=(Not recommended) Triangulation representation
baryToCart=(Not recommended) Convert point coordinates from barycentric to Cartesian
cartToBary=(Not recommended) Convert point coordinates from Cartesian to barycentric
circumcenters=(Not recommended) Circumcenters of specified simplices
faceNormals=(Not recommended) Unit normals to specified triangles
incenters=(Not recommended) Incenters of specified simplices
isEdge=(Not recommended) Test if vertices are joined by edge
delaunay=Delaunay triangulation
delaunayn=N-D Delaunay triangulation
delaunayTriangulation=Delaunay triangulation in 2-D and 3-D
convexHull=Convex hull of Delaunay triangulation
isInterior=Query interior points of Delaunay triangulation
voronoiDiagram=Voronoi diagram of Delaunay triangulation
DelaunayTri=(Not recommended) Construct Delaunay triangulation
inOutStatus=(Not recommended) Status of triangles in 2-D constrained Delaunay triangulation
dsearchn=Nearest point search
tsearchn=N-D closest simplex search
boundary=Boundary of a set of points in 2-D or 3-D
convhull=Convex hull
convhulln=N-D convex hull
alphaShape=Polygons and polyhedra from points in 2-D and 3-D
alphaSpectrum=Alpha values giving distinct alpha shapes
criticalAlpha=Alpha radius defining critical transition in shape
numRegions=Number of regions in alpha shape
inShape=Determine if point is inside alpha shape
alphaTriangulation=Triangulation that fills alpha shape
boundaryFacets=Boundary facets of alpha shape
perimeter=Perimeter of 2-D alpha shape
area=Area of 2-D alpha shape
surfaceArea=Surface area of 3-D alpha shape
volume=Volume of 3-D alpha shape
voronoi=Voronoi diagram
voronoin=N-D Voronoi diagram
patch=Plot one or more filled polygonal regions
inpolygon=Points located inside or on edge of polygonal region
nsidedpoly=Regular polygon
polyarea=Area of polygon
polybuffer=Create buffer around points, lines, or polyshape objects
rectint=Rectangle intersection area
polyshape=2-D polygons
addboundary=Add polyshape boundary
rmboundary=Remove polyshape boundary
rmholes=Remove holes in polyshape
rmslivers=Remove polyshape boundary outliers
rotate=Rotate polyshape
scale=Scale polyshape
sortboundaries=Sort polyshape boundaries
sortregions=Sort polyshape regions
translate=Translate polyshape
holes=Convert polyshape hole boundaries to array of polyshape objects
ishole=Determine if polyshape boundary is a hole
isinterior=Query points inside polyshape
issimplified=Determine if polyshape is well-defined
nearestvertex=Query nearest polyshape vertex
numboundaries=Number of polyshape boundaries
numsides=Number of polyshape sides
overlaps=Determine whether polyshape objects overlap
regions=Access polyshape regions
boundingbox=Bounding box of polyshape
centroid=Centroid of polyshape
turningdist=Compute turning distance between polyshape objects
subtract=Difference of two polyshape objects
plot3=3-D point or line plot
stairs=Stairstep graph
errorbar=Line plot with error bars
loglog=Log-log scale plot
semilogx=Semilog plot (x-axis has log scale)
semilogy=Semilog plot (y-axis has log scale)
fplot=Plot expression or function
fimplicit=Plot implicit function
fplot3=3-D parametric curve plotter
ezplot=(Not recommended) Easy-to-use function plotter
ezplot3=(Not recommended) Easy-to-use 3-D parametric curve plotter
histogram2=Bivariate histogram plot
morebins=Increase number of histogram bins
fewerbins=Decrease number of histogram bins
boxchart=Create box chart (box plot)
scatter3=3-D scatter plot
binscatter=Binned scatter plot
scatterhistogram=Create scatter plot with histograms
plotmatrix=Scatter plot matrix
parallelplot=Create parallel coordinates plot
pie=Pie chart
pie3=3-D pie chart
heatmap=Create heatmap chart
sortx=Sort elements in heatmap row
sorty=Sort elements in heatmap column
wordcloud=Create word cloud chart from text data
hist=Histogram plot (not recommended; use histogram)
histc=Histogram bin counts (not recommended; use histcounts)
rose=Angle histogram plot
bar=Bar graph
barh=Horizontal bar graph
bar3=Plot 3-D bar graph
bar3h=Plot horizontal 3-D bar graph
pareto=Pareto chart
stem=Plot discrete sequence data
stem3=Plot 3-D discrete sequence data
geoplot=Plot line in geographic coordinates
geoscatter=Scatter chart in geographic coordinates
geobubble=Visualize data values at specific geographic locations
geodensityplot=Geographic density plot
geobasemap=Set or query basemap
geolimits=Set or query geographic limits
geoaxes=Create geographic axes
geotickformat=Set or query geographic tick label format
polarplot=Plot line in polar coordinates
polarscatter=Scatter chart in polar coordinates
polarhistogram=Histogram chart in polar coordinates
compass=Plot arrows emanating from origin
ezpolar=Easy-to-use polar coordinate plotter
rlim=Set or query r-axis limits for polar axes
thetalim=Set or query theta-axis limits for polar axes
rticks=Set or query r-axis tick values
thetaticks=Set or query theta-axis tick values
rticklabels=Set or query r-axis tick labels
thetaticklabels=Set or query theta-axis tick labels
rtickformat=Specify r-axis tick label format
thetatickformat=Specify theta-axis tick label format
rtickangle=Rotate r-axis tick labels
polaraxes=Create polar axes
polar=(Not recommended) Polar coordinate plot
contour=Contour plot of matrix
contourf=Filled 2-D contour plot
contourc=Low-level contour plot computation
contour3=3-D contour plot
contourslice=Draw contours in volume slice planes
clabel=Label contour plot elevation
fcontour=Plot contours
ezcontour=(Not recommended) Easy-to-use contour plotter
ezcontourf=(Not recommended) Easy-to-use filled contour plotter
feather=Plot velocity vectors
quiver=Quiver or velocity plot
quiver3=3-D quiver or velocity plot
streamslice=Plot streamlines in slice planes
streamline=Plot streamlines from 2-D or 3-D vector data
surf=Surface plot
surfc=Contour plot under surface plot
surface=Primitive surface plot
surfl=Surface plot with colormap-based lighting
surfnorm=Surface normals
mesh=Mesh surface plot
meshc=Contour plot under mesh surface plot
meshz=Mesh surface plot with curtain
hidden=Remove hidden lines from mesh plot
fsurf=Plot 3-D surface
fmesh=Plot 3-D mesh
fimplicit3=Plot 3-D implicit function
waterfall=Waterfall plot
ribbon=Ribbon plot
peaks=Example function of two variables
cylinder=Create cylinder
ellipsoid=Generate ellipsoid
sphere=Create sphere
pcolor=Pseudocolor plot
surf2patch=Convert surface data to patch data
ezsurf=(Not recommended) Easy-to-use 3-D colored surface plotter
ezsurfc=(Not recommended) Easy-to-use combination surface/contour plotter
ezmesh=(Not recommended) Easy-to-use 3-D mesh plotter
ezmeshc=(Not recommended) Easy-to-use combination mesh/contour plotter
flow=Simple function of three variables
isocaps=Compute isosurface end-cap geometry
isocolors=Calculate isosurface and patch colors
isonormals=Compute normals of isosurface vertices
isosurface=Extract isosurface data from volume data
reducepatch=Reduce number of patch faces
reducevolume=Reduce number of elements in volume data set
shrinkfaces=Reduce size of patch faces
slice=Volume slice planes
smooth3=Smooth 3-D data
subvolume=Extract subset of volume data set
volumebounds=Coordinate and color limits for volume data
coneplot=Plot velocity vectors as cones in 3-D vector field
curl=Compute curl and angular velocity of vector field
divergence=Compute divergence of vector field
interpstreamspeed=Interpolate stream-line vertices from flow speed
stream2=Compute 2-D streamline data
stream3=Compute 3-D streamline data
streamparticles=Plot stream particles
streamribbon=3-D stream ribbon plot from vector volume data
streamtube=Create 3-D stream tube plot
fill=Filled 2-D polygons
fill3=Filled 3-D polygons
movie=Play recorded movie frames
getframe=Capture axes or figure as movie frame
frame2im=Return image data associated with movie frame
im2frame=Convert image to movie frame
animatedline=Create animated line
addpoints=Add points to animated line
getpoints=Return points that define animated line
clearpoints=Clear points from animated line
comet=2-D comet plot
comet3=3-D comet plot
drawnow=Update figures and process callbacks
title=Add title
sgtitle=Add title to subplot grid
xlabel=Label x-axis
ylabel=Label y-axis
zlabel=Label z-axis
text=Add text descriptions to data points
gtext=Add text to figure using mouse
xline=Vertical line with constant x-value
yline=Horizontal line with constant y-value
annotation=Create annotations
line=Create primitive line
rectangle=Create rectangle with sharp or curved corners
texlabel=Format text with TeX characters
ginput=Identify axes coordinates
xlim=Set or query x-axis limits
ylim=Set or query y-axis limits
zlim=Set or query z-axis limits
box=Display axes outline
daspect=Control data unit length along each axis
pbaspect=Control relative lengths of each axis
grid=Display or hide axes grid lines
xticks=Set or query x-axis tick values
yticks=Set or query y-axis tick values
zticks=Set or query z-axis tick values
xticklabels=Set or query x-axis tick labels
yticklabels=Set or query y-axis tick labels
zticklabels=Set or query z-axis tick labels
xtickformat=Specify x-axis tick label format
ytickformat=Specify y-axis tick label format
ztickformat=Specify z-axis tick label format
xtickangle=Rotate x-axis tick labels
ytickangle=Rotate y-axis tick labels
ztickangle=Rotate z-axis tick labels
datetick=Date formatted tick labels
ruler2num=Convert data from specific ruler to numeric data
num2ruler=Convert numeric data for use with specific ruler
hold=Retain current plot when adding new plots
yyaxis=Create chart with two y-axes
colororder=Set color order for visualizing multiple data series
tiledlayout=Create tiled chart layout
nexttile=Create axes in tiled chart layout
subplot=Create axes in tiled positions
cla=Clear axes
axes=Create Cartesian axes
figure=Create figure window
plotyy=(Not recommended) Create graph with two y-axes
colorbar=Colorbar showing color scale
rgbplot=Plot colormap
brighten=Brighten or darken colormap
contrast=Create grayscale colormap to enhance image contrast
caxis=Set colormap limits
spinmap=Rotate colormap colors
hsv2rgb=Convert HSV colors to RGB
rgb2hsv=Convert RGB colors to HSV
parula=Parula colormap array
jet=Jet colormap array
hsv=HSV colormap array
hot=Hot colormap array
cool=Cool colormap array
spring=Spring colormap array
summer=Summer colormap array
autumn=Autumn colormap array
winter=Winter colormap array
gray=Gray colormap array
bone=Bone colormap array
copper=Copper colormap array
pink=Pink colormap array
lines=Lines colormap array
colorcube=Colorcube colormap array
prism=Prism colormap array
flag=Flag colormap array
graymon=Set default figure properties for grayscale monitors
colordef=Set default property values to display different color schemes
whitebg=Change axes background color
view=Camera line of sight
makehgtform=Create 4-by-4 transform matrix
viewmtx=View transformation matrices
cameratoolbar=Control camera toolbar programmatically
campan=Rotate camera target around camera position
camzoom=Zoom in and out on scene
camdolly=Move camera position and target
camlookat=Position camera to view object or group of objects
camorbit=Rotate camera position around camera target
campos=Set or query camera position
camproj=Set or query projection type
camroll=Rotate camera about view axis
camtarget=Set or query location of camera target
camup=Set or query camera up vector
camva=Set or query camera view angle
camlight=Create or move light object in camera coordinates
light=Create light
lightangle=Create or position light object in spherical coordinates
lighting=Specify lighting algorithm
shading=Set color shading properties
diffuse=Calculate diffuse reflectance
material=Control reflectance properties of surfaces and patches
specular=Calculate specular reflectance
alim=Set or query axes alpha limits
alpha=Add transparency to objects in axes
alphamap=Specify figure alphamap (transparency)
imshow=Display image
image=Display image from array
imagesc=Display image with scaled colors
imresize=Resize image
imtile=Combine multiple image frames into one rectangular tiled image
imformats=Manage image file format registry
im2double=Convert image to double precision
ind2rgb=Convert indexed image to RGB image
rgb2gray=Convert RGB image or colormap to grayscale
rgb2ind=Convert RGB image to indexed image
getrangefromclass=Default display range of image based on its class
imapprox=Approximate indexed image by reducing number of colors
dither=Convert image, increasing apparent color resolution by dithering
cmpermute=Rearrange colors in colormap
cmunique=Eliminate duplicate colors in colormap; convert grayscale or truecolor image to indexed image
exportgraphics=Save plot or graphics content to file
copygraphics=Copy plot or graphics content to clipboard
saveas=Save figure to specific file format
hgexport=Export figure
print=Print figure or save to specific file format
orient=Paper orientation for printing or saving
printopt=Configure printer defaults
openfig=Open figure saved in FIG-file
savefig=Save figure and contents to FIG-file
hgsave=Save graphics object hierarchy to file
hgload=Load graphics object hierarchy from file
pagesetupdlg=Page setup dialog box
gca=Current axes or chart
gcf=Current figure handle
gcbf=Handle of figure containing object whose callback is executing
gcbo=Handle of object whose callback is executing
gco=Handle of current object
groot=Graphics root object
ancestor=Ancestor of graphics object
allchild=Find all children of specified objects
findall=Find all graphics objects
findobj=Locate graphics objects with specific properties
findfigs=Find visible offscreen figures
gobjects=Initialize array for graphics objects
ishandle=Test for valid graphics or Java object handle
copyobj=Copy graphics objects and their descendants
ishghandle=True for graphics object handles
clf=Clear current figure window
matlab.graphics.Graphics=Common base class for graphics objects
matlab.graphics.GraphicsPlaceholder=Default graphics object
uicontextmenu=Create context menu component
uimenu=Create menu or menu items
dragrect=Drag rectangles with mouse
rbbox=Create rubberband box for area selection
refresh=Redraw current figure
shg=Show most recent graph window
hggroup=Create group object
hgtransform=Create transform object
ishold=Current hold state
newplot=Determine where to draw graphics objects
matlab.graphics.chartcontainer.ChartContainer=Base class for developing chart objects
matlab.graphics.chartcontainer.mixin.Legend=Add legend support to chart container subclass
matlab.graphics.chartcontainer.mixin.Colorbar=Add colorbar support to chart container subclass
setup=Set up instance of chart container subclass
update=Update instance of chart container subclass after setting properties
getAxes=Get axes for chart container subclass
getLayout=Get tiled chart layout for chart container subclass
getLegend=Get legend object for legend mixin subclass
getColorbar=Get colorbar object for colorbar mixin subclass
rendererinfo=Graphics renderer information
opengl=Control OpenGL rendering
edit=Edit or create file
input=Request user input
publish=Generate view of MATLAB file in specified format
grabcode=Extract MATLAB code from file published to HTML
snapnow=Take snapshot of image for inclusion in published document
notebook=(Removed) Open MATLAB Notebook in Microsoft Word software (on Microsoft Windows platforms)
nargin=Number of function input arguments
nargout=Number of function output arguments
varargin=Variable-length input argument list
varargout=Variable-length output argument list
narginchk=Validate number of input arguments
nargoutchk=Validate number of output arguments
validatestring=Check validity of text
inputParser=Input parser for functions
inputname=Variable name of function input
mfilename=File name of currently running code
arguments=Declare function argument validation
namedargs2cell=Convert structure containing name-value pairs to cell array
mustBeFinite=Validate that value is finite or issue error
mustBeGreaterThan=Validate that value is greater than another value or issue error
mustBeGreaterThanOrEqual=Validate that value is greater than or equal to another value or issue error
mustBeInteger=Validate that value is integer or issue error
mustBeLessThan=Validate that value is less than another value or issue error
mustBeLessThanOrEqual=Validate that value is less than or equal to another value or issue error
mustBeMember=Validate that value is member of specified set
mustBeNegative=Validate that value is negative or issue error
mustBeNonempty=Validate that value is nonempty or issue error
mustBeNonNan=Validate that value is nonNaN
mustBeNonnegative=Validate that value is nonnegative or issue error
mustBeNonpositive=Validate that value is nonpositive or issue error
mustBeNonsparse=Validate that value is nonsparse or issue error
mustBeNonzero=Validate that value is nonzero or issue error
mustBeNumeric=Validate that value is numeric or issue error
mustBeNumericOrLogical=Validate that value is numeric or logical or issue error
mustBePositive=Validate that value is positive or issue error
mustBeReal=Validate that value is real or issue error
addRequired=Add required, positional argument into input parser scheme
addOptional=Add optional, positional argument into input parser scheme
addParameter=Add optional name-value pair argument into input parser scheme
addParamValue=(Not recommended) Add optional name-value pair argument into input parser scheme
parse=Parse function inputs
nargchk=Validate number of input arguments
persistent=Define persistent variable
assignin=Assign value to variable in specified workspace
global=Declare variables as global
mlock=Prevent clearing function or script from memory
munlock=Allow clearing function or script from memory
mislocked=Determine if function or script is locked in memory
isvarname=Determine if input is valid variable name
matlab.lang.makeUniqueStrings=Construct unique strings from input strings
matlab.lang.makeValidName=Construct valid MATLAB identifiers from input strings
namelengthmax=Maximum identifier length
genvarname=Construct valid variable name from string
error=Throw error and display message
warning=Display warning message
lastwarn=Last warning message
assert=Throw error if condition false
onCleanup=Cleanup tasks upon function completion
lasterr=Last error message
lasterror=Last error message and related information
enumeration=Class enumeration members and names
events=Event names
methods=Class method names
properties=Class property names
superclasses=Names of superclasses
classdef=Class definition keywords
import=Add package, class, or functions to current import list
isprop=True if property exists
dynamicprops=Superclass for classes that support dynamic properties
meta.DynamicProperty=Describe dynamic property of MATLAB object
event.DynamicPropertyEvent=Event data for dynamic property events
meta.property=Describe property of MATLAB class
meta.Validation=Describes property validation
meta.FixedDimension=Fixed dimension in property size specification
meta.UnrestrictedDimension=Unrestricted dimension in property size specification
meta.ArrayDimension=Size information for property validation
matlab.lang.OnOffSwitchState=Represent on and off states with logical values
ismethod=Determine if object has specified method
meta.method=Information about class method
eq=Determine equality
handle=Superclass of all handle classes
matlab.mixin.SetGet=Provide handle classes with set and get methods
matlab.mixin.SetGetExactNames=Require exact name match for set and get methods
matlab.mixin.Copyable=Superclass providing copy functionality for handle objects
addlistener=Create event listener bound to event source
listener=Create event listener without binding to event source
notify=Notify listeners that event is occurring
findprop=Find meta.property object
isvalid=Determine valid handles
relationaloperators=Determine equality or sort handle objects
hgsetget=Abstract class used to derive handle class with set and get methods
copy=Copy array of handle objects
copyElement=Copy scalar MATLAB object
setdisp=Customize set method display
getdisp=Customize get method display
event.hasListener=Determine if listeners exist for event
event.EventData=Base class for event data
event.ClassInstanceEvent=Event data for InstanceCreated and InstanceDestroyed events
event.listener=Class defining listener objects
event.PropertyEvent=Data for property events
event.proplistener=Define listener object for property events
matlab.mixin.Heterogeneous=Superclass for heterogeneous array formation
matlab.mixin.Heterogeneous.getDefaultScalarElement=Return default object for heterogeneous array operations
meta.EnumeratedValue=Describe enumeration member of MATLAB class
numArgumentsFromSubscript=Number of arguments for customized indexing methods
subsref=Subscripted reference
subsasgn=Redefine subscripted assignment
subsindex=Convert object to array index
substruct=Create structure argument for subsasgn or subsref
builtin=Execute built-in function from overloaded method
empty=Create empty array of specified class
display=Show information about variable or result of expression
details=Display array details
matlab.mixin.CustomDisplay=Interface for customizing object display
matlab.mixin.util.PropertyGroup=Custom property list for object display
matlab.mixin.CustomDisplay.convertDimensionsToString=Return array dimensions as text
displayEmptyObject=Display for empty object arrays
displayNonScalarObject=Display format for non-scalar objects
matlab.mixin.CustomDisplay.displayPropertyGroups=Display titles and property groups as defined
displayScalarHandleToDeletedObject=Display format for deleted scalar handles
displayScalarObject=Display format for scalar objects
matlab.mixin.CustomDisplay.getClassNameForHeader=Return class name for display
matlab.mixin.CustomDisplay.getDeletedHandleText=Returns text for handle to deleted object display
matlab.mixin.CustomDisplay.getDetailedFooter=Returns default detailed footer for object display
matlab.mixin.CustomDisplay.getDetailedHeader=Returns default detailed header for object display
getFooter=Build and return display footer text
matlab.mixin.CustomDisplay.getHandleText=Return text 'handle' with link to documentation
getHeader=Build and return display header text
getPropertyGroups=Construct array of property groups
matlab.mixin.CustomDisplay.getSimpleHeader=Return simple header for object display
saveobj=Modify save process for object
loadobj=Customize load process for objects
metaclass=Obtain meta.class object
meta.abstractDetails=Find abstract methods and properties
meta.class.fromName=Return meta.class object associated with named class
meta.package.fromName=Return meta.package object for specified package
meta.package.getAllPackages=Get all top-level packages
meta.class=Describe MATLAB class
meta.event=Describe event defined by MATLAB class
meta.package=Describe MATLAB package
meta.MetaData=Root of the hierarchy of metaclasses
step=Run System object algorithm
clone=Create duplicate System object
isDone=End-of-data status
isLocked=Determine if System object is in use
release=Release resources and allow changes to System object property values and input characteristics
setupImpl=Initialize System object
stepImpl=System output and state update equations
resetImpl=Reset System object states
releaseImpl=Release resources
infoImpl=Information about System object
isDoneImpl=End-of-data flag
isInactivePropertyImpl=Status of inactive property
isTunablePropertyDataTypeMutableImpl=Set whether tunable properties can change data type
isDiscreteStateSpecificationMutableImpl=Control whether discrete states can change data type
processTunedPropertiesImpl=Action when tunable properties change
setProperties=Set property values using name-value pairs when creating System object
validatePropertiesImpl=Validate property values of System object
getPropertyGroupsImpl=Property groups for System object display
getNumInputsImpl=Number of inputs to the System object
getNumOutputsImpl=Number of outputs from System object
getNumInputs=Number of inputs required to call the System object
getNumOutputs=Number of outputs from calling the System object
isInputComplexityMutableImpl=Set whether System object input complexity can change
isInputDataTypeMutableImpl=Set whether System object input data type can change
isInputSizeMutableImpl=Set whether System object input size can change
processInputSpecificationChangeImpl=Perform actions when input size, complexity, or data type change
validateInputsImpl=Validate inputs to System object
loadObjectImpl=Load System object from MAT file
saveObjectImpl=Save System object in MAT file
matlab.System=Base class for System objects
matlab.system.mixin.FiniteSource=Finite source mixin class
isInputSizeLockedImpl=Status of locked input size
matlab.system.StringSet=Set of valid character vector values
matlab.system.mixin.Nondirect=Nondirect feedthrough mixin class
matlab.system.mixin.Propagates=Signal characteristics propagation mixin class
matlab.system.mixin.CustomIcon=Custom icon mixin class
matlab.system.mixin.SampleTime=Control sample time for System objects in Simulink
getSimulinkFunctionNamesImpl=Register Simulink function names used in your System object
isInputDirectFeedthroughImpl=Direct feedthrough status of input
outputImpl=Output calculation from input or internal state of System object
updateImpl=Update object states based on inputs
allowModelReferenceDiscreteSampleTimeInheritanceImpl=Model reference sample time inheritance status for discrete sample times
getDiscreteStateImpl=Discrete state property values
getSimulateUsingImpl=Specify value for Simulate using parameter
showFiSettingsImpl=Fixed point data type tab visibility for System objects
showSimulateUsingImpl=Visibility of Simulate using parameter
supportsMultipleInstanceImpl=Support System object in Simulink For Each subsystem
getOutputSizeImpl=Sizes of output ports
getOutputDataTypeImpl=Data types of output ports
isOutputComplexImpl=Complexity of output ports
isOutputFixedSizeImpl=Fixed- or variable-size output ports
getDiscreteStateSpecificationImpl=Discrete state size, data type, and complexity
propagatedInputComplexity=Complexity of input during Simulink propagation
propagatedInputDataType=Data type of input during Simulink propagation
propagatedInputFixedSize=Fixed-size status of input during Simulink propagation
propagatedInputSize=Size of input during Simulink propagation
getIconImpl=Name to display as block icon
getHeaderImpl=Header for System object display
matlab.system.display.Action=Custom button
matlab.system.display.Header=Header for System objects properties
matlab.system.display.Icon=Custom icon image
matlab.system.display.Section=Property group section for System objects
matlab.system.display.SectionGroup=Section group for System objects
getInputNamesImpl=Names of MATLAB System block input ports
getOutputNamesImpl=Names of MATLAB System block output ports
getGlobalNamesImpl=Global variable names for MATLAB System block
createSampleTime=Create sample time specification object
getSampleTime=Query sample time
getSampleTimeImpl=Specify sample time type, offset time, and sample time
getCurrentTime=Current simulation time in MATLAB System block
getImpulseResponseLengthImpl=Define length of input effects for dataflow subsystems
getInputDimensionConstraintImpl=Define input dimension constraints for dataflow subsystems
getOutputDimensionConstraintImpl=Define output dimension constraints for dataflow subsystems
addpath=Add folders to search path
rmpath=Remove folders from search path
path=View or change search path
savepath=Save current search path
userpath=View or change default user work folder
genpath=Generate path name
pathsep=Search path separator for current platform
pathtool=Open Set Path dialog box to view and change search path
restoredefaultpath=Restore search path to factory-installed state
rehash=Refresh function and file system path caches
path2rc=Save current search path to pathdef.m file
ls=List folder contents
pwd=Identify current folder
fileattrib=Set or get attributes of file or folder
exist=Check existence of variable, script, function, folder, or class
isfile=Determine if input is file
isfolder=Determine if input is folder
visdiff=Compare two files or folders
what=List MATLAB files in folder
which=Locate functions and files
copyfile=Copy file or folder
recycle=Set option to move deleted files to recycle folder
movefile=Move or rename file or folder
winopen=Open file in appropriate application (Windows)
isdir=(Not recommended) Determine if input is folder on search path
zip=Compress files into zip file
unzip=Extract contents of zip file
gzip=Compress files into GNU zip files
gunzip=Extract contents of GNU zip file
tar=Compress files into tar file
untar=Extract contents of tar file
fileparts=Get parts of file name
fullfile=Build full file name from parts
filemarker=Character to separate file name from local or nested function name
filesep=File separator for current platform
tempdir=Name of temporary folder for the system
tempname=Unique name for temporary file
matlabroot=MATLAB root folder
toolboxdir=Root folder for specified toolbox
eval=Evaluate MATLAB expression
evalc=Evaluate MATLAB expression and capture results
evalin=Evaluate MATLAB expression in specified workspace
run=Run MATLAB script
pcode=Create content-obscured, executable files
timer=Create object to schedule execution of MATLAB commands
start=Start timer object
startat=Schedule timer to fire at specified time
timerfind=Find timer object
timerfindall=Find timer object, regardless of visibility
wait=Block command prompt until timer stops running
MException=Capture error information
addCause=Record additional causes of exception
addCorrection=Provide suggested fix for exception
getReport=Get error message for exception
MException.last=Return last uncaught exception
rethrow=Rethrow previously caught exception
throw=Throw exception
throwAsCaller=Throw exception as if occurs within calling function
matlab.lang.correction.AppendArgumentsCorrection=Correct error by appending missing input arguments
matlab.lang.correction.ConvertToFunctionNotationCorrection=Correct error by converting to function notation
matlab.lang.correction.ReplaceIdentifierCorrection=Correct error by replacing identifier in function call
maxNumCompThreads=Control maximum number of computational threads
appdesigner=Open App Designer Start Page or existing app file
uifigure=Create figure for designing apps
uigridlayout=Create grid layout manager
uipanel=Create panel container
uitabgroup=Create container for tabbed panels
uitab=Create tabbed panel
uiaxes=Create UI axes for plots in apps
uibutton=Create push button or state button component
uibuttongroup=Create button group to manage radio buttons and toggle buttons
uicheckbox=Create check box component
uidatepicker=Create date picker component
uidropdown=Create drop-down component
uieditfield=Create text or numeric edit field component
uiimage=Create image component
uilabel=Create label component
uilistbox=Create list box component
uiradiobutton=Create radio button component
uislider=Create slider component
uispinner=Create spinner component
uitable=Create table user interface component
uitextarea=Create text area component
uitogglebutton=Create toggle button component
uitree=Create tree component
uitreenode=Create tree node component
uipushtool=Create push tool in toolbar
uitoggletool=Create toggle tool in toolbar
uitoolbar=Create toolbar in figure
uigauge=Create gauge component
uiknob=Create knob component
uilamp=Create lamp component
uiswitch=Create slider switch, rocker switch, or toggle switch component
uihtml=Create HTML UI component
expand=Expand tree node
collapse=Collapse tree node
move=Move tree node
scroll=Scroll to location within container, list box, or tree
uistyle=Create style for table UI component
addStyle=Add style to table UI component
removeStyle=Remove style from table UI component
uialert=Display alert dialog box
uiconfirm=Create confirmation dialog box
uiprogressdlg=Create progress dialog box
uisetcolor=Open color picker
uigetfile=Open file selection dialog box
uiputfile=Open dialog box for saving files
uigetdir=Open folder selection dialog box
uiopen=Open file selection dialog box and load selected file into workspace
uisave=Open dialog box for saving variables to MAT-file
uicontrol=Create user interface control
align=Align UI components and graphics objects
movegui=Move figure to specified location on screen
getpixelposition=Get component position in pixels
setpixelposition=Set component position in pixels
listfonts=List available system fonts
textwrap=Wrap text for user interface control
uistack=Reorder visual stacking of UI components
errordlg=Create error dialog box
warndlg=Create warning dialog box
msgbox=Create message dialog box
helpdlg=Create help dialog box
waitbar=Create or update wait bar dialog box
questdlg=Create question dialog box
inputdlg=Create dialog box to gather user input
listdlg=Create list selection dialog box
uisetfont=Open font selection dialog box
export2wsdlg=Create dialog box for exporting variables to workspace
printdlg=Open figure Print dialog box
printpreview=Open figure Print Preview dialog box
exportsetupdlg=Open figure Export Setup dialog box
dialog=Create empty modal dialog box
uigetpref=Create dialog box that opens according to user preference
uiwait=Block program execution and wait to resume
uiresume=Resume execution of blocked program
waitfor=Block execution and wait for condition
waitforbuttonpress=Wait for click or key press
closereq=Default figure close request function
getappdata=Retrieve application-defined data
setappdata=Store application-defined data
isappdata=True if application-defined data exists
rmappdata=Remove application-defined data
guidata=Store or retrieve UI data
guihandles=Create structure containing all child objects of Figure
uisetpref=Manage preferences used in uigetpref
actxcontrol=(To be removed) Create Microsoft ActiveX control in figure window
menu=(Not recommended) Create multiple-choice dialog box
matlab.apputil.create=Create or modify app project file interactively using the Package App dialog box
matlab.apputil.package=Package app files into a .mlappinstall file
matlab.apputil.install=Install app from a .mlappinstall file
matlab.apputil.run=Run app programmatically
matlab.apputil.getInstalledAppInfo=List installed app information
matlab.apputil.uninstall=Uninstall app
guide=(To be removed) Create or edit UI file in GUIDE
dbclear=Remove breakpoints
dbcont=Resume execution
dbdown=Reverse dbup workspace shift
dbquit=Quit debug mode
dbstack=Function call stack
dbstatus=List all breakpoints
dbstep=Execute next executable line from current breakpoint
dbstop=Set breakpoints for debugging
dbtype=Display file with line numbers
dbup=Shift current workspace to workspace of caller in debug mode
keyboard=Give control to keyboard
echo=Display statements during function execution
checkcode=Check MATLAB code files for possible problems
mlintrpt=Run checkcode for file or folder
codeCompatibilityReport=Create code compatibility report
analyzeCodeCompatibility=Create code compatibility analysis results
CodeCompatibilityAnalysis=Code compatibility analysis results
mlint=Check MATLAB code files for possible problems
timeit=Measure time required to run function
tic=Start stopwatch timer
toc=Read elapsed time from stopwatch
cputime=Elapsed CPU time
profile=Profile execution time for functions
bench=MATLAB benchmark
memory=Display memory information
inmem=Names of functions, MEX-files, classes in memory
pack=Consolidate workspace memory
memoize=Add memoization semantics to function handle
MemoizedFunction=Call memoized function and cache results
clearAllMemoizedCaches=Clear caches for all MemoizedFunction objects
profsave=Save profile report in HTML format
stats=Return cached values and statistics for MemoizedFunction object
clearCache=Clear cache for MemoizedFunction object
currentProject=Get current project
openProject=Load an existing project
isLoaded=Determine if project is loaded
reload=Reload project
export=Export project to archive
matlab.project.createProject=Create blank project
matlab.project.deleteProject=Stop folder management and delete project definition files
matlab.project.loadProject=Load project
matlab.project.rootProject=Get root project
addFile=Add file or folder to project
addFolderIncludingChildFiles=Add folder and child files to project
removeFile=Remove file from project
addPath=Add folder to project path
removePath=Remove folder from project path
addReference=Add referenced project to project
removeReference=Remove project reference
addStartupFile=Add startup file to project
addShutdownFile=Add shutdown file to project
removeStartupFile=Remove startup file from project startup list
removeShutdownFile=Remove shutdown file from project shutdown list
addShortcut=Add shortcut to project
removeShortcut=Remove shortcut from project
addLabel=Attach label to project file
createLabel=Create project label
removeLabel=Remove label from project
findLabel=Get project file label
createCategory=Create category of project labels
findCategory=Find project category of labels
removeCategory=Remove project category of labels
findFile=Find project file by name
listModifiedFiles=List modified files in project
listRequiredFiles=Get project file dependencies
refreshSourceControl=Update source control status of project files
runChecks=Run all project checks
updateDependencies=Update project dependencies
matlab.project.Project=Project object
checkin=(Has been removed) Check files into source control system (UNIX platforms)
checkout=(Has been removed) Check files out of source control system (UNIX platforms)
cmopts=(Has been removed) Name of source control system
customverctrl=(Has been removed) Allow custom source control system (UNIX platforms)
undocheckout=(Has been removed) Undo previous checkout from source control system (UNIX platforms)
verctrl=(Has been removed) Source control actions (Windows platforms)
runtests=Run set of tests
testsuite=Create suite of tests
TestResult=Result of running test suite
functiontests=Create array of tests from handles to local functions
Test=Specification of single test method
FunctionTestCase=TestCase used for function-based tests
applyFixture=Use fixture with TestCase
onFailure=Dynamically add diagnostics for test failures
addPlugin=Add plugin to TestRunner object
runInParallel=Run all tests in TestSuite array in parallel
matlab.unittest.TestRunner.withNoPlugins=Create simplest runner possible
matlab.unittest.TestRunner.withTextOutput=Create TestRunner object for command window output
matlab.unittest.TestSuite.fromClass=Create suite from TestCase class
matlab.unittest.TestSuite.fromFile=Create TestSuite array from test file
matlab.unittest.TestSuite.fromFolder=Create TestSuite array from all tests in folder
matlab.unittest.TestSuite.fromName=Create Test object from name of test element
selectIf=Select test suite elements that satisfy conditions
sortByFixtures=Reorder test suite based on shared fixtures
matlab.unittest.constraints.Eventually=Poll for value to asynchronously satisfy constraint
matlab.unittest.constraints.HasField=Constraint specifying structure containing particular field
matlab.unittest.constraints.IsAnything=Constraint specifying any value
matlab.unittest.constraints.IsEqualTo=General constraint to compare for equality
matlab.unittest.constraints.IsFalse=Constraint specifying false value
matlab.unittest.constraints.IsFile=Constraint specifying value points to file
matlab.unittest.constraints.IsFolder=Constraint specifying value points to folder
matlab.unittest.constraints.IsSameSetAs=Constraint specifying set contains same elements as another set
matlab.unittest.constraints.IsSameHandleAs=Constraint specifying handle instance same as another
matlab.unittest.constraints.IsScalar=Constraint specifying scalar value
matlab.unittest.constraints.IsTrue=Constraint specifying true value
matlab.unittest.constraints.ReturnsTrue=Constraint specifying function handle that returns true
matlab.unittest.constraints.IssuesNoWarnings=Constraint specifying function that issues no warnings
matlab.unittest.constraints.IssuesWarnings=Constraint specifying function that issues expected warning profile
matlab.unittest.constraints.Throws=Constraint specifying function handle that throws MException
matlab.unittest.constraints.IsGreaterThan=Constraint specifying value greater than another value
matlab.unittest.constraints.IsGreaterThanOrEqualTo=Constraint specifying value greater than or equal to another value
matlab.unittest.constraints.IsLessThan=Constraint specifying value less than another value
matlab.unittest.constraints.IsLessThanOrEqualTo=Constraint specifying value less than or equal to another value
matlab.unittest.constraints.HasElementCount=Constraint specifying expected number of elements
matlab.unittest.constraints.HasLength=Constraint specifying expected length of array
matlab.unittest.constraints.HasSize=Constraint specifying expected size of array
matlab.unittest.constraints.IsEmpty=Constraint specifying empty value
matlab.unittest.constraints.IsInstanceOf=Constraint specifying inclusion in given class hierarchy
matlab.unittest.constraints.IsOfClass=Constraint specifying class type
matlab.unittest.constraints.ContainsSubstring=Constraint specifying string containing substring
matlab.unittest.constraints.EndsWithSubstring=Constraint specifying string ending with substring
matlab.unittest.constraints.IsSubstringOf=Constraint specifying substring of another string
matlab.unittest.constraints.Matches=Constraint specifying string matches regular expression
matlab.unittest.constraints.StartsWithSubstring=Constraint specifying string starting with substring
matlab.unittest.constraints.HasInf=Constraint specifying array containing any infinite value
matlab.unittest.constraints.HasNaN=Constraint specifying array containing NaN value
matlab.unittest.constraints.IsFinite=Constraint specifying finite value
matlab.unittest.constraints.IsReal=Constraint specifying real valued array
matlab.unittest.constraints.IsSparse=Constraint specifying sparse array
matlab.unittest.constraints.AnyCellOf=Test if any element of cell array meets constraint
matlab.unittest.constraints.AnyElementOf=Test if any element of array meets constraint
matlab.unittest.constraints.EveryCellOf=Test if all elements of cell array meet constraint
matlab.unittest.constraints.EveryElementOf=Test if all elements of array meet constraint
matlab.unittest.constraints.AbsoluteTolerance=Absolute numeric tolerance
matlab.unittest.constraints.RelativeTolerance=Relative numeric tolerance
matlab.unittest.constraints.CellComparator=Comparator for cell arrays
matlab.unittest.constraints.LogicalComparator=Comparator for two logical values
matlab.unittest.constraints.NumericComparator=Comparator for numeric data types
matlab.unittest.constraints.ObjectComparator=Comparator for MATLAB or Java objects
matlab.unittest.constraints.PublicPropertyComparator=Comparator for public properties of MATLAB objects
matlab.unittest.constraints.StringComparator=Comparator for two strings, character arrays, or cell arrays of character arrays
matlab.unittest.constraints.StructComparator=Comparator for MATLAB structure arrays
matlab.unittest.diagnostics.DisplayDiagnostic=Diagnostic using a value's displayed output
matlab.unittest.diagnostics.FunctionHandleDiagnostic=Diagnostic using a function's displayed output
matlab.unittest.diagnostics.FrameworkDiagnostic=Diagnostic provided by testing framework
matlab.unittest.diagnostics.StringDiagnostic=Diagnostic using string
matlab.unittest.diagnostics.LoggedDiagnosticEventData=Event data for DiagnosticLogged event listeners
matlab.unittest.qualifications.AssertionFailedException=Exception used for assertion failures
matlab.unittest.qualifications.AssumptionFailedException=Exception used for assumption failures
matlab.unittest.qualifications.ExceptionEventData=Event data for ExceptionThrown event listeners
matlab.unittest.qualifications.FatalAssertionFailedException=Exception used for fatal assertion failures
matlab.unittest.qualifications.QualificationEventData=Event data for qualification event listeners
matlab.unittest.qualifications.Assertable=Qualification to validate preconditions of a test
assertClass=Assert exact class of specified value
assertEmpty=Assert value is empty
assertEqual=Assert value is equal to specified value
assertError=Assert function throws specified exception
assertFail=Produce unconditional assertion failure
assertFalse=Assert value is false
assertGreaterThan=Assert value is greater than specified value
assertGreaterThanOrEqual=Assert value is greater than or equal to specified value
assertInstanceOf=Assert value is object of specified type
assertLength=Assert value has specified length
assertLessThan=Assert value is less than specified value
assertLessThanOrEqual=Assert value is less than or equal to specified value
assertMatches=Assert string matches specified regular expression
assertNotEmpty=Assert value is not empty
assertNotEqual=Assert value is not equal to specified value
assertNotSameHandle=Assert value is not handle to specified instance
assertNumElements=Assert value has specified element count
assertReturnsTrue=Assert function returns true when evaluated
assertSameHandle=Assert two values are handles to same instance
assertSize=Assert value has specified size
assertSubstring=Assert string contains specified string
assertThat=Assert that value meets specified constraint
assertTrue=Assert value is true
assertWarning=Assert function issues specified warnings
assertWarningFree=Assert function issues no warnings
matlab.unittest.qualifications.Assumable=Qualification to filter test content
assumeClass=Assume exact class of specified value
assumeEmpty=Assume value is empty
assumeEqual=Assume value is equal to specified value
assumeError=Assume function throws specified exception
assumeFail=Produce unconditional assumption failure
assumeFalse=Assume value is false
assumeGreaterThan=Assume value is greater than specified value
assumeGreaterThanOrEqual=Assume value is greater than or equal to specified value
assumeInstanceOf=Assume value is object of specified type
assumeLength=Assume value has specified length
assumeLessThan=Assume value is less than specified value
assumeLessThanOrEqual=Assume value is less than or equal to specified value
assumeMatches=Assume string matches specified regular expression
assumeNotEmpty=Assume value is not empty
assumeNotEqual=Assume value is not equal to specified value
assumeNotSameHandle=Assume value is not handle to specified instance
assumeNumElements=Assume value has specified element count
assumeReturnsTrue=Assume function returns true when evaluated
assumeSameHandle=Assume two values are handles to same instance
assumeSize=Assume value has specified size
assumeSubstring=Assume string contains specified string
assumeThat=Assume value meets specified constraint
assumeTrue=Assume value is true
assumeWarning=Assume function issues specified warnings
assumeWarningFree=Assume function issues no warnings
matlab.unittest.qualifications.FatalAssertable=Qualification to abort test execution
fatalAssertClass=Fatally assert exact class of specified value
fatalAssertEmpty=Fatally assert value is empty
fatalAssertEqual=Fatally assert value is equal to specified value
fatalAssertError=Fatally assert function throws specified exception
fatalAssertFail=Produce unconditional fatal assertion failure
fatalAssertFalse=Fatally assert value is false
fatalAssertGreaterThan=Fatally assert value is greater than specified value
fatalAssertGreaterThanOrEqual=Fatally assert value is greater than or equal to specified value
fatalAssertInstanceOf=Fatally assert value is object of specified type
fatalAssertLength=Fatally assert value has specified length
fatalAssertLessThan=Fatally assert value is less than specified value
fatalAssertLessThanOrEqual=Fatally assert value is less than or equal to specified value
fatalAssertMatches=Fatally assert string matches specified regular expression
fatalAssertNotEmpty=Fatally assert value is not empty
fatalAssertNotEqual=Fatally assert value is not equal to specified value
fatalAssertNotSameHandle=Fatally assert value is not handle to specified instance
fatalAssertNumElements=Fatally assert value has specified element count
fatalAssertReturnsTrue=Fatally assert function returns true when evaluated
fatalAssertSameHandle=Fatally assert two values are handles to same instance
fatalAssertSize=Fatally assert value has specified size
fatalAssertSubstring=Fatally assert string contains specified string
fatalAssertThat=Fatally assert value meets specified constraint
fatalAssertTrue=Fatally assert value is true
fatalAssertWarning=Fatally assert function issues specified warnings
fatalAssertWarningFree=Fatally assert function issues no warnings
matlab.unittest.qualifications.Verifiable=Qualification to produce soft failure conditions
verifyClass=Verify exact class of specified value
verifyEmpty=Verify value is empty
verifyEqual=Verify value is equal to specified value
verifyError=Verify function throws specified exception
verifyFail=Produce unconditional verification failure
verifyFalse=Verify value is false
verifyGreaterThan=Verify value is greater than specified value
verifyGreaterThanOrEqual=Verify value is greater than or equal to specified value
verifyInstanceOf=Verify value is object of specified type
verifyLength=Verify value has specified length
verifyLessThan=Verify value is less than specified value
verifyLessThanOrEqual=Verify value is less than or equal to specified value
verifyMatches=Verify string matches specified regular expression
verifyNotEmpty=Verify value is not empty
verifyNotEqual=Verify value is not equal to specified value
verifyNotSameHandle=Verify value is not handle to specified instance
verifyNumElements=Verify value has specified element count
verifyReturnsTrue=Verify function returns true when evaluated
verifySameHandle=Verify two values are handles to same instance
verifySize=Verify value has specified size
verifySubstring=Verify string contains specified string
verifyThat=Verify value meets given constraint
verifyTrue=Verify value is true
verifyWarning=Verify function issues specified warnings
verifyWarningFree=Verify function issues no warnings
matlab.unittest.selectors.HasBaseFolder=Selector for TestSuite elements determined by folder
matlab.unittest.selectors.HasName=Selector for TestSuite elements determined by name
matlab.unittest.TestCase=Superclass of all matlab.unittest test classes
matlab.unittest.TestSuite=Class for grouping tests to run
matlab.unittest.Test=Specification of single test method
matlab.unittest.TestRunner=Class for running tests in matlab.unittest framework
matlab.unittest.TestResult=Result of running test suite
matlab.unittest.plugins.FailureDiagnosticsPlugin=(Not recommended) Plugin to show diagnostics on failure
matlab.unittest.Scope=Test scope enumeration class
matlab.unittest.Verbosity=Verbosity level enumeration class
addTeardown=Dynamically add teardown routine to TestCase instance
matlab.unittest.TestCase.forInteractiveUse=Create TestCase for interactive use
getSharedTestFixtures=Provide access to shared test fixtures
matlab.unittest.TestSuite.fromMethod=Create TestSuite array from single test method
matlab.unittest.TestSuite.fromPackage=Create TestSuite array from all tests in package
matlab.unittest.TestSuite.fromProject=Create test suite array from tests in project
matlab.unittest.constraints.HasUniqueElements=Constraint specifying set contains unique elements
matlab.unittest.constraints.IsSubsetOf=Constraint specifying actual set is subset of expected set
matlab.unittest.constraints.IsSupersetOf=Constraint specifying actual set is superset of expected set
matlab.unittest.constraints.PublicPropertyComparator.supportingAllValues=Comparator for public properties that supports any value in recursion
matlab.unittest.constraints.TableComparator=Comparator for MATLAB tables
matlab.unittest.constraints.AndConstraint=Boolean conjunction of two constraints
matlab.unittest.constraints.OrConstraint=Boolean disjunction of two constraints
matlab.unittest.constraints.NotConstraint=Boolean complement of constraint
matlab.unittest.constraints.AndTolerance=Boolean conjunction of two tolerances
matlab.unittest.constraints.OrTolerance=Boolean disjunction of two constraints
matlab.unittest.diagnostics.DiagnosticResult=Result of a diagnosed Diagnostic instance
matlab.unittest.diagnostics.FigureDiagnostic=Diagnostic to save specified figure
matlab.unittest.diagnostics.ScreenshotDiagnostic=Diagnostic to capture screen as image file
matlab.unittest.diagnostics.FileArtifact=Artifact associated with a file on disk
copyTo=Copy artifacts to new location
matlab.unittest.fixtures.CurrentFolderFixture=Fixture for changing current working folder
matlab.unittest.fixtures.PathFixture=Fixture for adding a folder to the MATLAB path
matlab.unittest.fixtures.ProjectFixture=Fixture for loading project
matlab.unittest.fixtures.SuppressedWarningsFixture=Fixture to suppress display of warnings
matlab.unittest.fixtures.TemporaryFolderFixture=Fixture for creating a temporary folder
matlab.unittest.fixtures.WorkingFolderFixture=Fixture for creating and changing to temporary working folder
matlab.unittest.parameters.ClassSetupParameter=Specification of Class Setup Parameter
matlab.unittest.parameters.EmptyParameter=Empty parameter implementation
matlab.unittest.parameters.MethodSetupParameter=Specification of Method Setup Parameter
matlab.unittest.parameters.Parameter=Base class for parameters
matlab.unittest.parameters.Parameter.fromData=Create parameters from data
matlab.unittest.parameters.TestParameter=Specification of Test Parameter
matlab.unittest.plugins.CodeCoveragePlugin=Plugin that produces a code coverage report
matlab.unittest.plugins.CodeCoveragePlugin.forFolder=Construct CodeCoveragePlugin for folders
matlab.unittest.plugins.CodeCoveragePlugin.forPackage=Construct CodeCoveragePlugin for packages
matlab.unittest.plugins.CodeCoveragePlugin.forFile=Construct CodeCoveragePlugin for files
matlab.unittest.plugins.DiagnosticsOutputPlugin=Plugin to direct diagnostics to output stream
matlab.unittest.plugins.DiagnosticsRecordingPlugin=Plugin to record diagnostics on test results
matlab.unittest.plugins.DiagnosticsValidationPlugin=Plugin to help validate diagnostic code
matlab.unittest.plugins.FailOnWarningsPlugin=Plugin to fail tests that issue warnings
matlab.unittest.plugins.StopOnFailuresPlugin=Plugin to debug test failures
matlab.unittest.plugins.TestReportPlugin=Plugin that produces a test result report
matlab.unittest.plugins.TestReportPlugin.producingDOCX=Constructs plugin that produces .docx report
matlab.unittest.plugins.TestReportPlugin.producingHTML=Constructs plugin that produces .html report
matlab.unittest.plugins.TestReportPlugin.producingPDF=Constructs plugin that produces .pdf report
matlab.unittest.plugins.TestRunProgressPlugin=Plugin that reports test run progress
matlab.unittest.plugins.TAPPlugin=Plugin that produces Test Anything Protocol stream
matlab.unittest.plugins.TAPPlugin.producingOriginalFormat=Construct TAPPlugin for original TAP format
matlab.unittest.plugins.TAPPlugin.producingVersion13=Construct TAPPlugin for version 13 TAP format
matlab.unittest.plugins.ToFile=Output stream to write text output to file
matlab.unittest.plugins.ToStandardOutput=Output stream to display text information to screen
matlab.unittest.plugins.ToUniqueFile=Output stream to write text output to unique file
matlab.unittest.plugins.LoggingPlugin=Plugin to report diagnostic messages
matlab.unittest.plugins.LoggingPlugin.withVerbosity=Construct LoggingPlugin for messages of specified verbosity
matlab.unittest.plugins.XMLPlugin=Plugin that writes test results in XML format
matlab.unittest.plugins.XMLPlugin.producingJUnitFormat=Construct plugin to write test results in XML format
matlab.unittest.plugins.testreport.DOCXTestReportPlugin=TestReportPlugin that creates a test report in .docx format
matlab.unittest.plugins.testreport.HTMLTestReportPlugin=TestReportPlugin that creates a test report in .html format
matlab.unittest.plugins.testreport.PDFTestReportPlugin=TestReportPlugin that creates a test report in .pdf format
matlab.unittest.plugins.codecoverage.CoverageReport=Format for code coverage report
matlab.unittest.plugins.codecoverage.CoberturaFormat=Format to create code coverage report using Cobertura XML format
matlab.unittest.plugins.codecoverage.ProfileReport=(To be removed) Format to create MATLAB Profiler Coverage Report
matlab.unittest.plugins.diagnosticrecord.DiagnosticRecord=Diagnostic information
selectFailed=Return diagnostic records for failed events
selectIncomplete=Return diagnostic records for incomplete events
selectLogged=Return diagnostic records for logged events
selectPassed=Return diagnostic records for passed events
matlab.unittest.plugins.diagnosticrecord.ExceptionDiagnosticRecord=Diagnostic information about errors
matlab.unittest.plugins.diagnosticrecord.LoggedDiagnosticRecord=Diagnostic information about logged events
matlab.unittest.plugins.diagnosticrecord.QualificationDiagnosticRecord=Diagnostic information about qualification events
matlab.unittest.selectors.AndSelector=Boolean conjunction of two selectors
matlab.unittest.selectors.HasParameter=Selector for TestSuite elements determined by parameterization
matlab.unittest.selectors.HasProcedureName=Selector for TestSuite elements determined by procedure name
matlab.unittest.selectors.HasSharedTestFixture=Selector for TestSuite elements that use shared test fixture
matlab.unittest.selectors.HasSuperclass=Selector for TestSuite elements determined by test class hierarchy
matlab.unittest.selectors.HasTag=Selector for TestSuite elements determined by tag
matlab.unittest.selectors.NotSelector=Boolean complement of selector
matlab.unittest.selectors.OrSelector=Boolean disjunction of two selectors
matlab.unittest.constraints.Constraint=Fundamental interface class for comparisons
matlab.unittest.constraints.BooleanConstraint=Interface class for Boolean combinations of constraints
matlab.unittest.constraints.Tolerance=Abstract interface class for tolerances
matlab.unittest.fixtures.Fixture=Interface class for test fixtures
matlab.unittest.diagnostics.Diagnostic=Fundamental interface class for matlab.unittest diagnostics
matlab.unittest.diagnostics.ConstraintDiagnostic=Diagnostic with fields common to most constraints
matlab.unittest.plugins.TestRunnerPlugin=Plugin interface for extending TestRunner
matlab.unittest.plugins.Parallelizable=Interface for plugins that support running tests in parallel
matlab.unittest.plugins.QualifyingPlugin=Interface for plugins that perform system-wide qualifications
matlab.unittest.plugins.OutputStream=Interface that determines where to send text output
matlab.test.behavior.Missing=Test if class satisfies contract for missing values
matlab.unittest.plugins.plugindata.CommunicationBuffer=Buffer for parallelizable plugins
matlab.unittest.plugins.plugindata.FinalizedResultPluginData=Plugin data containing finalized test result information
matlab.unittest.plugins.plugindata.FinalizedSuitePluginData=Plugin data containing finalized TestSuite information
matlab.unittest.plugins.plugindata.ImplicitFixturePluginData=Plugin data containing test setup and teardown information
matlab.unittest.plugins.plugindata.PluginData=Data object passed to TestRunnerPlugin methods
matlab.unittest.plugins.plugindata.QualificationContext=Context for qualifying plugins
matlab.unittest.plugins.plugindata.ResultDetails=Class for modifying test result details
matlab.unittest.plugins.plugindata.RunPluginData=Plugin data describing Test elements being run
matlab.unittest.plugins.plugindata.SharedTestFixturePluginData=Plugin data containing shared test fixture information
matlab.unittest.plugins.plugindata.TestContentCreationPluginData=Plugin data containing test content creation information
matlab.unittest.plugins.plugindata.TestSuiteRunPluginData=Plugin data describing TestSuite portion being run
getNegativeDiagnosticFor=Produce negated diagnostic for value
getDiagnosticFor=Produce diagnostic for compared value
satisfiedBy=Determine whether value satisfies constraint
supports=Determine whether tolerance supports specified data type
teardown=Tear down fixture
isCompatible=Determine if two fixtures of the same class are interchangeable
addCondition=Add condition to condition list
addConditionsFrom=Add condition from another ConstraintDiagnostic to condition list
matlab.unittest.diagnostics.ConstraintDiagnostic.getDisplayableString=Convert object to string for display
getPreDescriptionString=Returns text to be displayed prior to description
getPostDescriptionString=Returns text to be displayed following description
getPostConditionString=Returns text to be displayed following conditions list
getPostActValString=Returns text to be displayed following actual value
getPostExpValString=Returns text to be displayed following expected value
diagnose=Execute diagnostic action
supportsParallel=Specify when plugin supports running tests in parallel
storeIn=Store data collected for group of tests
retrieveFrom=Retrieve data stored for group of tests
assertUsing=Assert that value satisfies given constraint
assumeUsing=Assume that value satisfies given constraint
fatalAssertUsing=Fatally assert that value satisfies given constraint
verifyUsing=Verify that value satisfies given constraint
createSharedTestFixture=Extend creation of shared test fixture instances
createTestClassInstance=Extend creation of class-level TestCase instances
createTestMethodInstance=Extend creation of method-level TestCase instances
reportFinalizedResult=Enable reporting of finalized test results
reportFinalizedSuite=Extend reporting of finalized TestSuite array
runSession=Extend running of test session
runTest=Extend running of single Test element
runTestClass=Extend running of Test elements from same class or function
runTestSuite=Extend running of TestSuite array
runTestMethod=Extend running of single test method
setupSharedTestFixture=Extend setting up shared test fixture
setupTestClass=Extend setting up test class
setupTestMethod=Extend setting up test method
teardownSharedTestFixture=Extend tearing down shared test fixture
teardownTestClass=Extend tearing down test class
teardownTestMethod=Extend tearing down test method
press=Perform press gesture on UI component
choose=Perform choose gesture on UI component
drag=Perform drag gesture on UI component
hover=Perform hover gesture on UI component
matlab.uitest.unlock=Unlock figure locked by app testing framework
matlab.uitest.TestCase.forInteractiveUse=Create a TestCase object for interactive use
matlab.uitest.TestCase=TestCase to write tests with app testing framework
runperf=Run set of tests for performance measurement
matlab.perftest.TimeExperiment=Interface for measuring execution time of code under test
matlab.perftest.FixedTimeExperiment=TimeExperiment that collects fixed number of measurements
matlab.perftest.FrequentistTimeExperiment=TimeExperiment that collects variable number of measurements
matlab.perftest.TestCase=Superclass of matlab.perftest performance test classes
matlab.perftest.TimeResult=Result from running time experiment
matlab.unittest.measurement.DefaultMeasurementResult=Default implementation of MeasurementResult class
matlab.unittest.measurement.MeasurementResult=Base class for classes holding measurement results
matlab.unittest.measurement.chart.ComparisonPlot=Visually compare two sets of time experiment results
samplefun=Apply function across samples of MeasurementResult array
sampleSummary=Create table of summary statistics from MeasurementResult array
matlab.perftest.TimeExperiment.limitingSamplingError=Construct time experiment for specified margin of error and confidence level
matlab.perftest.TimeExperiment.withFixedSampleSize=Construct time experiment with fixed number of measurements
comparisonPlot=Create plot to compare baseline and measurement test results
keepMeasuring=Measure code with automatic looping
startMeasuring=Designate start of measurement boundary
stopMeasuring=Designate end of measurement boundary
matlab.mock.TestCase=TestCase to write tests with mocking framework
matlab.mock.AnyArguments=Match any number of arguments
matlab.mock.actions.AssignOutputs=Define return values for method called or property accessed
matlab.mock.actions.DoNothing=Take no action
matlab.mock.actions.Invoke=Invoke function handle when method is called
matlab.mock.actions.ReturnStoredValue=Return stored property value
matlab.mock.actions.StoreValue=Store property value
matlab.mock.actions.ThrowException=Throw exception when method is called or when property is set or accessed
matlab.mock.constraints.Occurred=Constraint qualifying mock object interactions
matlab.mock.constraints.WasAccessed=Constraint determining property get access
matlab.mock.constraints.WasCalled=Constraint determining method call
matlab.mock.constraints.WasSet=Constraint determining property set interaction
matlab.mock.MethodCallBehavior=Specify mock object method behavior and qualify method calls
matlab.mock.PropertyBehavior=Specify mock object property behavior and qualify interactions
matlab.mock.PropertyGetBehavior=Specify mock property get behavior
matlab.mock.PropertySetBehavior=Specify mock object set behavior
getMockHistory=Return history of mock interactions from TestCase instance
matlab.mock.InteractionHistory.forMock=Return history from mock object
matlab.mock.InteractionHistory=Interface for mock object interaction history
assertAccessed=Assert that a property was accessed
assertCalled=Assert that a method was called with certain input values
assertSet=Assert that a property was set
assertNotAccessed=Assert that a property was not accessed
assertNotCalled=Assert that a method was not called with certain input values
assertNotSet=Assert that a property was not set
assignOutputsWhen=Define return values for method call or property access
assumeAccessed=Assume that a property was accessed
assumeCalled=Assume that a method was called with certain input values
assumeSet=Assume that a property was set
assumeNotAccessed=Assume that a property was not accessed
assumeNotCalled=Assume that a method was not called with certain input values
assumeNotSet=Assume that a property was not set
createMock=Create mock object
clearMockHistory=Clear history of mock object interactions
fatalAssertAccessed=Fatally assert that a property was accessed
fatalAssertCalled=Fatally assert that a method was called with certain input values
fatalAssertSet=Fatally assert that a property was set
fatalAssertNotAccessed=Fatally assert that a property was not accessed
fatalAssertNotCalled=Fatally assert that a method was not called with certain input values
fatalAssertNotSet=Fatally assert that a property was not set
matlab.mock.TestCase.forInteractiveUse=Create TestCase for interactive use of mock objects
returnStoredValueWhen=Return stored value when property is accessed
storeValueWhen=Store value when property is set
throwExceptionWhen=Throw exception for method call or property interaction
verifyAccessed=Verify that a property was accessed
verifyCalled=Verify that a method was called with certain input values
verifySet=Verify that a property was set
verifyNotAccessed=Verify that a property was not accessed
verifyNotCalled=Verify that a method was not called with certain input values
verifyNotSet=Verify that a property was not set
when=Specify mock object method behavior
withAnyInputs=Specify mock object method call with any number of inputs with any value
withExactInputs=Specify mock object method call with only object as input
withNargout=Specify mock object method call with defined number of output arguments
setToValue=Construct object to define behavior when mocked property is set to specific value
repeat=Repeat defining return values
then=Action for mock object interaction or action subsequent to defining return values
matlab.mock.history.MethodCall=Representation of mock object method call
matlab.mock.history.PropertyAccess=Representation of mock object property access
matlab.mock.history.PropertyModification=Representation of mock object property modification
matlab.mock.history.SuccessfulMethodCall=Representation of successful mock object method call
matlab.mock.history.SuccessfulPropertyAccess=Representation of successful mock object property access
matlab.mock.history.SuccessfulPropertyModification=Representation of successful mock object property modification
matlab.mock.history.UnsuccessfulMethodCall=Representation of unsuccessful mock object method call
matlab.mock.history.UnsuccessfulPropertyAccess=Representation of unsuccessful mock object property access
matlab.mock.history.UnsuccessfulPropertyModification=Representation of unsuccessful mock object property modification
matlab.addons.toolbox.packageToolbox=Package toolbox project
matlab.addons.toolbox.toolboxVersion=Query or modify version of toolbox
matlab.addons.toolbox.installToolbox=Install toolbox file
matlab.addons.toolbox.uninstallToolbox=Uninstall toolbox
matlab.addons.toolbox.installedToolboxes=Return information about installed toolboxes
builddocsearchdb=Build searchable documentation database
validateFunctionSignaturesJSON=Validate functionSignatures.json files
matlab.codetools.requiredFilesAndProducts=List dependencies of MATLAB program files
matlab.settings.FactoryGroup.createToolboxGroup=Create FactoryGroup root object for toolbox
addGroup=Add new factory settings group
addSetting=Add new factory setting
matlab.settings.mustBeLogicalScalar=Validate that setting value is logical array with one element
matlab.settings.mustBeNumericScalar=Validate that setting value is numeric array with one element
matlab.settings.mustBeStringScalar=Validate that setting value is string array with one element
matlab.settings.mustBeIntegerScalar=Validate that setting value is integer array with one element
SettingsFileUpgrader=Settings file upgrader object
matlab.settings.reloadFactoryFile=Load or reload factory settings
matlab.settings.loadSettingsCompatibilityResults=Get results of upgrading personal settings of toolbox for specific version
FactoryGroup=Group of factory settings and factory subgroup objects
FactorySetting=Factory settings object
ReleaseCompatibilityResults=Release compatibility results object
ReleaseCompatibilityException=Release compatibility exception object
VersionResults=Version results object
OperationResult=Operation result object
clibgen.generateLibraryDefinition=Create definition file for C++ library
clibgen.buildInterface=Create interface to C++ library without definition file
clibgen.LibraryDefinition=MATLAB definition for C++ library
clibgen.ClassDefinition=Definition for MATLAB class corresponding to C++ class
clibgen.ConstructorDefinition=Definition for MATLAB function corresponding to C++ class constructor
clibgen.PropertyDefinition=Definition for MATLAB property corresponding to public property of C++ class
clibgen.MethodDefinition=Definition for MATLAB function corresponding to C++ class method
clibgen.FunctionDefinition=Definition for MATLAB function corresponding to C++ package function
clibgen.EnumDefinition=Definition for MATLAB enumeration corresponding to C++ enumeration
addConstructor=Add constructor to C++ class definition
addMethod=Add method to C++ class definition
addProperty=Add property to C++ class definition
defineArgument=Add input argument definition for C++ constructor
validate=Validate C++ constructor definition
defineOutput=Add output argument definition for C++ package function
addClass=Add class to library definition
addEnumeration=Add enumeration to library definition
addFunction=Add function to library definition
build=Build library interface
clibArray=Create MATLAB object for C++ array or std::vector
clibConvertArray=Convert numeric array to MATLAB object for C++ array
clibIsNull=Determine if C++ object is null
clibIsReadOnly=Determine if C++ object is read-only
clibRelease=Release C++ object from MATLAB
underlyingValue=Underlying numeric value for C++ enumeration object created in MATLAB
loadlibrary=Load C shared library into MATLAB
unloadlibrary=Unload shared C library from memory
calllib=Call function in C shared library
libfunctions=Return information on functions in shared C library
libfunctionsview=Display shared C library function signatures in window
libisloaded=Determine if shared C library is loaded
libpointer=Pointer object for use with shared C library
libstruct=Convert MATLAB structure to C-style structure for use with shared C library
lib.pointer=Pointer object compatible with C pointer
isNull=Points to NULL pointer
plus=+ (plus) operator for pointer arithmetic
setdatatype=Initialize type and size of lib.pointer object
mexext=Binary MEX file-name extension
javaaddpath=Add entries to dynamic Java class path
javaArray=Construct Java array object
javachk=Error message based on Java feature support
javaclasspath=Return Java class path or specify dynamic path
javaMethod=Call Java method
javaMethodEDT=Call Java method from Event Dispatch Thread (EDT)
javaObject=Call Java constructor
javaObjectEDT=Call Java constructor on Event Dispatch Thread (EDT)
javarmpath=Remove entries from dynamic Java class path
usejava=Determine if Java feature is available
matlab.exception.JavaException=Capture error information for Java exception
pyenv=Change default environment of Python interpreter
PythonEnvironment=Python environment information
terminate=Terminate process associated with Python interpreter
pyversion=(Not recommended) Change default version of Python interpreter
matlab.exception.PyException=Capture error information for Python exception
pyargs=Create keyword arguments for Python function
NET.addAssembly=Make .NET assembly visible to MATLAB
NET.isNETSupported=Check for supported Microsoft .NET Framework
NET=Summary of functions in MATLAB .NET interface
enableNETfromNetworkDrive=(To be removed) Enable access to .NET commands from network drive
NET.Assembly=Members of .NET assembly
NET.NetException=Capture error information for .NET exception
NET.createArray=Array for nonprimitive .NET types
NET.disableAutoRelease=Lock .NET object representing RunTime Callable Wrapper (COM wrapper)
NET.enableAutoRelease=Unlock .NET object representing RunTime Callable Wrapper (COM wrapper)
NET.setStaticProperty=Static property or field name
BeginInvoke=Initiate asynchronous .NET delegate call
EndInvoke=Retrieve result of asynchronous call initiated by .NET System.Delegate BeginInvoke method
Combine=Convenience function for static .NET System.Delegate Combine method
Remove=Convenience function for static .NET System.Delegate Remove method
RemoveAll=Convenience function for static .NET System.Delegate RemoveAll method
bitnot=.NET enumeration object bit-wise NOT instance method
NET.createGeneric=Create instance of specialized .NET generic type
NET.invokeGenericMethod=Invoke generic method of object
NET.convertArray=(Not recommended) Convert numeric MATLAB array to .NET array
NET.GenericClass=Represent parameterized generic type definitions
actxserver=Create COM server
actxGetRunningServer=Handle to running instance of Automation server
methodsview=View class methods
eventlisteners=List event handler functions associated with COM object events
registerevent=Associate event handler for COM object event at run time
unregisterallevents=Unregister all event handlers associated with COM object events
unregisterevent=Unregister event handler associated with COM object event at run time
iscom=Determine whether input is COM object
isevent=Determine whether input is COM object event
isinterface=Determine whether input is COM interface
COM=Access COM components from MATLAB
addproperty=Add custom property to COM object
deleteproperty=Remove custom property from COM object
invoke=Invoke method on COM object or interface, or display methods
actxcontrollist=(To be removed) List currently installed Microsoft ActiveX controls
actxcontrolselect=(To be removed) Create Microsoft ActiveX control from UI
matlab.net.http.RequestMessage=HTTP request message
matlab.net.http.ResponseMessage=HTTP response message
matlab.net.http.Message=HTTP request or response message
matlab.net.http.MessageType=HTTP message type
matlab.net.http.MessageBody=Body of HTTP message
matlab.net.http.ProtocolVersion=HTTP protocol version
matlab.net.http.RequestLine=First line of HTTP request message
matlab.net.http.RequestMethod=HTTP request method
matlab.net.http.StartLine=First line of HTTP message
matlab.net.http.StatusClass=Status class of HTTP response
matlab.net.http.StatusCode=Status code in HTTP response
matlab.net.http.StatusLine=First line of HTTP response message
matlab.net.http.HeaderField=Header field of HTTP message
matlab.net.http.field.AcceptField=HTTP Accept header field
matlab.net.http.field.AuthenticateField=HTTP WWW-Authenticate or Proxy-Authenticate header field
matlab.net.http.field.AuthenticationInfoField=HTTP Authentication-Info header field in response message
matlab.net.http.field.AuthorizationField=HTTP Authorization or Proxy-Authorization header field
matlab.net.http.field.ContentDispositionField=HTTP Content-Disposition header field
matlab.net.http.field.ContentLengthField=HTTP Content-Length field
matlab.net.http.field.ContentLocationField=HTTP Content-Location header field
matlab.net.http.field.ContentTypeField=HTTP Content-Type header field
matlab.net.http.field.CookieField=HTTP Cookie header field
matlab.net.http.field.DateField=HTTP Date header field
matlab.net.http.field.GenericField=HTTP header field with any name and value
matlab.net.http.field.GenericParameterizedField=GenericField to support parameterized syntax
matlab.net.http.field.HTTPDateField=HTTP header field containing date
matlab.net.http.field.IntegerField=Base class for HTTP header fields containing nonnegative integers
matlab.net.http.field.LocationField=HTTP Location header field
matlab.net.http.field.MediaRangeField=Base class for HTTP Content-Type and Accept header fields
matlab.net.http.field.SetCookieField=HTTP Set-Cookie header field
matlab.net.http.field.URIReferenceField=Base class for HTTP header fields containing URI components
matlab.net.http.io.ContentConsumer=Consumer for HTTP message payloads
matlab.net.http.io.FileConsumer=Consumer for files in HTTP messages
matlab.net.http.io.StringConsumer=String consumer for HTTP payloads
matlab.net.http.io.JSONConsumer=Content consumer that converts JSON input into MATLAB data
matlab.net.http.io.ImageConsumer=Consumer for image data in HTTP payloads
matlab.net.http.io.MultipartConsumer=Helper for multipart content types in HTTP messages
matlab.net.http.io.BinaryConsumer=Consumer for binary data in HTTP messages
matlab.net.http.io.GenericConsumer=Consumer for multiple content types in HTTP messages
matlab.net.http.io.ContentProvider=ContentProvider for HTTP message payloads
matlab.net.http.io.FileProvider=ContentProvider to send files
matlab.net.http.io.FormProvider=ContentProvider that sends form data
matlab.net.http.io.MultipartFormProvider=ContentProvider to send multipart/form-data messages
matlab.net.http.io.StringProvider=ContentProvider to send MATLAB strings
matlab.net.http.io.JSONProvider=ContentProvider to send MATLAB data as JSON string
matlab.net.http.io.ImageProvider=ContentProvider to send MATLAB image data
matlab.net.http.io.MultipartProvider=ContentProvider to send multipart/mixed HTTP messages
matlab.net.http.io.GenericProvider=Generic ContentProvider for HTTP payloads
matlab.net.http.AuthenticationScheme=HTTP Authentication scheme
matlab.net.http.AuthInfo=Authentication or authorization information in HTTP messages
matlab.net.http.Cookie=HTTP cookie received from server
matlab.net.http.CookieInfo=HTTP cookie information
matlab.net.http.Credentials=Credentials for authenticating HTTP requests
matlab.net.http.Disposition=Results in HTTP log record
matlab.net.http.HTTPException=Exception thrown by HTTP services
matlab.net.http.HTTPOptions=Options controlling HTTP message exchange
matlab.net.http.LogRecord=HTTP history log record
matlab.net.http.MediaType=Internet media type used in HTTP headers
matlab.net.http.ProgressMonitor=Progress monitor for HTTP message exchange
matlab.net.URI=Uniform resource identifier (URI)
matlab.net.ArrayFormat=Convert arrays in HTTP queries
matlab.net.QueryParameter=Parameter in query portion of uniform resource identifier (URI)
matlab.net.base64decode=Base 64 decoding of string
matlab.net.base64encode=Base 64 encoding of byte string or vector
complete=Validate and complete HTTP request message without sending
send=Send HTTP request message and receive response
addFields=Add fields to message header
changeFields=Change existing fields in message header
getFields=Return message header fields matching name or class
removeFields=Remove fields from message header
replaceFields=Change values in or add fields to message header
show=Display or return formatted version of message
getReasonPhrase=StatusClass name as text phrase
matlab.net.http.StatusCode.fromValue=Create StatusCode object from string or number
getClass=StatusClass for StatusCode
convert=Convert header field value to MATLAB type
convertLike=Convert header field value like another header field
matlab.net.http.HeaderField.displaySubclasses=Display supported HeaderField subclasses
getParameter=Return value of parameter in field
removeParameter=Remove parameter from field
setParameter=Set value of parameter in field
matlab.net.http.CookieInfo.collectFromLog=Latest CookieInfo objects from HTTP response message history
done=Indicate all message transfers completed
delegateTo=Delegate to another consumer
initialize=Prepare consumer for new HTTP payload
putData=Process or save next buffer of data for ContentConsumer
expectedContentLength=Content length of ContentProvider
getData=Next buffer of data to send in HTTP request message from ContentProvider
preferredBufferSize=Preferred buffer size for ContentProvider
restartable=Indicate whether ContentProvider is restartable
reusable=Indicate whether ContentProvider is reusable
matlab.wsdl.createWSDLClient=Create interface to SOAP-based web service
matlab.wsdl.setWSDLToolPath=Location of WSDL tools
createClassFromWsdl=(To be removed) Create MATLAB class based on WSDL document
createSoapMessage=(To be removed) Create SOAP (Simple Object Access Protocol) message to send to server
callSoapService=(To be removed) Send SOAP (Simple Object Access Protocol) message to endpoint
parseSoapResponse=(To be removed) Convert response string from SOAP (Simple Object Access Protocol) server into MATLAB types
matlab.engine.shareEngine=Convert running MATLAB session to shared session
mexhost=Create host process for C++ MEX function
matlab.mex.MexHost=Out-of-process host for C++ MEX function execution
matlab.engine.engineName=Return name of shared MATLAB session
matlab.engine.isEngineShared=Determine if MATLAB session is shared
com.mathworks.engine.MatlabEngine=Java class using MATLAB as a computational engine
com.mathworks.matlab.types.Complex=Java class to pass complex data to and from MATLAB
com.mathworks.matlab.types.Struct=Java class to pass MATLAB struct to and from MATLAB
com.mathworks.matlab.types.CellStr=Java class to represent MATLAB cell array of char vectors
com.mathworks.matlab.types.HandleObject=Java class to represent MATLAB handle objects
matlab.engine.MatlabEngine=Python object using MATLAB as computational engine within Python session
matlab.engine.FutureResult=Results of asynchronous call to MATLAB function stored in Python object
cancel=Cancel asynchronous call to MATLAB function from Python
cancelled=Cancellation status of asynchronous call to MATLAB function from Python
result=Result of asynchronous call to MATLAB function from Python
mex=Build MEX function or engine application
dbmex=Enable MEX-file debugging on UNIX platforms
mex.getCompilerConfigurations=Get compiler configuration information for building MEX files
comserver=Register, unregister, or query MATLAB COM server
regmatlabserver=Register current MATLAB as COM server
enableservice=Enable, disable, or report status of MATLAB Automation server
Execute=Execute MATLAB command in Automation server
Feval=Execute MATLAB function in Automation server
GetFullMatrix=Matrix from Automation server workspace
PutFullMatrix=Matrix in Automation server workspace
GetCharArray=Character array from Automation server
PutCharArray=Character array in Automation server
GetVariable=Data from variable in Automation server workspace
GetWorkspaceData=Data from Automation server workspace
PutWorkspaceData=Data in Automation server workspace
MaximizeCommandWindow=Open Automation server window
MinimizeCommandWindow=Minimize size of Automation server window
Quit=Terminate MATLAB Automation server
batchStartupOptionUsed=Determine if MATLAB started with -batch option
quit=Terminate MATLAB program
exit=Terminate MATLAB program (same as quit)
startup=User-defined startup script for MATLAB
finish=User-defined termination script for MATLAB
matlabrc=System administrator-defined start up script for MATLAB
prefdir=Folder containing preferences, settings, history, and layout files
preferences=Open Preferences dialog box
supportPackageInstaller=Install support for third-party hardware or software (Not recommended)
upgradePreviouslyInstalledSupportPackages=Get previously installed hardware support packages and optional features for the currently installed release
matlabshared.supportpkg.checkForUpdate=List of support packages that can be updated (Not recommended)
matlabshared.supportpkg.getInstalled=List of installed support packages
matlabshared.supportpkg.getSupportPackageRoot=Get root folder of support packages
matlabshared.supportpkg.setSupportPackageRoot=Set root folder of support packages
version=Version number for MATLAB and libraries
ver=Version information for MathWorks products
verLessThan=Compare toolbox version to specified character vector
license=Get license number or perform licensing task
ispc=Determine if version is for Windows (PC) platform
ismac=Determine if version is for macOS platform
isunix=Determine if version is for Linux or Mac platforms
isstudent=Determine if version is Student Version
clipboard=Copy and paste text to and from system clipboard
computer=Information about computer on which MATLAB is running
system=Execute operating system command and return output
dos=Execute DOS command and return output
unix=Execute UNIX command and return output
getenv=Environment variable
setenv=Set environment variable
perl=Call Perl script using operating system executable
winqueryreg=Item from Windows registry
matlab.io.saveVariablesToScript=Save workspace variables to MATLAB script
getpref=Get custom preference value
setpref=Set custom preference value
addpref=Add custom preference
rmpref=Remove custom preference
ispref=Determine if custom preference exists
matlab.addons.installedAddons=Get list of installed add-ons
matlab.addons.isAddonEnabled=Determine if add-on is enabled
matlab.addons.enableAddon=Enable installed add-on
matlab.addons.disableAddon=Disable installed add-on
matlab.addons.install=Install add-on
matlab.addons.uninstall=Uninstall add-on
settings=Access the SettingsGroup root object
clearTemporaryValue=Clear the temporary value for a setting
clearPersonalValue=Clear the personal value for a setting
hasTemporaryValue=Determine whether the setting has a temporary value set
hasPersonalValue=Determine whether the setting has a personal value set
hasFactoryValue=Determine whether the setting has a factory value set
hasGroup=Determine if settings group exists
hasSetting=Determine if setting exists in settings group
removeGroup=Remove settings group
removeSetting=Remove setting
Setting=Setting object
SettingsGroup=Group of settings and subgroup objects
doc=Reference page in Help browser
help=Help for functions in Command Window
docsearch=Help browser search
lookfor=Search for keyword in all help entries
demo=Access product examples in Help browser
echodemo=Run example script step-by-step in Command Window
helpbrowser=Open Help browser to access online documentation
helpdesk=Open Help browser
helpwin=Provide access to help comments for all functions
info=Information about contacting MathWorks
support=Open MathWorks Technical Support Web page
whatsnew=Release Notes
