<data xmlns="https://www.mathworks.com/help/ref/data" count="2601">
    <cat target="index.html">
        <title>MATLAB</title>
        <cat target="">
            <ref target="ref/plot.html" name="plot" init="P">
                <ext name="distributedarrays" value="limited"/>
                <ext name="gpuarrays" value="limited"/>
                <ext name="tall" value="limited"/>
                <purpose>2-D line plot</purpose>
            </ref>
            <ref target="ref/if.html" name="if, elseif, else" init="I">
                <ext name="codegen" value="yes"/>
                <purpose>Execute statements if condition is true</purpose>
            </ref>
            <ref target="ref/legend.html" name="legend" init="L">
                <purpose>Add legend to axes</purpose>
            </ref>
            <ref target="ref/function.html" name="function" init="F">
                <purpose>Declare function name, inputs, and outputs</purpose>
            </ref>
            <ref target="ref/axis.html" name="axis" init="A">
                <purpose>Set axis limits and aspect ratios</purpose>
            </ref>
            <ref target="ref/fprintf.html" name="fprintf" init="F">
                <ext name="codegen" value="limited"/>
                <ext name="distributedarrays" value="limited"/>
                <ext name="gpuarrays" value="limited"/>
                <purpose>Write data to text file</purpose>
            </ref>
            <ref target="ref/find.html" name="find" init="F">
                <ext name="codegen" value="limited"/>
                <ext name="distributedarrays" value="yes"/>
                <ext name="gpuarrays" value="yes"/>
                <ext name="tall" value="limited"/>
                <purpose>Find indices and values of nonzero elements</purpose>
            </ref>
            <ref target="ref/fft.html" name="fft" init="F">
                <ext name="codegen" value="limited"/>
                <ext name="distributedarrays" value="limited"/>
                <ext name="gpuarrays" value="limited"/>
                <ext name="gpucodegen" value="yes"/>
                <purpose>Fast Fourier transform</purpose>
            </ref>
            <ref target="ref/for.html" name="for" init="F">
                <ext name="codegen" value="limited"/>
                <purpose>for loop to repeat specified number of times</purpose>
            </ref>
            <ref target="ref/save.html" name="save" init="S">
                <purpose>Save workspace variables to file</purpose>
            </ref>
            <ref target="ref/scatter.html" name="scatter" init="S">
                <ext name="distributedarrays" value="limited"/>
                <ext name="gpuarrays" value="limited"/>
                <ext name="tall" value="limited"/>
                <purpose>Scatter plot</purpose>
            </ref>
            <ref target="ref/sum.html" name="sum" init="S">
                <ext name="codegen" value="limited"/>
                <ext name="distributedarrays" value="limited"/>
                <ext name="gpuarrays" value="limited"/>
                <ext name="gpucodegen" value="limited"/>
                <ext name="tall" value="yes"/>
                <purpose>Sum of array elements</purpose>
            </ref>
            <ref target="ref/linspace.html" name="linspace" init="L">
                <ext name="codegen" value="yes"/>
                <ext name="distributedarrays" value="limited"/>
                <purpose>Generate linearly spaced vector</purpose>
            </ref>
            <ref target="ref/size.html" name="size" init="S">
                <ext name="codegen" value="yes"/>
                <ext name="distributedarrays" value="yes"/>
                <ext name="gpuarrays" value="yes"/>
                <ext name="gpucodegen" value="yes"/>
                <ext name="tall" value="yes"/>
                <purpose>Array size</purpose>
            </ref>
            <ref target="ref/colormap.html" name="colormap" init="C">
                <purpose>View and set current colormap</purpose>
            </ref>
            <ref target="ref/disp.html" name="disp" init="D">
                <purpose>Display value of variable</purpose>
            </ref>
            <ref target="ref/matlab.graphics.chart.primitive.histogram.html" name="histogram" init="H">
                <ext name="distributedarrays" value="limited"/>
                <ext name="gpuarrays" value="limited"/>
                <ext name="tall" value="limited"/>
                <purpose>Histogram plot</purpose>
            </ref>
            <ref target="ref/timeseries.mean.html" name="mean" init="M">
                <purpose>Mean of timeseries data</purpose>
            </ref>
            <ref target="ref/timeseries.max.html" name="max" init="M">
                <purpose>Maximum of timeseries data</purpose>
            </ref>
            <ref target="ref/zeros.html" name="zeros" init="Z">
                <ext name="codegen" value="limited"/>
                <ext name="distributedarrays" value="limited"/>
                <ext name="gpuarrays" value="limited"/>
                <ext name="gpucodegen" value="limited"/>
                <purpose>Create array of all zeros</purpose>
            </ref>
        </cat>
        <cat target="getting-started-with-matlab.html">
            <title>Get Started with MATLAB</title>
        </cat>
        <cat target="language-fundamentals.html">
            <title>Language Fundamentals</title>
            <cat target="entering-commands.html">
                <title>Entering Commands</title>
                <ref target="ref/ans.html" name="ans" init="A">
                    <purpose>Most recent answer</purpose>
                </ref>
                <ref target="ref/clc.html" name="clc" init="C">
                    <purpose>Clear Command Window</purpose>
                </ref>
                <ref target="ref/diary.html" name="diary" init="D">
                    <purpose>Log Command Window text to file</purpose>
                </ref>
                <ref target="ref/format.html" name="format" init="F">
                    <purpose>Set Command Window output display format</purpose>
                </ref>
                <ref target="ref/home.html" name="home" init="H">
                    <purpose>Send cursor home</purpose>
                </ref>
                <ref target="ref/iskeyword.html" name="iskeyword" init="I">
                    <purpose>Determine whether input is MATLAB keyword</purpose>
                </ref>
                <ref target="ref/more.html" name="more" init="M">
                    <purpose>Control paged output in Command Window</purpose>
                </ref>
            </cat>
            <cat target="matrices-and-arrays.html">
                <title>Matrices and Arrays</title>
                <ref target="ref/zeros.html" name="zeros" init="Z">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Create array of all zeros</purpose>
                </ref>
                <ref target="ref/ones.html" name="ones" init="O">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Create array of all ones</purpose>
                </ref>
                <ref target="ref/rand.html" name="rand" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Uniformly distributed random numbers</purpose>
                </ref>
                <ref target="ref/true.html" name="true" init="T">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Logical 1 (true)</purpose>
                </ref>
                <ref target="ref/false.html" name="false" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Logical 0 (false)</purpose>
                </ref>
                <ref target="ref/eye.html" name="eye" init="E">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Identity matrix</purpose>
                </ref>
                <ref target="ref/diag.html" name="diag" init="D">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Create diagonal matrix or get diagonal elements of matrix</purpose>
                </ref>
                <ref target="ref/blkdiag.html" name="blkdiag" init="B">
                    <ext name="codegen" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Block diagonal matrix</purpose>
                </ref>
                <ref target="ref/cat.html" name="cat" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Concatenate arrays</purpose>
                </ref>
                <ref target="ref/horzcat.html" name="horzcat" init="H">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Concatenate arrays horizontally</purpose>
                </ref>
                <ref target="ref/vertcat.html" name="vertcat" init="V">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Concatenate arrays vertically</purpose>
                </ref>
                <ref target="ref/repelem.html" name="repelem" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Repeat copies of array elements</purpose>
                </ref>
                <ref target="ref/repmat.html" name="repmat" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Repeat copies of array</purpose>
                </ref>
                <ref target="ref/linspace.html" name="linspace" init="L">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Generate linearly spaced vector</purpose>
                </ref>
                <ref target="ref/logspace.html" name="logspace" init="L">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Generate logarithmically spaced vector</purpose>
                </ref>
                <ref target="ref/freqspace.html" name="freqspace" init="F">
                    <ext name="codegen" value="yes"/>
                    <purpose>Frequency spacing for frequency response</purpose>
                </ref>
                <ref target="ref/meshgrid.html" name="meshgrid" init="M">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>2-D and 3-D grids</purpose>
                </ref>
                <ref target="ref/ndgrid.html" name="ndgrid" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Rectangular grid in N-D space</purpose>
                </ref>
                <ref target="ref/length.html" name="length" init="L">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Length of largest array dimension</purpose>
                </ref>
                <ref target="ref/size.html" name="size" init="S">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Array size</purpose>
                </ref>
                <ref target="ref/ndims.html" name="ndims" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Number of array dimensions</purpose>
                </ref>
                <ref target="ref/numel.html" name="numel" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Number of array elements</purpose>
                </ref>
                <ref target="ref/isscalar.html" name="isscalar" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine whether input is scalar</purpose>
                </ref>
                <ref target="ref/issorted.html" name="issorted" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine if array is sorted</purpose>
                </ref>
                <ref target="ref/issortedrows.html" name="issortedrows" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine if matrix or table rows are sorted</purpose>
                </ref>
                <ref target="ref/isvector.html" name="isvector" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine whether input is vector</purpose>
                </ref>
                <ref target="ref/ismatrix.html" name="ismatrix" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine whether input is matrix</purpose>
                </ref>
                <ref target="ref/isrow.html" name="isrow" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine whether input is row vector</purpose>
                </ref>
                <ref target="ref/iscolumn.html" name="iscolumn" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine whether input is column vector</purpose>
                </ref>
                <ref target="ref/isempty.html" name="isempty" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Determine whether array is empty</purpose>
                </ref>
                <ref target="ref/sort.html" name="sort" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Sort array elements</purpose>
                </ref>
                <ref target="ref/double.sortrows.html" name="sortrows" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Sort rows of matrix or table</purpose>
                </ref>
                <ref target="ref/flip.html" name="flip" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Flip order of elements</purpose>
                </ref>
                <ref target="ref/fliplr.html" name="fliplr" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Flip array left to right</purpose>
                </ref>
                <ref target="ref/flipud.html" name="flipud" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Flip array up to down</purpose>
                </ref>
                <ref target="ref/rot90.html" name="rot90" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Rotate array 90 degrees</purpose>
                </ref>
                <ref target="ref/transpose.html" name="transpose" init="T">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Transpose vector or matrix</purpose>
                </ref>
                <ref target="ref/ctranspose.html" name="ctranspose" init="C">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Complex conjugate transpose</purpose>
                </ref>
                <ref target="ref/permute.html" name="permute" init="P">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Permute array dimensions</purpose>
                </ref>
                <ref target="ref/ipermute.html" name="ipermute" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Inverse permute array dimensions</purpose>
                </ref>
                <ref target="ref/circshift.html" name="circshift" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Shift array circularly</purpose>
                </ref>
                <ref target="ref/shiftdim.html" name="shiftdim" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Shift array dimensions</purpose>
                </ref>
                <ref target="ref/reshape.html" name="reshape" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Reshape array</purpose>
                </ref>
                <ref target="ref/squeeze.html" name="squeeze" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Remove dimensions of length 1</purpose>
                </ref>
                <ref target="ref/colon.html" name="colon" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Vector creation, array subscripting, and for-loop iteration</purpose>
                </ref>
                <ref target="ref/end.html" name="end" init="E">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Terminate block of code or indicate last array index</purpose>
                </ref>
                <ref target="ref/ind2sub.html" name="ind2sub" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Convert linear indices to subscripts</purpose>
                </ref>
                <ref target="ref/sub2ind.html" name="sub2ind" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Convert subscripts to linear indices</purpose>
                </ref>
                <ref target="ref/inline.html" name="inline" init="I" unlisted="y">
                    <purpose>(Not recommended) Construct inline object</purpose>
                </ref>
                <ref target="ref/flipdim.html" name="flipdim" init="F" unlisted="y">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>(Not recommended) Flip array along specified dimension</purpose>
                </ref>
                <ref target="ref/vectorize.html" name="vectorize" init="V" unlisted="y">
                    <purpose>(Not recommended) Vectorize expression</purpose>
                </ref>
            </cat>
            <cat target="data-types.html">
                <title>Data Types</title>
                <cat target="numeric-types.html">
                    <title>Numeric Types</title>
                    <ref target="ref/double.html" name="double" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Double-precision arrays</purpose>
                    </ref>
                    <ref target="ref/single.html" name="single" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Single-precision arrays</purpose>
                    </ref>
                    <ref target="ref/int8.html" name="int8" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>8-bit signed integer arrays</purpose>
                    </ref>
                    <ref target="ref/int16.html" name="int16" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>16-bit signed integer arrays</purpose>
                    </ref>
                    <ref target="ref/int32.html" name="int32" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>32-bit signed integer arrays</purpose>
                    </ref>
                    <ref target="ref/int64.html" name="int64" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>64-bit signed integer arrays</purpose>
                    </ref>
                    <ref target="ref/uint8.html" name="uint8" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>8-bit unsigned integer arrays</purpose>
                    </ref>
                    <ref target="ref/uint16.html" name="uint16" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>16-bit unsigned integer arrays</purpose>
                    </ref>
                    <ref target="ref/uint32.html" name="uint32" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>32-bit unsigned integer arrays</purpose>
                    </ref>
                    <ref target="ref/uint64.html" name="uint64" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>64-bit unsigned integer arrays</purpose>
                    </ref>
                    <ref target="ref/cast.html" name="cast" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Convert variable to different data type</purpose>
                    </ref>
                    <ref target="ref/typecast.html" name="typecast" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Convert data type without changing underlying data</purpose>
                    </ref>
                    <ref target="ref/isinteger.html" name="isinteger" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine whether input is integer array</purpose>
                    </ref>
                    <ref target="ref/isfloat.html" name="isfloat" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine if input is floating-point array</purpose>
                    </ref>
                    <ref target="ref/isnumeric.html" name="isnumeric" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine whether input is numeric array</purpose>
                    </ref>
                    <ref target="ref/isreal.html" name="isreal" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine whether array is real</purpose>
                    </ref>
                    <ref target="ref/isfinite.html" name="isfinite" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine which array elements are finite</purpose>
                    </ref>
                    <ref target="ref/isinf.html" name="isinf" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine which array elements are infinite</purpose>
                    </ref>
                    <ref target="ref/isnan.html" name="isnan" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine which array elements are NaN</purpose>
                    </ref>
                    <ref target="ref/eps.html" name="eps" init="E">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Floating-point relative accuracy</purpose>
                    </ref>
                    <ref target="ref/flintmax.html" name="flintmax" init="F">
                        <ext name="codegen" value="yes"/>
                        <purpose>Largest consecutive integer in floating-point format</purpose>
                    </ref>
                    <ref target="ref/inf.html" name="Inf" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Create array of all Inf values</purpose>
                    </ref>
                    <ref target="ref/intmax.html" name="intmax" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Largest value of specific integer type</purpose>
                    </ref>
                    <ref target="ref/intmin.html" name="intmin" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Smallest value of specified integer type</purpose>
                    </ref>
                    <ref target="ref/nan.html" name="NaN" init="N">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Create array of all NaN values</purpose>
                    </ref>
                    <ref target="ref/realmax.html" name="realmax" init="R">
                        <ext name="codegen" value="yes"/>
                        <purpose>Largest positive floating-point number</purpose>
                    </ref>
                    <ref target="ref/realmin.html" name="realmin" init="R">
                        <ext name="codegen" value="yes"/>
                        <purpose>Smallest normalized floating-point number</purpose>
                    </ref>
                </cat>
                <cat target="characters-and-strings.html">
                    <title>Characters and Strings</title>
                    <ref target="ref/string.html" name="string" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>String array</purpose>
                    </ref>
                    <ref target="ref/strings.html" name="strings" init="S">
                        <purpose>Create string array with no characters</purpose>
                    </ref>
                    <ref target="ref/join.html" name="join" init="J">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Combine strings</purpose>
                    </ref>
                    <ref target="ref/char.html" name="char" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Character array</purpose>
                    </ref>
                    <ref target="ref/cellstr.html" name="cellstr" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert to cell array of character vectors</purpose>
                    </ref>
                    <ref target="ref/blanks.html" name="blanks" init="B">
                        <ext name="codegen" value="yes"/>
                        <purpose>Create character array of blanks</purpose>
                    </ref>
                    <ref target="ref/newline.html" name="newline" init="N">
                        <ext name="codegen" value="yes"/>
                        <purpose>Create newline character</purpose>
                    </ref>
                    <ref target="ref/compose.html" name="compose" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Format data into multiple strings</purpose>
                    </ref>
                    <ref target="ref/sprintf.html" name="sprintf" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Format data into string or character vector</purpose>
                    </ref>
                    <ref target="ref/strcat.html" name="strcat" init="S">
                        <purpose>Concatenate strings horizontally</purpose>
                    </ref>
                    <ref target="ref/append.html" name="append" init="A">
                        <purpose>Combine strings</purpose>
                    </ref>
                    <ref target="ref/convertcharstostrings.html" name="convertCharsToStrings" init="C">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert character arrays to string arrays, leaving other arrays unaltered</purpose>
                    </ref>
                    <ref target="ref/convertstringstochars.html" name="convertStringsToChars" init="C">
                        <ext name="codegen" value="yes"/>
                        <purpose>Convert string arrays to character arrays, leaving other arrays unaltered</purpose>
                    </ref>
                    <ref target="ref/convertcontainedstringstochars.html" name="convertContainedStringsToChars" init="C">
                        <purpose>Convert string arrays at any level of cell array or structure</purpose>
                    </ref>
                    <ref target="ref/double.html" name="double" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Double-precision arrays</purpose>
                    </ref>
                    <ref target="ref/string.html" name="string" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>String array</purpose>
                    </ref>
                    <ref target="ref/str2double.html" name="str2double" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert strings to double precision values</purpose>
                    </ref>
                    <ref target="ref/num2str.html" name="num2str" init="N">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Convert numbers to character array</purpose>
                    </ref>
                    <ref target="ref/ischar.html" name="ischar" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Determine if input is character array</purpose>
                    </ref>
                    <ref target="ref/iscellstr.html" name="iscellstr" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is cell array of character vectors</purpose>
                    </ref>
                    <ref target="ref/isstring.html" name="isstring" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is string array</purpose>
                    </ref>
                    <ref target="ref/isstringscalar.html" name="isStringScalar" init="I">
                        <purpose>Determine if input is string array with one element</purpose>
                    </ref>
                    <ref target="ref/strlength.html" name="strlength" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Lengths of strings</purpose>
                    </ref>
                    <ref target="ref/isstrprop.html" name="isstrprop" init="I">
                        <ext name="codegen" value="limited"/>
                        <purpose>Determine which characters in input strings are of specified category</purpose>
                    </ref>
                    <ref target="ref/isletter.html" name="isletter" init="I">
                        <ext name="codegen" value="limited"/>
                        <purpose>Determine which characters are letters</purpose>
                    </ref>
                    <ref target="ref/isspace.html" name="isspace" init="I">
                        <ext name="codegen" value="limited"/>
                        <purpose>Determine which characters are space characters</purpose>
                    </ref>
                    <ref target="ref/contains.html" name="contains" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if pattern is in strings</purpose>
                    </ref>
                    <ref target="ref/matches.html" name="matches" init="M">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if pattern matches strings</purpose>
                    </ref>
                    <ref target="ref/count.html" name="count" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Count occurrences of pattern in strings</purpose>
                    </ref>
                    <ref target="ref/endswith.html" name="endsWith" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if strings end with pattern</purpose>
                    </ref>
                    <ref target="ref/startswith.html" name="startsWith" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if strings start with pattern</purpose>
                    </ref>
                    <ref target="ref/strfind.html" name="strfind" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Find strings within other strings</purpose>
                    </ref>
                    <ref target="ref/sscanf.html" name="sscanf" init="S">
                        <purpose>Read formatted data from strings</purpose>
                    </ref>
                    <ref target="ref/replace.html" name="replace" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Find and replace one or more substrings</purpose>
                    </ref>
                    <ref target="ref/replacebetween.html" name="replaceBetween" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Replace substrings between start and end points</purpose>
                    </ref>
                    <ref target="ref/strrep.html" name="strrep" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Find and replace substrings</purpose>
                    </ref>
                    <ref target="ref/join.html" name="join" init="J">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Combine strings</purpose>
                    </ref>
                    <ref target="ref/split.html" name="split" init="S">
                        <ext name="tall" value="yes"/>
                        <purpose>Split strings at delimiters</purpose>
                    </ref>
                    <ref target="ref/splitlines.html" name="splitlines" init="S">
                        <ext name="tall" value="yes"/>
                        <purpose>Split strings at newline characters</purpose>
                    </ref>
                    <ref target="ref/strjoin.html" name="strjoin" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Join strings in array</purpose>
                    </ref>
                    <ref target="ref/strsplit.html" name="strsplit" init="S">
                        <purpose>Split string or character vector at specified delimiter</purpose>
                    </ref>
                    <ref target="ref/strtok.html" name="strtok" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Selected parts of strings</purpose>
                    </ref>
                    <ref target="ref/erase.html" name="erase" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Delete substrings within strings</purpose>
                    </ref>
                    <ref target="ref/erasebetween.html" name="eraseBetween" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Delete substrings between start and end points</purpose>
                    </ref>
                    <ref target="ref/extractafter.html" name="extractAfter" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Extract substrings after specified positions</purpose>
                    </ref>
                    <ref target="ref/extractbefore.html" name="extractBefore" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Extract substrings before specified positions</purpose>
                    </ref>
                    <ref target="ref/extractbetween.html" name="extractBetween" init="E">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Extract substrings between start and end points</purpose>
                    </ref>
                    <ref target="ref/insertafter.html" name="insertAfter" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Insert strings after specified substrings</purpose>
                    </ref>
                    <ref target="ref/insertbefore.html" name="insertBefore" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Insert strings before specified substrings</purpose>
                    </ref>
                    <ref target="ref/pad.html" name="pad" init="P">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Add leading or trailing characters to strings</purpose>
                    </ref>
                    <ref target="ref/strip.html" name="strip" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remove leading and trailing characters from strings</purpose>
                    </ref>
                    <ref target="ref/lower.html" name="lower" init="L">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert strings to lowercase</purpose>
                    </ref>
                    <ref target="ref/upper.html" name="upper" init="U">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert strings to uppercase</purpose>
                    </ref>
                    <ref target="ref/reverse.html" name="reverse" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Reverse order of characters in strings</purpose>
                    </ref>
                    <ref target="ref/deblank.html" name="deblank" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remove trailing whitespace from ends of strings</purpose>
                    </ref>
                    <ref target="ref/strtrim.html" name="strtrim" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remove leading and trailing whitespace from strings</purpose>
                    </ref>
                    <ref target="ref/strjust.html" name="strjust" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Justify strings</purpose>
                    </ref>
                    <ref target="ref/strcmp.html" name="strcmp" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compare strings</purpose>
                    </ref>
                    <ref target="ref/strcmpi.html" name="strcmpi" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compare strings (case insensitive)</purpose>
                    </ref>
                    <ref target="ref/strncmp.html" name="strncmp" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compare first n characters of strings (case sensitive)</purpose>
                    </ref>
                    <ref target="ref/strncmpi.html" name="strncmpi" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compare first n characters of strings (case insensitive)</purpose>
                    </ref>
                    <ref target="ref/regexp.html" name="regexp" init="R">
                        <purpose>Match regular expression (case sensitive)</purpose>
                    </ref>
                    <ref target="ref/regexpi.html" name="regexpi" init="R">
                        <purpose>Match regular expression (case insensitive)</purpose>
                    </ref>
                    <ref target="ref/regexprep.html" name="regexprep" init="R">
                        <ext name="tall" value="yes"/>
                        <purpose>Replace text using regular expression</purpose>
                    </ref>
                    <ref target="ref/regexptranslate.html" name="regexptranslate" init="R">
                        <purpose>Translate text into regular expression</purpose>
                    </ref>
                    <ref target="ref/symvar.html" name="symvar" init="S" unlisted="y">
                        <purpose>Determine symbolic variables in expression</purpose>
                    </ref>
                    <ref target="ref/setstr.html" name="setstr" init="S" unlisted="y">
                        <purpose>(Not recommended) Convert numeric values or strings into character representation</purpose>
                    </ref>
                    <ref target="ref/strvcat.html" name="strvcat" init="S" unlisted="y">
                        <purpose>(Not recommended) Concatenate strings vertically</purpose>
                    </ref>
                    <ref target="ref/findstr.html" name="findstr" init="F" unlisted="y">
                        <purpose>(Not recommended) Find string within another, longer string</purpose>
                    </ref>
                    <ref target="ref/strread.html" name="strread" init="S" unlisted="y">
                        <purpose>(Not recommended) Read formatted data from string</purpose>
                    </ref>
                    <ref target="ref/strmatch.html" name="strmatch" init="S" unlisted="y">
                        <purpose>(Not recommended) Find possible matches for string</purpose>
                    </ref>
                </cat>
                <cat target="date-and-time-operations.html">
                    <title>Dates and Time</title>
                    <ref target="ref/datetime.html" name="datetime" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Arrays that represent points in time</purpose>
                    </ref>
                    <ref target="ref/nat.html" name="NaT" init="N">
                        <ext name="codegen" value="yes"/>
                        <purpose>Not-a-Time</purpose>
                    </ref>
                    <ref target="ref/duration.years.html" name="years" init="Y">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Duration in years</purpose>
                    </ref>
                    <ref target="ref/duration.days.html" name="days" init="D">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Duration in days</purpose>
                    </ref>
                    <ref target="ref/duration.hours.html" name="hours" init="H">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Duration in hours</purpose>
                    </ref>
                    <ref target="ref/duration.minutes.html" name="minutes" init="M">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Duration in minutes</purpose>
                    </ref>
                    <ref target="ref/duration.seconds.html" name="seconds" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Duration in seconds</purpose>
                    </ref>
                    <ref target="ref/duration.milliseconds.html" name="milliseconds" init="M">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Duration in milliseconds</purpose>
                    </ref>
                    <ref target="ref/duration.html" name="duration" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Lengths of time in fixed-length units</purpose>
                    </ref>
                    <ref target="ref/calendarduration.calyears.html" name="calyears" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Calendar duration in years</purpose>
                    </ref>
                    <ref target="ref/calendarduration.calquarters.html" name="calquarters" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Calendar duration in quarters</purpose>
                    </ref>
                    <ref target="ref/calendarduration.calmonths.html" name="calmonths" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Calendar duration in months</purpose>
                    </ref>
                    <ref target="ref/calendarduration.calweeks.html" name="calweeks" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Calendar duration in weeks</purpose>
                    </ref>
                    <ref target="ref/calendarduration.caldays.html" name="caldays" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Calendar duration in days</purpose>
                    </ref>
                    <ref target="ref/calendarduration.html" name="calendarDuration" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Lengths of time in variable-length calendar units</purpose>
                    </ref>
                    <ref target="ref/datetime.year.html" name="year" init="Y">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Year number</purpose>
                    </ref>
                    <ref target="ref/datetime.quarter.html" name="quarter" init="Q">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Quarter number</purpose>
                    </ref>
                    <ref target="ref/datetime.month.html" name="month" init="M">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Month number and name</purpose>
                    </ref>
                    <ref target="ref/datetime.week.html" name="week" init="W">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Week number</purpose>
                    </ref>
                    <ref target="ref/datetime.day.html" name="day" init="D">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Day number or name</purpose>
                    </ref>
                    <ref target="ref/datetime.hour.html" name="hour" init="H">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hour number</purpose>
                    </ref>
                    <ref target="ref/datetime.minute.html" name="minute" init="M">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Minute number</purpose>
                    </ref>
                    <ref target="ref/datetime.second.html" name="second" init="S">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Second number</purpose>
                    </ref>
                    <ref target="ref/datetime.ymd.html" name="ymd" init="Y">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Year, month, and day numbers of datetime</purpose>
                    </ref>
                    <ref target="ref/datetime.hms.html" name="hms" init="H">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hour, minute, and second numbers of datetime or duration</purpose>
                    </ref>
                    <ref target="ref/calendarduration.split.html" name="split" init="S">
                        <ext name="tall" value="yes"/>
                        <purpose>Split calendar duration into numeric and duration units</purpose>
                    </ref>
                    <ref target="ref/calendarduration.time.html" name="time" init="T">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert time of calendar duration to duration</purpose>
                    </ref>
                    <ref target="ref/datetime.timeofday.html" name="timeofday" init="T">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Elapsed time since midnight for datetimes</purpose>
                    </ref>
                    <ref target="ref/isdatetime.html" name="isdatetime" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is datetime array</purpose>
                    </ref>
                    <ref target="ref/isduration.html" name="isduration" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is duration array</purpose>
                    </ref>
                    <ref target="ref/iscalendarduration.html" name="iscalendarduration" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is calendar duration array</purpose>
                    </ref>
                    <ref target="ref/datetime.isnat.html" name="isnat" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine NaT (Not-a-Time) elements</purpose>
                    </ref>
                    <ref target="ref/datetime.isdst.html" name="isdst" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine daylight saving time elements</purpose>
                    </ref>
                    <ref target="ref/datetime.isweekend.html" name="isweekend" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine weekend elements</purpose>
                    </ref>
                    <ref target="ref/leapseconds.html" name="leapseconds" init="L">
                        <purpose>List all leap seconds supported by datetime data type</purpose>
                    </ref>
                    <ref target="ref/timezones.html" name="timezones" init="T">
                        <purpose>List time zones</purpose>
                    </ref>
                    <ref target="ref/datetime.tzoffset.html" name="tzoffset" init="T">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Time zone offset from UTC</purpose>
                    </ref>
                    <ref target="ref/datetime.between.html" name="between" init="B">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Calendar math differences</purpose>
                    </ref>
                    <ref target="ref/datetime.caldiff.html" name="caldiff" init="C">
                        <ext name="tall" value="limited"/>
                        <purpose>Calendar math successive differences</purpose>
                    </ref>
                    <ref target="ref/datetime.dateshift.html" name="dateshift" init="D">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Shift date or generate sequence of dates and time</purpose>
                    </ref>
                    <ref target="ref/datetime.isbetween.html" name="isbetween" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Determine elements within date and time interval</purpose>
                    </ref>
                    <ref target="ref/datenum.html" name="datenum" init="D">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert date and time to serial date number</purpose>
                    </ref>
                    <ref target="ref/datetime.convertto.html" name="convertTo" init="C">
                        <purpose>Convert datetime values to numeric representations</purpose>
                    </ref>
                    <ref target="ref/datevec.html" name="datevec" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Convert date and time to vector of components</purpose>
                    </ref>
                    <ref target="ref/datetime.exceltime.html" name="exceltime" init="E">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert MATLAB datetime to Excel date number</purpose>
                    </ref>
                    <ref target="ref/datetime.juliandate.html" name="juliandate" init="J">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert MATLAB datetime to Julian date</purpose>
                    </ref>
                    <ref target="ref/datetime.posixtime.html" name="posixtime" init="P">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert MATLAB datetime to POSIX time</purpose>
                    </ref>
                    <ref target="ref/datetime.yyyymmdd.html" name="yyyymmdd" init="Y">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert MATLAB datetime to YYYYMMDD numeric value</purpose>
                    </ref>
                    <ref target="ref/addtodate.html" name="addtodate" init="A">
                        <purpose>Modify date number by field</purpose>
                    </ref>
                    <ref target="ref/char.html" name="char" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Character array</purpose>
                    </ref>
                    <ref target="ref/string.html" name="string" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>String array</purpose>
                    </ref>
                    <ref target="ref/datestr.html" name="datestr" init="D">
                        <ext name="tall" value="limited"/>
                        <purpose>Convert date and time to string format</purpose>
                    </ref>
                    <ref target="ref/now.html" name="now" init="N">
                        <purpose>Current date and time as serial date number</purpose>
                    </ref>
                    <ref target="ref/clock.html" name="clock" init="C">
                        <purpose>Current date and time as date vector</purpose>
                    </ref>
                    <ref target="ref/date.html" name="date" init="D">
                        <purpose>Current date as character vector</purpose>
                    </ref>
                    <ref target="ref/calendar.html" name="calendar" init="C">
                        <purpose>Calendar for specified month</purpose>
                    </ref>
                    <ref target="ref/eomday.html" name="eomday" init="E">
                        <purpose>Last day of month</purpose>
                    </ref>
                    <ref target="ref/weekday.html" name="weekday" init="W">
                        <purpose>Day of week</purpose>
                    </ref>
                    <ref target="ref/etime.html" name="etime" init="E">
                        <purpose>Time elapsed between date vectors</purpose>
                    </ref>
                </cat>
                <cat target="categorical-arrays.html">
                    <title>Categorical Arrays</title>
                    <ref target="ref/categorical.html" name="categorical" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <ext name="codegen" value="limited"/>
                        <purpose>Array that contains values assigned to categories</purpose>
                    </ref>
                    <ref target="ref/iscategorical.html" name="iscategorical" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine whether input is categorical array</purpose>
                    </ref>
                    <ref target="ref/double.discretize.html" name="discretize" init="D">
                        <ext name="codegen" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Group data into bins or categories</purpose>
                    </ref>
                    <ref target="ref/categorical.categories.html" name="categories" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Categories of categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.iscategory.html" name="iscategory" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Test for categorical array categories</purpose>
                    </ref>
                    <ref target="ref/categorical.isordinal.html" name="isordinal" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine whether input is ordinal categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.isprotected.html" name="isprotected" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine whether categories of categorical array are protected</purpose>
                    </ref>
                    <ref target="ref/categorical.addcats.html" name="addcats" init="A">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Add categories to categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.mergecats.html" name="mergecats" init="M">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Merge categories in categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.removecats.html" name="removecats" init="R">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remove categories from categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.renamecats.html" name="renamecats" init="R">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Rename categories in categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.reordercats.html" name="reordercats" init="R">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Reorder categories in categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.setcats.html" name="setcats" init="S">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Set categories in categorical array</purpose>
                    </ref>
                    <ref target="ref/table.summary.html" name="summary" init="S">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Print summary of table, timetable, or categorical array</purpose>
                    </ref>
                    <ref target="ref/categorical.countcats.html" name="countcats" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Count occurrences of categorical array elements by category</purpose>
                    </ref>
                    <ref target="ref/categorical.isundefined.html" name="isundefined" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Find undefined elements in categorical array</purpose>
                    </ref>
                </cat>
                <cat target="tables.html">
                    <title>Tables</title>
                    <ref target="ref/table.html" name="table" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Table array with named variables that can contain different types</purpose>
                    </ref>
                    <ref target="ref/array2table.html" name="array2table" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Convert homogeneous array to table</purpose>
                    </ref>
                    <ref target="ref/cell2table.html" name="cell2table" init="C">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert cell array to table</purpose>
                    </ref>
                    <ref target="ref/struct2table.html" name="struct2table" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert structure array to table</purpose>
                    </ref>
                    <ref target="ref/table2array.html" name="table2array" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert table to homogeneous array</purpose>
                    </ref>
                    <ref target="ref/table2cell.html" name="table2cell" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert table to cell array</purpose>
                    </ref>
                    <ref target="ref/table2struct.html" name="table2struct" init="T">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert table to structure array</purpose>
                    </ref>
                    <ref target="ref/table2timetable.html" name="table2timetable" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert table to timetable</purpose>
                    </ref>
                    <ref target="ref/timetable2table.html" name="timetable2table" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert timetable to table</purpose>
                    </ref>
                    <ref target="ref/readtable.html" name="readtable" init="R">
                        <purpose>Create table from file</purpose>
                    </ref>
                    <ref target="ref/writetable.html" name="writetable" init="W">
                        <purpose>Write table to file</purpose>
                    </ref>
                    <ref target="ref/detectimportoptions.html" name="detectImportOptions" init="D">
                        <purpose>Create import options based on file content</purpose>
                    </ref>
                    <ref target="ref/matlab.io.spreadsheet.spreadsheetimportoptions.html" name="spreadsheetImportOptions" init="S">
                        <purpose>Import options object for Spreadsheets</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.getvaropts.html" name="getvaropts" init="G">
                        <purpose>Get variable import options</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvaropts.html" name="setvaropts" init="S">
                        <purpose>Set variable import options</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvartype.html" name="setvartype" init="S">
                        <purpose>Set variable data types</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.preview.html" name="preview" init="P">
                        <purpose>Preview eight rows from file using import options</purpose>
                    </ref>
                    <ref target="ref/head.html" name="head" init="H">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Get top rows of table, timetable, or tall array</purpose>
                    </ref>
                    <ref target="ref/tail.html" name="tail" init="T">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Get bottom rows of table, timetable, or tall array</purpose>
                    </ref>
                    <ref target="ref/table.summary.html" name="summary" init="S">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Print summary of table, timetable, or categorical array</purpose>
                    </ref>
                    <ref target="ref/height.html" name="height" init="H">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Number of table rows</purpose>
                    </ref>
                    <ref target="ref/width.html" name="width" init="W">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Number of table variables</purpose>
                    </ref>
                    <ref target="ref/istable.html" name="istable" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine whether input is table</purpose>
                    </ref>
                    <ref target="ref/stackedplot.html" name="stackedplot" init="S">
                        <purpose>Stacked plot of several variables with common x-axis</purpose>
                    </ref>
                    <ref target="ref/double.sortrows.html" name="sortrows" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Sort rows of matrix or table</purpose>
                    </ref>
                    <ref target="ref/unique.html" name="unique" init="U">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Unique values in array</purpose>
                    </ref>
                    <ref target="ref/issortedrows.html" name="issortedrows" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if matrix or table rows are sorted</purpose>
                    </ref>
                    <ref target="ref/topkrows.html" name="topkrows" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Top rows in sorted order</purpose>
                    </ref>
                    <ref target="ref/table.addvars.html" name="addvars" init="A">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Add variables to table or timetable</purpose>
                    </ref>
                    <ref target="ref/table.renamevars.html" name="renamevars" init="R">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Rename variables in table or timetable</purpose>
                    </ref>
                    <ref target="ref/table.movevars.html" name="movevars" init="M">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Move variables in table or timetable</purpose>
                    </ref>
                    <ref target="ref/table.removevars.html" name="removevars" init="R">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Delete variables from table or timetable</purpose>
                    </ref>
                    <ref target="ref/convertvars.html" name="convertvars" init="C">
                        <purpose>Convert table or timetable variables to specified data type</purpose>
                    </ref>
                    <ref target="ref/table.splitvars.html" name="splitvars" init="S">
                        <ext name="tall" value="yes"/>
                        <purpose>Split multicolumn variables in table or timetable</purpose>
                    </ref>
                    <ref target="ref/table.mergevars.html" name="mergevars" init="M">
                        <ext name="tall" value="yes"/>
                        <purpose>Combine table or timetable variables into multicolumn variable</purpose>
                    </ref>
                    <ref target="ref/vartype.html" name="vartype" init="V">
                        <purpose>Subscript into table or timetable by variable type</purpose>
                    </ref>
                    <ref target="ref/rows2vars.html" name="rows2vars" init="R">
                        <purpose>Reorient table or timetable so that rows become variables</purpose>
                    </ref>
                    <ref target="ref/table.stack.html" name="stack" init="S">
                        <ext name="tall" value="yes"/>
                        <purpose>Stack data from multiple variables into single variable</purpose>
                    </ref>
                    <ref target="ref/unstack.html" name="unstack" init="U">
                        <purpose>Unstack data from single variable into multiple variables</purpose>
                    </ref>
                    <ref target="ref/table.inner2outer.html" name="inner2outer" init="I">
                        <ext name="tall" value="yes"/>
                        <purpose>Invert nested table-in-table hierarchy in tables or timetables</purpose>
                    </ref>
                    <ref target="ref/addprop.html" name="addprop" init="A">
                        <purpose>Add custom properties to table or timetable</purpose>
                    </ref>
                    <ref target="ref/rmprop.html" name="rmprop" init="R">
                        <purpose>Remove custom properties from table or timetable</purpose>
                    </ref>
                    <ref target="ref/table.join.html" name="join" init="J">
                        <ext name="tall" value="limited"/>
                        <purpose>Combine two tables or timetables by rows using key variables</purpose>
                    </ref>
                    <ref target="ref/innerjoin.html" name="innerjoin" init="I">
                        <ext name="tall" value="yes"/>
                        <purpose>Inner join between two tables or timetables</purpose>
                    </ref>
                    <ref target="ref/outerjoin.html" name="outerjoin" init="O">
                        <ext name="tall" value="yes"/>
                        <purpose>Outer join between two tables or timetables</purpose>
                    </ref>
                    <ref target="ref/double.union.html" name="union" init="U">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set union of two arrays</purpose>
                    </ref>
                    <ref target="ref/double.intersect.html" name="intersect" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set intersection of two arrays</purpose>
                    </ref>
                    <ref target="ref/ismember.html" name="ismember" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Array elements that are members of set array</purpose>
                    </ref>
                    <ref target="ref/setdiff.html" name="setdiff" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set difference of two arrays</purpose>
                    </ref>
                    <ref target="ref/setxor.html" name="setxor" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set exclusive OR of two arrays</purpose>
                    </ref>
                    <ref target="ref/ismissing.html" name="ismissing" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Find missing values</purpose>
                    </ref>
                    <ref target="ref/standardizemissing.html" name="standardizeMissing" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Insert standard missing values</purpose>
                    </ref>
                    <ref target="ref/rmmissing.html" name="rmmissing" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Remove missing entries</purpose>
                    </ref>
                    <ref target="ref/fillmissing.html" name="fillmissing" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Fill missing values</purpose>
                    </ref>
                    <ref target="ref/varfun.html" name="varfun" init="V">
                        <ext name="tall" value="limited"/>
                        <purpose>Apply function to table or timetable variables</purpose>
                    </ref>
                    <ref target="ref/rowfun.html" name="rowfun" init="R">
                        <purpose>Apply function to table or timetable rows</purpose>
                    </ref>
                    <ref target="ref/findgroups.html" name="findgroups" init="F">
                        <ext name="tall" value="limited"/>
                        <purpose>Find groups and return group numbers</purpose>
                    </ref>
                    <ref target="ref/splitapply.html" name="splitapply" init="S">
                        <ext name="tall" value="limited"/>
                        <purpose>Split data into groups and apply function</purpose>
                    </ref>
                    <ref target="ref/double.groupsummary.html" name="groupsummary" init="G">
                        <ext name="tall" value="limited"/>
                        <purpose>Group summary computations</purpose>
                    </ref>
                </cat>
                <cat target="timetables.html">
                    <title>Timetables</title>
                    <ref target="ref/timetable.html" name="timetable" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Timetable array with time-stamped rows and variables of different types</purpose>
                    </ref>
                    <ref target="ref/table2timetable.html" name="table2timetable" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert table to timetable</purpose>
                    </ref>
                    <ref target="ref/array2timetable.html" name="array2timetable" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert homogeneous array to timetable</purpose>
                    </ref>
                    <ref target="ref/timetable2table.html" name="timetable2table" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert timetable to table</purpose>
                    </ref>
                    <ref target="ref/istimetable.html" name="istimetable" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is timetable</purpose>
                    </ref>
                    <ref target="ref/table.summary.html" name="summary" init="S">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Print summary of table, timetable, or categorical array</purpose>
                    </ref>
                    <ref target="ref/readtimetable.html" name="readtimetable" init="R">
                        <purpose>Create timetable from file</purpose>
                    </ref>
                    <ref target="ref/writetimetable.html" name="writetimetable" init="W">
                        <purpose>Write timetable to file</purpose>
                    </ref>
                    <ref target="ref/detectimportoptions.html" name="detectImportOptions" init="D">
                        <purpose>Create import options based on file content</purpose>
                    </ref>
                    <ref target="ref/matlab.io.spreadsheet.spreadsheetimportoptions.html" name="spreadsheetImportOptions" init="S">
                        <purpose>Import options object for Spreadsheets</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.getvaropts.html" name="getvaropts" init="G">
                        <purpose>Get variable import options</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvaropts.html" name="setvaropts" init="S">
                        <purpose>Set variable import options</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvartype.html" name="setvartype" init="S">
                        <purpose>Set variable data types</purpose>
                    </ref>
                    <ref target="ref/matlab.io.text.delimitedtextimportoptions.preview.html" name="preview" init="P">
                        <purpose>Preview eight rows from file using import options</purpose>
                    </ref>
                    <ref target="ref/head.html" name="head" init="H">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Get top rows of table, timetable, or tall array</purpose>
                    </ref>
                    <ref target="ref/tail.html" name="tail" init="T">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Get bottom rows of table, timetable, or tall array</purpose>
                    </ref>
                    <ref target="ref/timerange.html" name="timerange" init="T">
                        <purpose>Time range for timetable row subscripting</purpose>
                    </ref>
                    <ref target="ref/withtol.html" name="withtol" init="W">
                        <purpose>Time tolerance for timetable row subscripting</purpose>
                    </ref>
                    <ref target="ref/vartype.html" name="vartype" init="V">
                        <purpose>Subscript into table or timetable by variable type</purpose>
                    </ref>
                    <ref target="ref/unique.html" name="unique" init="U">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Unique values in array</purpose>
                    </ref>
                    <ref target="ref/double.sortrows.html" name="sortrows" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Sort rows of matrix or table</purpose>
                    </ref>
                    <ref target="ref/timetable.retime.html" name="retime" init="R">
                        <ext name="tall" value="limited"/>
                        <purpose>Resample or aggregate data in timetable, and resolve duplicate or irregular times</purpose>
                    </ref>
                    <ref target="ref/timetable.synchronize.html" name="synchronize" init="S">
                        <ext name="tall" value="limited"/>
                        <purpose>Synchronize timetables to common time vector, and resample or aggregate data from input timetables</purpose>
                    </ref>
                    <ref target="ref/timetable.lag.html" name="lag" init="L">
                        <purpose>Time-shift data in timetable</purpose>
                    </ref>
                    <ref target="ref/timetable.containsrange.html" name="containsrange" init="C">
                        <purpose>Determine if timetable row times contain specified time range</purpose>
                    </ref>
                    <ref target="ref/timetable.overlapsrange.html" name="overlapsrange" init="O">
                        <purpose>Determine if timetable row times overlap specified time range</purpose>
                    </ref>
                    <ref target="ref/timetable.withinrange.html" name="withinrange" init="W">
                        <purpose>Determine if timetable row times are within specified time range</purpose>
                    </ref>
                    <ref target="ref/timetable.isregular.html" name="isregular" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if timetable is regular with respect to time or calendar unit</purpose>
                    </ref>
                    <ref target="ref/ismissing.html" name="ismissing" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Find missing values</purpose>
                    </ref>
                    <ref target="ref/standardizemissing.html" name="standardizeMissing" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Insert standard missing values</purpose>
                    </ref>
                    <ref target="ref/rmmissing.html" name="rmmissing" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Remove missing entries</purpose>
                    </ref>
                    <ref target="ref/fillmissing.html" name="fillmissing" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Fill missing values</purpose>
                    </ref>
                    <ref target="ref/stackedplot.html" name="stackedplot" init="S">
                        <purpose>Stacked plot of several variables with common x-axis</purpose>
                    </ref>
                </cat>
                <cat target="structures.html">
                    <title>Structures</title>
                    <ref target="ref/struct.html" name="struct" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Structure array</purpose>
                    </ref>
                    <ref target="ref/fieldnames.html" name="fieldnames" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Field names of structure, or public fields of Java or Microsoft COM object</purpose>
                    </ref>
                    <ref target="ref/getfield.html" name="getfield" init="G">
                        <purpose>Field of structure array</purpose>
                    </ref>
                    <ref target="ref/isfield.html" name="isfield" init="I">
                        <ext name="codegen" value="limited"/>
                        <purpose>Determine if input is structure array field</purpose>
                    </ref>
                    <ref target="ref/isstruct.html" name="isstruct" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Determine if input is structure array</purpose>
                    </ref>
                    <ref target="ref/orderfields.html" name="orderfields" init="O">
                        <purpose>Order fields of structure array</purpose>
                    </ref>
                    <ref target="ref/rmfield.html" name="rmfield" init="R">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Remove fields from structure</purpose>
                    </ref>
                    <ref target="ref/setfield.html" name="setfield" init="S">
                        <purpose>Assign value to structure array field</purpose>
                    </ref>
                    <ref target="ref/arrayfun.html" name="arrayfun" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Apply function to each element of array</purpose>
                    </ref>
                    <ref target="ref/structfun.html" name="structfun" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Apply function to each field of scalar structure</purpose>
                    </ref>
                    <ref target="ref/table2struct.html" name="table2struct" init="T">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert table to structure array</purpose>
                    </ref>
                    <ref target="ref/struct2table.html" name="struct2table" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert structure array to table</purpose>
                    </ref>
                    <ref target="ref/cell2struct.html" name="cell2struct" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert cell array to structure array</purpose>
                    </ref>
                    <ref target="ref/struct2cell.html" name="struct2cell" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert structure to cell array</purpose>
                    </ref>
                </cat>
                <cat target="cell-arrays.html">
                    <title>Cell Arrays</title>
                    <ref target="ref/cell.html" name="cell" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <purpose>Cell array</purpose>
                    </ref>
                    <ref target="ref/cell2mat.html" name="cell2mat" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert cell array to ordinary array of the underlying data type</purpose>
                    </ref>
                    <ref target="ref/cell2struct.html" name="cell2struct" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert cell array to structure array</purpose>
                    </ref>
                    <ref target="ref/cell2table.html" name="cell2table" init="C">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert cell array to table</purpose>
                    </ref>
                    <ref target="ref/celldisp.html" name="celldisp" init="C">
                        <purpose>Display cell array contents</purpose>
                    </ref>
                    <ref target="ref/cellfun.html" name="cellfun" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Apply function to each cell in cell array</purpose>
                    </ref>
                    <ref target="ref/cellplot.html" name="cellplot" init="C">
                        <purpose>Graphically display structure of cell array</purpose>
                    </ref>
                    <ref target="ref/cellstr.html" name="cellstr" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert to cell array of character vectors</purpose>
                    </ref>
                    <ref target="ref/iscell.html" name="iscell" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is cell array</purpose>
                    </ref>
                    <ref target="ref/iscellstr.html" name="iscellstr" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is cell array of character vectors</purpose>
                    </ref>
                    <ref target="ref/mat2cell.html" name="mat2cell" init="M">
                        <purpose>Convert array to cell array whose cells contain subarrays</purpose>
                    </ref>
                    <ref target="ref/num2cell.html" name="num2cell" init="N">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert array to cell array with consistently sized cells</purpose>
                    </ref>
                    <ref target="ref/strjoin.html" name="strjoin" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Join strings in array</purpose>
                    </ref>
                    <ref target="ref/strsplit.html" name="strsplit" init="S">
                        <purpose>Split string or character vector at specified delimiter</purpose>
                    </ref>
                    <ref target="ref/struct2cell.html" name="struct2cell" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert structure to cell array</purpose>
                    </ref>
                    <ref target="ref/table2cell.html" name="table2cell" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert table to cell array</purpose>
                    </ref>
                    <ref target="ref/deal.html" name="deal" init="D" unlisted="y">
                        <ext name="codegen" value="yes"/>
                        <purpose>Distribute inputs to outputs</purpose>
                    </ref>
                </cat>
                <cat target="function-handles.html">
                    <title>Function Handles</title>
                    <ref target="ref/function_handle.html" name="function_handle" init="F">
                        <purpose>Handle to function</purpose>
                    </ref>
                    <ref target="ref/feval.html" name="feval" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Evaluate function</purpose>
                    </ref>
                    <ref target="ref/func2str.html" name="func2str" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Construct character vector from function handle</purpose>
                    </ref>
                    <ref target="ref/str2func.html" name="str2func" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Construct function handle from character vector</purpose>
                    </ref>
                    <ref target="ref/localfunctions.html" name="localfunctions" init="L">
                        <purpose>Function handles to all local functions in MATLAB file</purpose>
                    </ref>
                    <ref target="ref/functions.html" name="functions" init="F">
                        <purpose>Information about function handle</purpose>
                    </ref>
                </cat>
                <cat target="map-containers.html">
                    <title>Map Containers</title>
                    <ref target="ref/containers.map.html" name="containers.Map" init="C">
                        <purpose>Object that maps values to unique keys</purpose>
                    </ref>
                    <ref target="ref/containers.map.iskey.html" name="isKey" init="I">
                        <purpose>Determine if Map object contains key</purpose>
                    </ref>
                    <ref target="ref/containers.map.keys.html" name="keys" init="K">
                        <purpose>Return keys of Map object</purpose>
                    </ref>
                    <ref target="ref/containers.map.remove.html" name="remove" init="R">
                        <purpose>Delete key-value pairs from Map object</purpose>
                    </ref>
                    <ref target="ref/containers.map.values.html" name="values" init="V">
                        <purpose>Return values of Map object</purpose>
                    </ref>
                    <ref target="ref/containers.map.length.html" name="length" init="L" unlisted="y">
                        <purpose>Number of key-value pairs in Map object</purpose>
                    </ref>
                    <ref target="ref/containers.map.size.html" name="size" init="S" unlisted="y">
                        <purpose>Size of Map object</purpose>
                    </ref>
                </cat>
                <cat target="time-series.html">
                    <title>Time Series</title>
                    <cat target="time-series-objects.html">
                        <title>Time Series Objects</title>
                        <ref target="ref/timeseries.html" name="timeseries" init="T">
                            <purpose>Create timeseries object</purpose>
                        </ref>
                        <ref target="ref/timeseries.addevent.html" name="addevent" init="A">
                            <purpose>Add event to timeseries</purpose>
                        </ref>
                        <ref target="ref/timeseries.addsample.html" name="addsample" init="A">
                            <purpose>Add data sample to timeseries object</purpose>
                        </ref>
                        <ref target="ref/timeseries.append.html" name="append" init="A">
                            <purpose>Concatenate timeseries objects in time</purpose>
                        </ref>
                        <ref target="ref/timeseries.delevent.html" name="delevent" init="D">
                            <purpose>Remove event from timeseries</purpose>
                        </ref>
                        <ref target="ref/timeseries.delsample.html" name="delsample" init="D">
                            <purpose>Remove sample from timeseries object</purpose>
                        </ref>
                        <ref target="ref/timeseries.detrend.html" name="detrend" init="D">
                            <purpose>Subtract mean or best-fit line from timeseries object</purpose>
                        </ref>
                        <ref target="ref/timeseries.filter.html" name="filter" init="F">
                            <purpose>Modify frequency content of timeseries objects</purpose>
                        </ref>
                        <ref target="ref/timeseries.idealfilter.html" name="idealfilter" init="I">
                            <purpose>timeseries ideal filter</purpose>
                        </ref>
                        <ref target="ref/timeseries.plot.html" name="plot" init="P">
                            <purpose>Plot timeseries</purpose>
                        </ref>
                        <ref target="ref/timeseries.resample.html" name="resample" init="R">
                            <purpose>Resample timeseries time vector</purpose>
                        </ref>
                        <ref target="ref/timeseries.set.html" name="set" init="S">
                            <purpose>Set timeseries properties</purpose>
                        </ref>
                        <ref target="ref/timeseries.setabstime.html" name="setabstime" init="S">
                            <purpose>Set timeseries times as date character vectors</purpose>
                        </ref>
                        <ref target="ref/timeseries.setinterpmethod.html" name="setinterpmethod" init="S">
                            <purpose>Set default interpolation method for timeseries object</purpose>
                        </ref>
                        <ref target="ref/timeseries.setuniformtime.html" name="setuniformtime" init="S">
                            <purpose>Modify uniform timeseries time vector</purpose>
                        </ref>
                        <ref target="ref/timeseries.synchronize.html" name="synchronize" init="S">
                            <purpose>Synchronize and resample two timeseries objects using common time vector</purpose>
                        </ref>
                        <ref target="ref/timeseries.get.html" name="get" init="G">
                            <purpose>Query timeseries properties</purpose>
                        </ref>
                        <ref target="ref/timeseries.getabstime.html" name="getabstime" init="G">
                            <purpose>Convert timeseries time vector to cell array</purpose>
                        </ref>
                        <ref target="ref/timeseries.getdatasamples.html" name="getdatasamples" init="G">
                            <purpose>Access timeseries data samples</purpose>
                        </ref>
                        <ref target="ref/timeseries.getdatasamplesize.html" name="getdatasamplesize" init="G">
                            <purpose>timeseries data sample size</purpose>
                        </ref>
                        <ref target="ref/timeseries.getinterpmethod.html" name="getinterpmethod" init="G">
                            <purpose>timeseries interpolation method</purpose>
                        </ref>
                        <ref target="ref/timeseries.getqualitydesc.html" name="getqualitydesc" init="G">
                            <purpose>timeseries data quality</purpose>
                        </ref>
                        <ref target="ref/timeseries.getsamples.html" name="getsamples" init="G">
                            <purpose>Subset of timeseries</purpose>
                        </ref>
                        <ref target="ref/timeseries.getsampleusingtime.html" name="getsampleusingtime" init="G">
                            <purpose>Subset of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.gettsafteratevent.html" name="gettsafteratevent" init="G">
                            <purpose>Create timeseries at or after event</purpose>
                        </ref>
                        <ref target="ref/timeseries.gettsafterevent.html" name="gettsafterevent" init="G">
                            <purpose>Create timeseries after event</purpose>
                        </ref>
                        <ref target="ref/timeseries.gettsatevent.html" name="gettsatevent" init="G">
                            <purpose>Create timeseries at event</purpose>
                        </ref>
                        <ref target="ref/timeseries.gettsbeforeatevent.html" name="gettsbeforeatevent" init="G">
                            <purpose>Create timeseries at or before event</purpose>
                        </ref>
                        <ref target="ref/timeseries.gettsbeforeevent.html" name="gettsbeforeevent" init="G">
                            <purpose>Create timeseries before event</purpose>
                        </ref>
                        <ref target="ref/timeseries.gettsbetweenevents.html" name="gettsbetweenevents" init="G">
                            <purpose>Create timeseries between events</purpose>
                        </ref>
                        <ref target="ref/timeseries.iqr.html" name="iqr" init="I">
                            <purpose>Interquartile range of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.max.html" name="max" init="M">
                            <purpose>Maximum of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.mean.html" name="mean" init="M">
                            <purpose>Mean of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.median.html" name="median" init="M">
                            <purpose>Median of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.min.html" name="min" init="M">
                            <purpose>Minimum of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.std.html" name="std" init="S">
                            <purpose>Standard deviation of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.sum.html" name="sum" init="S">
                            <purpose>Sum of timeseries data</purpose>
                        </ref>
                        <ref target="ref/timeseries.var.html" name="var" init="V">
                            <purpose>Variance of timeseries data</purpose>
                        </ref>
                    </cat>
                    <cat target="time-series-collections.html">
                        <title>Time Series Collections</title>
                        <ref target="ref/tscollection.html" name="tscollection" init="T">
                            <purpose>Create tscollection object</purpose>
                        </ref>
                        <ref target="ref/tscollection.addsampletocollection.html" name="addsampletocollection" init="A">
                            <purpose>Add sample to tscollection</purpose>
                        </ref>
                        <ref target="ref/tscollection.addts.html" name="addts" init="A">
                            <purpose>Add timeseries to tscollection</purpose>
                        </ref>
                        <ref target="ref/tscollection.delsamplefromcollection.html" name="delsamplefromcollection" init="D">
                            <purpose>Delete sample from tscollection</purpose>
                        </ref>
                        <ref target="ref/tscollection.horzcat.html" name="horzcat" init="H">
                            <purpose>Horizontally concatenate tscollection objects</purpose>
                        </ref>
                        <ref target="ref/tscollection.removets.html" name="removets" init="R">
                            <purpose>Remove timeseries from tscollection</purpose>
                        </ref>
                        <ref target="ref/tscollection.resample.html" name="resample" init="R">
                            <purpose>Resample tscollection time vector</purpose>
                        </ref>
                        <ref target="ref/tscollection.set.html" name="set" init="S">
                            <purpose>Set tscollection properties</purpose>
                        </ref>
                        <ref target="ref/tscollection.setabstime.html" name="setabstime" init="S">
                            <purpose>Set tscollection times as date character vectors</purpose>
                        </ref>
                        <ref target="ref/tscollection.settimeseriesnames.html" name="settimeseriesnames" init="S">
                            <purpose>Rename timeseries in tscollection</purpose>
                        </ref>
                        <ref target="ref/tscollection.vertcat.html" name="vertcat" init="V">
                            <purpose>Vertically concatenate tscollection objects</purpose>
                        </ref>
                        <ref target="ref/tscollection.get.html" name="get" init="G">
                            <purpose>Query tscollection properties</purpose>
                        </ref>
                        <ref target="ref/tscollection.getabstime.html" name="getabstime" init="G">
                            <purpose>Convert tscollection time vector to cell array</purpose>
                        </ref>
                        <ref target="ref/tscollection.getsampleusingtime.html" name="getsampleusingtime" init="G">
                            <purpose>Subset of tscollection data</purpose>
                        </ref>
                        <ref target="ref/tscollection.gettimeseriesnames.html" name="gettimeseriesnames" init="G">
                            <purpose>Names of timeseries in tscollection</purpose>
                        </ref>
                        <ref target="ref/tscollection.isempty.html" name="isempty" init="I">
                            <purpose>Determine if tscollection is empty</purpose>
                        </ref>
                        <ref target="ref/tscollection.length.html" name="length" init="L">
                            <purpose>Length of tscollection time vector</purpose>
                        </ref>
                        <ref target="ref/tscollection.size.html" name="size" init="S">
                            <purpose>Size of tscollection</purpose>
                        </ref>
                    </cat>
                    <cat target="time-series-events.html">
                        <title>Time Series Events</title>
                        <ref target="ref/tsdata.event.html" name="tsdata.event" init="T">
                            <purpose>Create tsdata.event object</purpose>
                        </ref>
                        <ref target="ref/tsdata.event.findevent.html" name="findEvent" init="F">
                            <purpose>Query tsdata.event by name</purpose>
                        </ref>
                        <ref target="ref/tsdata.event.get.html" name="get" init="G">
                            <purpose>Query tsdata.event properties</purpose>
                        </ref>
                        <ref target="ref/tsdata.event.gettimestr.html" name="getTimeStr" init="G">
                            <purpose>Query tsdata.event times</purpose>
                        </ref>
                        <ref target="ref/tsdata.event.set.html" name="set" init="S">
                            <purpose>Set tsdata.event properties</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="data-type-identification.html">
                    <title>Data Type Identification</title>
                    <ref target="ref/iscalendarduration.html" name="iscalendarduration" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is calendar duration array</purpose>
                    </ref>
                    <ref target="ref/iscategorical.html" name="iscategorical" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine whether input is categorical array</purpose>
                    </ref>
                    <ref target="ref/iscell.html" name="iscell" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is cell array</purpose>
                    </ref>
                    <ref target="ref/iscellstr.html" name="iscellstr" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is cell array of character vectors</purpose>
                    </ref>
                    <ref target="ref/ischar.html" name="ischar" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Determine if input is character array</purpose>
                    </ref>
                    <ref target="ref/isdatetime.html" name="isdatetime" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is datetime array</purpose>
                    </ref>
                    <ref target="ref/isduration.html" name="isduration" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is duration array</purpose>
                    </ref>
                    <ref target="ref/isenum.html" name="isenum" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Determine if variable is enumeration</purpose>
                    </ref>
                    <ref target="ref/isfloat.html" name="isfloat" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine if input is floating-point array</purpose>
                    </ref>
                    <ref target="ref/isgraphics.html" name="isgraphics" init="I">
                        <purpose>True for valid graphics object handles</purpose>
                    </ref>
                    <ref target="ref/isinteger.html" name="isinteger" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine whether input is integer array</purpose>
                    </ref>
                    <ref target="ref/isjava.html" name="isjava" init="I">
                        <purpose>Determine if input is Java object</purpose>
                    </ref>
                    <ref target="ref/islogical.html" name="islogical" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine if input is logical array</purpose>
                    </ref>
                    <ref target="ref/isnumeric.html" name="isnumeric" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine whether input is numeric array</purpose>
                    </ref>
                    <ref target="ref/isobject.html" name="isobject" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Determine if input is MATLAB object</purpose>
                    </ref>
                    <ref target="ref/isreal.html" name="isreal" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine whether array is real</purpose>
                    </ref>
                    <ref target="ref/isstring.html" name="isstring" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is string array</purpose>
                    </ref>
                    <ref target="ref/isstruct.html" name="isstruct" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Determine if input is structure array</purpose>
                    </ref>
                    <ref target="ref/istable.html" name="istable" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine whether input is table</purpose>
                    </ref>
                    <ref target="ref/istimetable.html" name="istimetable" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Determine if input is timetable</purpose>
                    </ref>
                    <ref target="ref/is.html" name="is*" init="I">
                        <purpose>Detect state</purpose>
                    </ref>
                    <ref target="ref/isa.html" name="isa" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Determine if input has specified data type</purpose>
                    </ref>
                    <ref target="ref/class.html" name="class" init="C">
                        <ext name="codegen" value="yes"/>
                        <purpose>Class of object</purpose>
                    </ref>
                    <ref target="ref/validateattributes.html" name="validateattributes" init="V">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Check validity of array</purpose>
                    </ref>
                    <ref target="ref/whos.html" name="whos" init="W">
                        <purpose>List variables in workspace, with sizes and types</purpose>
                    </ref>
                    <ref target="ref/isstr.html" name="isstr" init="I" unlisted="y">
                        <purpose>(Not recommended) Determine whether input is character array</purpose>
                    </ref>
                </cat>
                <cat target="data-type-conversion.html">
                    <title>Data Type Conversion</title>
                    <ref target="ref/char.html" name="char" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Character array</purpose>
                    </ref>
                    <ref target="ref/cellstr.html" name="cellstr" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert to cell array of character vectors</purpose>
                    </ref>
                    <ref target="ref/int2str.html" name="int2str" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Convert integers to characters</purpose>
                    </ref>
                    <ref target="ref/mat2str.html" name="mat2str" init="M">
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Convert matrix to characters</purpose>
                    </ref>
                    <ref target="ref/num2str.html" name="num2str" init="N">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Convert numbers to character array</purpose>
                    </ref>
                    <ref target="ref/str2double.html" name="str2double" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert strings to double precision values</purpose>
                    </ref>
                    <ref target="ref/str2num.html" name="str2num" init="S">
                        <purpose>Convert character array or string to numeric array</purpose>
                    </ref>
                    <ref target="ref/native2unicode.html" name="native2unicode" init="N">
                        <purpose>Convert numeric bytes to Unicode character representation</purpose>
                    </ref>
                    <ref target="ref/unicode2native.html" name="unicode2native" init="U">
                        <purpose>Convert Unicode character representation to numeric bytes</purpose>
                    </ref>
                    <ref target="ref/base2dec.html" name="base2dec" init="B">
                        <purpose>Convert text representing number in base N to decimal number</purpose>
                    </ref>
                    <ref target="ref/bin2dec.html" name="bin2dec" init="B">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Convert text representation of binary number to decimal number</purpose>
                    </ref>
                    <ref target="ref/dec2base.html" name="dec2base" init="D">
                        <ext name="codegen" value="yes"/>
                        <purpose>Convert decimal number to character array representing base-N number</purpose>
                    </ref>
                    <ref target="ref/dec2bin.html" name="dec2bin" init="D">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert decimal number to character array representing binary number</purpose>
                    </ref>
                    <ref target="ref/dec2hex.html" name="dec2hex" init="D">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert decimal number to character array representing hexadecimal number</purpose>
                    </ref>
                    <ref target="ref/hex2dec.html" name="hex2dec" init="H">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert text representation of hexadecimal number to decimal number</purpose>
                    </ref>
                    <ref target="ref/hex2num.html" name="hex2num" init="H">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert IEEE hexadecimal format to double-precision number</purpose>
                    </ref>
                    <ref target="ref/num2hex.html" name="num2hex" init="N">
                        <ext name="codegen" value="yes"/>
                        <purpose>Convert single- and double-precision numbers to IEEE hexadecimal format</purpose>
                    </ref>
                    <ref target="ref/table2array.html" name="table2array" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert table to homogeneous array</purpose>
                    </ref>
                    <ref target="ref/table2cell.html" name="table2cell" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert table to cell array</purpose>
                    </ref>
                    <ref target="ref/table2struct.html" name="table2struct" init="T">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert table to structure array</purpose>
                    </ref>
                    <ref target="ref/array2table.html" name="array2table" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Convert homogeneous array to table</purpose>
                    </ref>
                    <ref target="ref/cell2table.html" name="cell2table" init="C">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert cell array to table</purpose>
                    </ref>
                    <ref target="ref/struct2table.html" name="struct2table" init="S">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convert structure array to table</purpose>
                    </ref>
                    <ref target="ref/cell2mat.html" name="cell2mat" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert cell array to ordinary array of the underlying data type</purpose>
                    </ref>
                    <ref target="ref/cell2struct.html" name="cell2struct" init="C">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert cell array to structure array</purpose>
                    </ref>
                    <ref target="ref/mat2cell.html" name="mat2cell" init="M">
                        <purpose>Convert array to cell array whose cells contain subarrays</purpose>
                    </ref>
                    <ref target="ref/num2cell.html" name="num2cell" init="N">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert array to cell array with consistently sized cells</purpose>
                    </ref>
                    <ref target="ref/struct2cell.html" name="struct2cell" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Convert structure to cell array</purpose>
                    </ref>
                    <ref target="ref/str2mat.html" name="str2mat" init="S" unlisted="y">
                        <purpose>(Not recommended) Form blank-padded character array from strings</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="operators-and-elementary-operations.html">
                <title>Operators and Elementary Operations</title>
                <cat target="arithmetic-operators.html">
                    <title>Arithmetic Operations</title>
                    <ref target="ref/plus.html" name="+" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Addition</purpose>
                    </ref>
                    <ref target="ref/sum.html" name="sum" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Sum of array elements</purpose>
                    </ref>
                    <ref target="ref/cumsum.html" name="cumsum" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Cumulative sum</purpose>
                    </ref>
                    <ref target="ref/movsum.html" name="movsum" init="M">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Moving sum</purpose>
                    </ref>
                    <ref target="ref/minus.html" name="-" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Subtraction</purpose>
                    </ref>
                    <ref target="ref/diff.html" name="diff" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Differences and approximate derivatives</purpose>
                    </ref>
                    <ref target="ref/times.html" name=".*" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Multiplication</purpose>
                    </ref>
                    <ref target="ref/mtimes.html" name="*" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Matrix multiplication</purpose>
                    </ref>
                    <ref target="ref/prod.html" name="prod" init="P">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Product of array elements</purpose>
                    </ref>
                    <ref target="ref/cumprod.html" name="cumprod" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Cumulative product</purpose>
                    </ref>
                    <ref target="ref/rdivide.html" name="./" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Right array division</purpose>
                    </ref>
                    <ref target="ref/ldivide.html" name=".\" init="">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Left array division</purpose>
                    </ref>
                    <ref target="ref/mrdivide.html" name="/" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Solve systems of linear equations xA = B for x</purpose>
                    </ref>
                    <ref target="ref/mldivide.html" name="\" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Solve systems of linear equations Ax = B for x</purpose>
                    </ref>
                    <ref target="ref/power.html" name=".^" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Element-wise power</purpose>
                    </ref>
                    <ref target="ref/mpower.html" name="^" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Matrix power</purpose>
                    </ref>
                    <ref target="ref/uminus.html" name="uminus" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Unary minus</purpose>
                    </ref>
                    <ref target="ref/uplus.html" name="uplus" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Unary plus</purpose>
                    </ref>
                    <ref target="ref/mod.html" name="mod" init="M">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remainder after division (modulo operation)</purpose>
                    </ref>
                    <ref target="ref/rem.html" name="rem" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remainder after division</purpose>
                    </ref>
                    <ref target="ref/idivide.html" name="idivide" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Integer division with rounding option</purpose>
                    </ref>
                    <ref target="ref/ceil.html" name="ceil" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round toward positive infinity</purpose>
                    </ref>
                    <ref target="ref/fix.html" name="fix" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round toward zero</purpose>
                    </ref>
                    <ref target="ref/floor.html" name="floor" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round toward negative infinity</purpose>
                    </ref>
                    <ref target="ref/round.html" name="round" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round to nearest decimal or integer</purpose>
                    </ref>
                    <ref target="ref/bsxfun.html" name="bsxfun" init="B">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Apply element-wise operation to two arrays with implicit expansion enabled</purpose>
                    </ref>
                </cat>
                <cat target="relational-operators.html">
                    <title>Relational Operations</title>
                    <ref target="ref/eq.html" name="==" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine equality</purpose>
                    </ref>
                    <ref target="ref/ge.html" name=">=" init="">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine greater than or equal to</purpose>
                    </ref>
                    <ref target="ref/gt.html" name=">" init="">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine greater than</purpose>
                    </ref>
                    <ref target="ref/ne.html" name="~=" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine inequality</purpose>
                    </ref>
                    <ref target="ref/isequal.html" name="isequal" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine array equality</purpose>
                    </ref>
                    <ref target="ref/isequaln.html" name="isequaln" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Determine array equality, treating NaN values as equal</purpose>
                    </ref>
                    <ref target="ref/isequalwithequalnans.html" name="isequalwithequalnans" init="I" unlisted="y">
                        <purpose>Test arrays for equality, treating NaNs as equal</purpose>
                    </ref>
                </cat>
                <cat target="logical-operations.html">
                    <title>Logical Operations</title>
                    <ref target="ref/not.html" name="~" init="">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Find logical NOT</purpose>
                    </ref>
                    <ref target="ref/or.html" name="|" init="">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Find logical OR</purpose>
                    </ref>
                    <ref target="ref/xor.html" name="xor" init="X">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Find logical exclusive-OR</purpose>
                    </ref>
                    <ref target="ref/all.html" name="all" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if all array elements are nonzero or true</purpose>
                    </ref>
                    <ref target="ref/any.html" name="any" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if any array elements are nonzero</purpose>
                    </ref>
                    <ref target="ref/false.html" name="false" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Logical 0 (false)</purpose>
                    </ref>
                    <ref target="ref/find.html" name="find" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Find indices and values of nonzero elements</purpose>
                    </ref>
                    <ref target="ref/islogical.html" name="islogical" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine if input is logical array</purpose>
                    </ref>
                    <ref target="ref/logical.html" name="logical" init="L">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert numeric values to logicals</purpose>
                    </ref>
                    <ref target="ref/true.html" name="true" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Logical 1 (true)</purpose>
                    </ref>
                </cat>
                <cat target="set-operations.html">
                    <title>Set Operations</title>
                    <ref target="ref/double.intersect.html" name="intersect" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set intersection of two arrays</purpose>
                    </ref>
                    <ref target="ref/ismember.html" name="ismember" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Array elements that are members of set array</purpose>
                    </ref>
                    <ref target="ref/setdiff.html" name="setdiff" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set difference of two arrays</purpose>
                    </ref>
                    <ref target="ref/setxor.html" name="setxor" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set exclusive OR of two arrays</purpose>
                    </ref>
                    <ref target="ref/double.union.html" name="union" init="U">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Set union of two arrays</purpose>
                    </ref>
                    <ref target="ref/unique.html" name="unique" init="U">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Unique values in array</purpose>
                    </ref>
                    <ref target="ref/ismembertol.html" name="ismembertol" init="I">
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Members of set within tolerance</purpose>
                    </ref>
                    <ref target="ref/uniquetol.html" name="uniquetol" init="U">
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Unique values within tolerance</purpose>
                    </ref>
                    <ref target="ref/table.join.html" name="join" init="J">
                        <ext name="tall" value="limited"/>
                        <purpose>Combine two tables or timetables by rows using key variables</purpose>
                    </ref>
                    <ref target="ref/innerjoin.html" name="innerjoin" init="I">
                        <ext name="tall" value="yes"/>
                        <purpose>Inner join between two tables or timetables</purpose>
                    </ref>
                    <ref target="ref/outerjoin.html" name="outerjoin" init="O">
                        <ext name="tall" value="yes"/>
                        <purpose>Outer join between two tables or timetables</purpose>
                    </ref>
                </cat>
                <cat target="bit-wise-operations.html">
                    <title>Bit-Wise Operations</title>
                    <ref target="ref/bitand.html" name="bitand" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Bit-wise AND</purpose>
                    </ref>
                    <ref target="ref/bitor.html" name="bitor" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Bit-wise OR</purpose>
                    </ref>
                    <ref target="ref/bitxor.html" name="bitxor" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Bit-wise XOR</purpose>
                    </ref>
                    <ref target="ref/bitcmp.html" name="bitcmp" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Bit-wise complement</purpose>
                    </ref>
                    <ref target="ref/bitget.html" name="bitget" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Get bit at specified position</purpose>
                    </ref>
                    <ref target="ref/bitset.html" name="bitset" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Set bit at specific location</purpose>
                    </ref>
                    <ref target="ref/bitshift.html" name="bitshift" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Shift bits specified number of places</purpose>
                    </ref>
                    <ref target="ref/swapbytes.html" name="swapbytes" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Swap byte ordering</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="control-flow.html">
                <title>Loops and Conditional Statements</title>
                <ref target="ref/if.html" name="if, elseif, else" init="I">
                    <ext name="codegen" value="yes"/>
                    <purpose>Execute statements if condition is true</purpose>
                </ref>
                <ref target="ref/switch.html" name="switch, case, otherwise" init="S">
                    <ext name="codegen" value="limited"/>
                    <purpose>Execute one of several groups of statements</purpose>
                </ref>
                <ref target="ref/for.html" name="for" init="F">
                    <ext name="codegen" value="limited"/>
                    <purpose>for loop to repeat specified number of times</purpose>
                </ref>
                <ref target="ref/while.html" name="while" init="W">
                    <ext name="codegen" value="yes"/>
                    <purpose>while loop to repeat when condition is true</purpose>
                </ref>
                <ref target="ref/try.html" name="try, catch" init="T">
                    <purpose>Execute statements and catch resulting errors</purpose>
                </ref>
                <ref target="ref/break.html" name="break" init="B">
                    <ext name="codegen" value="yes"/>
                    <purpose>Terminate execution of for or while loop</purpose>
                </ref>
                <ref target="ref/return.html" name="return" init="R">
                    <ext name="codegen" value="yes"/>
                    <purpose>Return control to invoking script or function</purpose>
                </ref>
                <ref target="ref/continue.html" name="continue" init="C">
                    <ext name="codegen" value="yes"/>
                    <purpose>Pass control to next iteration of for or while loop</purpose>
                </ref>
                <ref target="ref/pause.html" name="pause" init="P">
                    <ext name="codegen" value="limited"/>
                    <purpose>Stop MATLAB execution temporarily</purpose>
                </ref>
                <ref target="ref/parfor.html" name="parfor" init="P">
                    <ext name="codegen" value="limited"/>
                    <ext name="parallelautosupport" value="limited"/>
                    <purpose>Parallel for loop</purpose>
                </ref>
                <ref target="ref/end.html" name="end" init="E">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Terminate block of code or indicate last array index</purpose>
                </ref>
            </cat>
        </cat>
        <cat target="data-import-and-analysis.html">
            <title>Data Import and Analysis</title>
            <cat target="data-import-and-export.html">
                <title>Data Import and Export</title>
                <cat target="standard-file-formats.html">
                    <title>Standard File Formats</title>
                    <ref target="ref/daqread.html" name="daqread" init="D" unlisted="y">
                        <purpose>Read Data Acquisition Toolbox (.daq) file</purpose>
                    </ref>
                    <cat target="text-files.html">
                        <title>Text Files</title>
                        <ref target="ref/readtable.html" name="readtable" init="R">
                            <purpose>Create table from file</purpose>
                        </ref>
                        <ref target="ref/writetable.html" name="writetable" init="W">
                            <purpose>Write table to file</purpose>
                        </ref>
                        <ref target="ref/readtimetable.html" name="readtimetable" init="R">
                            <purpose>Create timetable from file</purpose>
                        </ref>
                        <ref target="ref/writetimetable.html" name="writetimetable" init="W">
                            <purpose>Write timetable to file</purpose>
                        </ref>
                        <ref target="ref/detectimportoptions.html" name="detectImportOptions" init="D">
                            <purpose>Create import options based on file content</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.html" name="delimitedTextImportOptions" init="D">
                            <purpose>Import options object for delimited text</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.fixedwidthimportoptions.html" name="fixedWidthImportOptions" init="F">
                            <purpose>Import options object for fixed-width text files</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.getvaropts.html" name="getvaropts" init="G">
                            <purpose>Get variable import options</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvaropts.html" name="setvaropts" init="S">
                            <purpose>Set variable import options</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvartype.html" name="setvartype" init="S">
                            <purpose>Set variable data types</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.preview.html" name="preview" init="P">
                            <purpose>Preview eight rows from file using import options</purpose>
                        </ref>
                        <ref target="ref/readmatrix.html" name="readmatrix" init="R">
                            <purpose>Read matrix from file</purpose>
                        </ref>
                        <ref target="ref/writematrix.html" name="writematrix" init="W">
                            <purpose>Write a matrix to a file</purpose>
                        </ref>
                        <ref target="ref/readcell.html" name="readcell" init="R">
                            <purpose>Read cell array from file</purpose>
                        </ref>
                        <ref target="ref/writecell.html" name="writecell" init="W">
                            <purpose>Write cell array to file</purpose>
                        </ref>
                        <ref target="ref/readvars.html" name="readvars" init="R">
                            <purpose>Read variables from file</purpose>
                        </ref>
                        <ref target="ref/textscan.html" name="textscan" init="T">
                            <purpose>Read formatted data from text file or string</purpose>
                        </ref>
                        <ref target="ref/type.html" name="type" init="T">
                            <purpose>Display contents of file</purpose>
                        </ref>
                        <ref target="ref/fileread.html" name="fileread" init="F">
                            <ext name="codegen" value="limited"/>
                            <purpose>Read contents of file as text</purpose>
                        </ref>
                        <ref target="ref/textread.html" name="textread" init="T" unlisted="y">
                            <purpose>Read data from text file; write to multiple outputs</purpose>
                        </ref>
                        <ref target="ref/dlmread.html" name="dlmread" init="D" unlisted="y">
                            <purpose>(Not recommended) Read ASCII-delimited file of numeric data into matrix</purpose>
                        </ref>
                        <ref target="ref/dlmwrite.html" name="dlmwrite" init="D" unlisted="y">
                            <purpose>(Not recommended) Write matrix to ASCII-delimited file</purpose>
                        </ref>
                        <ref target="ref/csvread.html" name="csvread" init="C" unlisted="y">
                            <purpose>(Not recommended) Read comma-separated value (CSV) file</purpose>
                        </ref>
                        <ref target="ref/csvwrite.html" name="csvwrite" init="C" unlisted="y">
                            <purpose>(Not recommended) Write comma-separated value file</purpose>
                        </ref>
                        <ref target="ref/matlab.io.datastore.tabulartextdatastore.html" name="tabularTextDatastore" init="T">
                            <purpose>Datastore for tabular text files</purpose>
                        </ref>
                    </cat>
                    <cat target="spreadsheets.html">
                        <title>Spreadsheets</title>
                        <ref target="ref/readtable.html" name="readtable" init="R">
                            <purpose>Create table from file</purpose>
                        </ref>
                        <ref target="ref/writetable.html" name="writetable" init="W">
                            <purpose>Write table to file</purpose>
                        </ref>
                        <ref target="ref/readtimetable.html" name="readtimetable" init="R">
                            <purpose>Create timetable from file</purpose>
                        </ref>
                        <ref target="ref/writetimetable.html" name="writetimetable" init="W">
                            <purpose>Write timetable to file</purpose>
                        </ref>
                        <ref target="ref/sheetnames.html" name="sheetnames" init="S">
                            <purpose>Get sheet names from spreadsheet file</purpose>
                        </ref>
                        <ref target="ref/detectimportoptions.html" name="detectImportOptions" init="D">
                            <purpose>Create import options based on file content</purpose>
                        </ref>
                        <ref target="ref/matlab.io.spreadsheet.spreadsheetimportoptions.html" name="spreadsheetImportOptions" init="S">
                            <purpose>Import options object for Spreadsheets</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.getvaropts.html" name="getvaropts" init="G">
                            <purpose>Get variable import options</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvaropts.html" name="setvaropts" init="S">
                            <purpose>Set variable import options</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.setvartype.html" name="setvartype" init="S">
                            <purpose>Set variable data types</purpose>
                        </ref>
                        <ref target="ref/matlab.io.text.delimitedtextimportoptions.preview.html" name="preview" init="P">
                            <purpose>Preview eight rows from file using import options</purpose>
                        </ref>
                        <ref target="ref/readmatrix.html" name="readmatrix" init="R">
                            <purpose>Read matrix from file</purpose>
                        </ref>
                        <ref target="ref/writematrix.html" name="writematrix" init="W">
                            <purpose>Write a matrix to a file</purpose>
                        </ref>
                        <ref target="ref/readcell.html" name="readcell" init="R">
                            <purpose>Read cell array from file</purpose>
                        </ref>
                        <ref target="ref/writecell.html" name="writecell" init="W">
                            <purpose>Write cell array to file</purpose>
                        </ref>
                        <ref target="ref/readvars.html" name="readvars" init="R">
                            <purpose>Read variables from file</purpose>
                        </ref>
                        <ref target="ref/importdata.html" name="importdata" init="I">
                            <purpose>Load data from file</purpose>
                        </ref>
                        <ref target="ref/xlsread.html" name="xlsread" init="X" unlisted="y">
                            <purpose>(Not recommended) Read Microsoft Excel spreadsheet file</purpose>
                        </ref>
                        <ref target="ref/xlswrite.html" name="xlswrite" init="X" unlisted="y">
                            <purpose>(Not recommended) Write Microsoft Excel spreadsheet file</purpose>
                        </ref>
                        <ref target="ref/xlsfinfo.html" name="xlsfinfo" init="X" unlisted="y">
                            <purpose>(Not recommended) Determine if file contains Microsoft Excel spreadsheet</purpose>
                        </ref>
                        <ref target="ref/matlab.io.datastore.spreadsheetdatastore.html" name="spreadsheetDatastore" init="S">
                            <purpose>Datastore for spreadsheet files</purpose>
                        </ref>
                    </cat>
                    <cat target="images_images.html">
                        <title>Images</title>
                        <ref target="ref/im2java.html" name="im2java" init="I">
                            <purpose>Convert image to Java image</purpose>
                        </ref>
                        <ref target="ref/imfinfo.html" name="imfinfo" init="I">
                            <purpose>Information about graphics file</purpose>
                        </ref>
                        <ref target="ref/imread.html" name="imread" init="I">
                            <ext name="codegen" value="limited"/>
                            <ext name="gpucodegen" value="limited"/>
                            <purpose>Read image from graphics file</purpose>
                        </ref>
                        <ref target="ref/imwrite.html" name="imwrite" init="I">
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Write image to graphics file</purpose>
                        </ref>
                        <ref target="ref/tiff.html" name="Tiff" init="T">
                            <purpose>MATLAB Gateway to LibTIFF library routines</purpose>
                        </ref>
                        <ref target="ref/tiff.close.html" name="Tiff.close" init="T" unlisted="y">
                            <purpose>Close Tiff object</purpose>
                        </ref>
                        <ref target="ref/tiff.computestrip.html" name="Tiff.computeStrip" init="T" unlisted="y">
                            <purpose>Index number of strip containing specified coordinate</purpose>
                        </ref>
                        <ref target="ref/tiff.computetile.html" name="Tiff.computeTile" init="T" unlisted="y">
                            <purpose>Index number of tile containing specified coordinates</purpose>
                        </ref>
                        <ref target="ref/tiff.currentdirectory.html" name="Tiff.currentDirectory" init="T" unlisted="y">
                            <purpose>Return index of current IFD</purpose>
                        </ref>
                        <ref target="ref/tiff.gettag.html" name="Tiff.getTag" init="T" unlisted="y">
                            <purpose>Value of specified tag</purpose>
                        </ref>
                        <ref target="ref/tiff.tiff.gettagnames.html" name="Tiff.getTagNames" init="T" unlisted="y">
                            <purpose>List of recognized TIFF tags</purpose>
                        </ref>
                        <ref target="ref/tiff.tiff.getversion.html" name="Tiff.getVersion" init="T" unlisted="y">
                            <purpose>LibTIFF library version</purpose>
                        </ref>
                        <ref target="ref/tiff.istiled.html" name="Tiff.isTiled" init="T" unlisted="y">
                            <purpose>Determine if image is tiled</purpose>
                        </ref>
                        <ref target="ref/tiff.lastdirectory.html" name="Tiff.lastDirectory" init="T" unlisted="y">
                            <purpose>Determine if current IFD is last in file</purpose>
                        </ref>
                        <ref target="ref/tiff.nextdirectory.html" name="Tiff.nextDirectory" init="T" unlisted="y">
                            <purpose>Make next IFD the current IFD</purpose>
                        </ref>
                        <ref target="ref/tiff.numberofstrips.html" name="Tiff.numberOfStrips" init="T" unlisted="y">
                            <purpose>Total number of strips in image</purpose>
                        </ref>
                        <ref target="ref/tiff.numberoftiles.html" name="Tiff.numberOfTiles" init="T" unlisted="y">
                            <purpose>Total number of tiles in image</purpose>
                        </ref>
                        <ref target="ref/tiff.read.html" name="Tiff.read" init="T" unlisted="y">
                            <purpose>Read entire TIFF image</purpose>
                        </ref>
                        <ref target="ref/tiff.readencodedstrip.html" name="Tiff.readEncodedStrip" init="T" unlisted="y">
                            <purpose>Read data from specified strip</purpose>
                        </ref>
                        <ref target="ref/tiff.readencodedtile.html" name="Tiff.readEncodedTile" init="T" unlisted="y">
                            <purpose>Read data from specified tile</purpose>
                        </ref>
                        <ref target="ref/tiff.readrgbaimage.html" name="Tiff.readRGBAImage" init="T" unlisted="y">
                            <purpose>Read image using RGBA interface</purpose>
                        </ref>
                        <ref target="ref/tiff.readrgbastrip.html" name="Tiff.readRGBAStrip" init="T" unlisted="y">
                            <purpose>Read strip data using RGBA interface</purpose>
                        </ref>
                        <ref target="ref/tiff.readrgbatile.html" name="Tiff.readRGBATile" init="T" unlisted="y">
                            <purpose>Read tile data using RGBA interface</purpose>
                        </ref>
                        <ref target="ref/tiff.rewritedirectory.html" name="Tiff.rewriteDirectory" init="T" unlisted="y">
                            <purpose>Write modified metadata to existing IFD</purpose>
                        </ref>
                        <ref target="ref/tiff.setdirectory.html" name="Tiff.setDirectory" init="T" unlisted="y">
                            <purpose>Make specified IFD the current IFD</purpose>
                        </ref>
                        <ref target="ref/tiff.setsubdirectory.html" name="Tiff.setSubDirectory" init="T" unlisted="y">
                            <purpose>Make subIFD the current IFD</purpose>
                        </ref>
                        <ref target="ref/tiff.settag.html" name="Tiff.setTag" init="T" unlisted="y">
                            <purpose>Set value of tag</purpose>
                        </ref>
                        <ref target="ref/tiff.write.html" name="Tiff.write" init="T" unlisted="y">
                            <purpose>Write entire image</purpose>
                        </ref>
                        <ref target="ref/tiff.writedirectory.html" name="Tiff.writeDirectory" init="T" unlisted="y">
                            <purpose>Create new IFD and make it current IFD</purpose>
                        </ref>
                        <ref target="ref/tiff.writeencodedstrip.html" name="Tiff.writeEncodedStrip" init="T" unlisted="y">
                            <purpose>Write data to specified strip</purpose>
                        </ref>
                        <ref target="ref/tiff.writeencodedtile.html" name="Tiff.writeEncodedTile" init="T" unlisted="y">
                            <purpose>Write data to specified tile</purpose>
                        </ref>
                    </cat>
                    <cat target="scientific-data.html">
                        <title>Scientific Data</title>
                        <cat target="network-common-data-form.html">
                            <title>NetCDF Files</title>
                            <ref target="ref/nccreate.html" name="nccreate" init="N">
                                <purpose>Create variable in NetCDF file</purpose>
                            </ref>
                            <ref target="ref/ncdisp.html" name="ncdisp" init="N">
                                <purpose>Display contents of NetCDF data source in Command Window</purpose>
                            </ref>
                            <ref target="ref/ncinfo.html" name="ncinfo" init="N">
                                <purpose>Return information about NetCDF data source</purpose>
                            </ref>
                            <ref target="ref/ncread.html" name="ncread" init="N">
                                <purpose>Read data from variable in NetCDF data source</purpose>
                            </ref>
                            <ref target="ref/ncreadatt.html" name="ncreadatt" init="N">
                                <purpose>Read attribute value from NetCDF data source</purpose>
                            </ref>
                            <ref target="ref/ncwrite.html" name="ncwrite" init="N">
                                <purpose>Write data to NetCDF file</purpose>
                            </ref>
                            <ref target="ref/ncwriteatt.html" name="ncwriteatt" init="N">
                                <purpose>Write attribute to NetCDF file</purpose>
                            </ref>
                            <ref target="ref/ncwriteschema.html" name="ncwriteschema" init="N">
                                <purpose>Add NetCDF schema definitions to NetCDF file</purpose>
                            </ref>
                            <ref target="ref/netcdf.setchunkcache.html" name="netcdf.setChunkCache" init="N">
                                <purpose>Set default chunk cache settings for NetCDF library</purpose>
                            </ref>
                            <ref target="ref/netcdf.getchunkcache.html" name="netcdf.getChunkCache" init="N">
                                <purpose>Retrieve chunk cache settings for NetCDF library</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqlibvers.html" name="netcdf.inqLibVers" init="N">
                                <purpose>Return NetCDF library version information</purpose>
                            </ref>
                            <ref target="ref/netcdf.setdefaultformat.html" name="netcdf.setDefaultFormat" init="N">
                                <purpose>Change default netCDF file format</purpose>
                            </ref>
                            <ref target="ref/netcdf.abort.html" name="netcdf.abort" init="N">
                                <purpose>Revert recent netCDF file definitions</purpose>
                            </ref>
                            <ref target="ref/netcdf.close.html" name="netcdf.close" init="N">
                                <purpose>Close netCDF file</purpose>
                            </ref>
                            <ref target="ref/netcdf.create.html" name="netcdf.create" init="N">
                                <purpose>Create new NetCDF dataset</purpose>
                            </ref>
                            <ref target="ref/netcdf.enddef.html" name="netcdf.endDef" init="N">
                                <purpose>End netCDF file define mode</purpose>
                            </ref>
                            <ref target="ref/netcdf.inq.html" name="netcdf.inq" init="N">
                                <purpose>Return information about netCDF file</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqformat.html" name="netcdf.inqFormat" init="N">
                                <purpose>Determine format of NetCDF file</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqgrps.html" name="netcdf.inqGrps" init="N">
                                <purpose>Retrieve array of child group IDs</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqunlimdims.html" name="netcdf.inqUnlimDims" init="N">
                                <purpose>Return list of unlimited dimensions in group</purpose>
                            </ref>
                            <ref target="ref/netcdf.open.html" name="netcdf.open" init="N">
                                <purpose>Open NetCDF data source</purpose>
                            </ref>
                            <ref target="ref/netcdf.redef.html" name="netcdf.reDef" init="N">
                                <purpose>Put open netCDF file into define mode</purpose>
                            </ref>
                            <ref target="ref/netcdf.setfill.html" name="netcdf.setFill" init="N">
                                <purpose>Set netCDF fill mode</purpose>
                            </ref>
                            <ref target="ref/netcdf.sync.html" name="netcdf.sync" init="N">
                                <purpose>Synchronize netCDF file to disk</purpose>
                            </ref>
                            <ref target="ref/netcdf.defdim.html" name="netcdf.defDim" init="N">
                                <purpose>Create netCDF dimension</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqdim.html" name="netcdf.inqDim" init="N">
                                <purpose>Return netCDF dimension name and length</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqdimid.html" name="netcdf.inqDimID" init="N">
                                <purpose>Return dimension ID</purpose>
                            </ref>
                            <ref target="ref/netcdf.renamedim.html" name="netcdf.renameDim" init="N">
                                <purpose>Change name of netCDF dimension</purpose>
                            </ref>
                            <ref target="ref/netcdf.defgrp.html" name="netcdf.defGrp" init="N">
                                <purpose>Create group in NetCDF file</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqdimids.html" name="netcdf.inqDimIDs" init="N">
                                <purpose>Retrieve list of dimension identifiers in group</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqgrpname.html" name="netcdf.inqGrpName" init="N">
                                <purpose>Retrieve name of group</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqgrpnamefull.html" name="netcdf.inqGrpNameFull" init="N">
                                <purpose>Complete pathname of group</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqgrpparent.html" name="netcdf.inqGrpParent" init="N">
                                <purpose>Retrieve ID of parent group.</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqncid.html" name="netcdf.inqNcid" init="N">
                                <purpose>Return ID of named group</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqvarids.html" name="netcdf.inqVarIDs" init="N">
                                <purpose>IDs of all variables in group</purpose>
                            </ref>
                            <ref target="ref/netcdf.defvarfill.html" name="netcdf.defVarFill" init="N">
                                <purpose>Define fill parameters for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqvardeflate.html" name="netcdf.inqVarDeflate" init="N">
                                <purpose>Determine compression settings for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.defvar.html" name="netcdf.defVar" init="N">
                                <purpose>Create NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.defvarchunking.html" name="netcdf.defVarChunking" init="N">
                                <purpose>Define chunking behavior for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.defvardeflate.html" name="netcdf.defVarDeflate" init="N">
                                <purpose>Define compression parameters for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.defvarfletcher32.html" name="netcdf.defVarFletcher32" init="N">
                                <purpose>Define checksum parameters for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.getvar.html" name="netcdf.getVar" init="N">
                                <purpose>Read data from NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqvar.html" name="netcdf.inqVar" init="N">
                                <purpose>Information about variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqvarchunking.html" name="netcdf.inqVarChunking" init="N">
                                <purpose>Determine chunking settings for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqvarfill.html" name="netcdf.inqVarFill" init="N">
                                <purpose>Determine values of fill parameters for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqvarfletcher32.html" name="netcdf.inqVarFletcher32" init="N">
                                <purpose>Fletcher32 checksum setting for NetCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqvarid.html" name="netcdf.inqVarID" init="N">
                                <purpose>Return ID associated with variable name</purpose>
                            </ref>
                            <ref target="ref/netcdf.putvar.html" name="netcdf.putVar" init="N">
                                <purpose>Write data to netCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.renamevar.html" name="netcdf.renameVar" init="N">
                                <purpose>Change name of netCDF variable</purpose>
                            </ref>
                            <ref target="ref/netcdf.copyatt.html" name="netcdf.copyAtt" init="N">
                                <purpose>Copy attribute to new location</purpose>
                            </ref>
                            <ref target="ref/netcdf.delatt.html" name="netcdf.delAtt" init="N">
                                <purpose>Delete netCDF attribute</purpose>
                            </ref>
                            <ref target="ref/netcdf.getatt.html" name="netcdf.getAtt" init="N">
                                <purpose>Return netCDF attribute</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqatt.html" name="netcdf.inqAtt" init="N">
                                <purpose>Return information about netCDF attribute</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqattid.html" name="netcdf.inqAttID" init="N">
                                <purpose>Return ID of netCDF attribute</purpose>
                            </ref>
                            <ref target="ref/netcdf.inqattname.html" name="netcdf.inqAttName" init="N">
                                <purpose>Return name of netCDF attribute</purpose>
                            </ref>
                            <ref target="ref/netcdf.putatt.html" name="netcdf.putAtt" init="N">
                                <purpose>Write netCDF attribute</purpose>
                            </ref>
                            <ref target="ref/netcdf.renameatt.html" name="netcdf.renameAtt" init="N">
                                <purpose>Change name of attribute</purpose>
                            </ref>
                            <ref target="ref/netcdf.getconstant.html" name="netcdf.getConstant" init="N">
                                <purpose>Return numeric value of named constant</purpose>
                            </ref>
                            <ref target="ref/netcdf.getconstantnames.html" name="netcdf.getConstantNames" init="N">
                                <purpose>Return list of constants known to netCDF library</purpose>
                            </ref>
                        </cat>
                        <cat target="hdf5-files.html">
                            <title>HDF5 Files</title>
                            <cat target="high-level-functions.html">
                                <title>High-Level Functions</title>
                                <ref target="ref/h5create.html" name="h5create" init="H">
                                    <purpose>Create HDF5 dataset</purpose>
                                </ref>
                                <ref target="ref/h5disp.html" name="h5disp" init="H">
                                    <purpose>Display contents of HDF5 file</purpose>
                                </ref>
                                <ref target="ref/h5info.html" name="h5info" init="H">
                                    <purpose>Information about HDF5 file</purpose>
                                </ref>
                                <ref target="ref/h5read.html" name="h5read" init="H">
                                    <purpose>Read data from HDF5 dataset</purpose>
                                </ref>
                                <ref target="ref/h5readatt.html" name="h5readatt" init="H">
                                    <purpose>Read attribute from HDF5 file</purpose>
                                </ref>
                                <ref target="ref/h5write.html" name="h5write" init="H">
                                    <purpose>Write to HDF5 dataset</purpose>
                                </ref>
                                <ref target="ref/h5writeatt.html" name="h5writeatt" init="H">
                                    <purpose>Write HDF5 attribute</purpose>
                                </ref>
                                <ref target="ref/hdf5info.html" name="hdf5info" init="H" unlisted="y">
                                    <purpose>(Not recommended) Information about HDF5 file</purpose>
                                </ref>
                                <ref target="ref/hdf5read.html" name="hdf5read" init="H" unlisted="y">
                                    <purpose>(Not recommended) Read HDF5 file</purpose>
                                </ref>
                                <ref target="ref/hdf5write.html" name="hdf5write" init="H" unlisted="y">
                                    <purpose>(Not recommended) Write data to file in HDF5 format</purpose>
                                </ref>
                            </cat>
                            <cat target="low-level-functions.html">
                                <title>Low-Level Functions</title>
                                <cat target="hdf5.html">
                                    <title>Library (H5)</title>
                                    <ref target="ref/h5.close.html" name="H5.close" init="H">
                                        <purpose>Close HDF5 library</purpose>
                                    </ref>
                                    <ref target="ref/h5.garbage_collect.html" name="H5.garbage_collect" init="H">
                                        <purpose>Free unused memory in HDF5 library</purpose>
                                    </ref>
                                    <ref target="ref/h5.get_libversion.html" name="H5.get_libversion" init="H">
                                        <purpose>Version of HDF5 library</purpose>
                                    </ref>
                                    <ref target="ref/h5.open.html" name="H5.open" init="H">
                                        <purpose>Open HDF5 library</purpose>
                                    </ref>
                                    <ref target="ref/h5.set_free_list_limits.html" name="H5.set_free_list_limits" init="H">
                                        <purpose>Set size limits on free lists</purpose>
                                    </ref>
                                </cat>
                                <cat target="attribute-h5a.html">
                                    <title>Attribute (H5A)</title>
                                    <ref target="ref/h5a.close.html" name="H5A.close" init="H">
                                        <purpose>Close specified attribute</purpose>
                                    </ref>
                                    <ref target="ref/h5a.create.html" name="H5A.create" init="H">
                                        <purpose>Create attribute</purpose>
                                    </ref>
                                    <ref target="ref/h5a.delete.html" name="H5A.delete" init="H">
                                        <purpose>Delete attribute</purpose>
                                    </ref>
                                    <ref target="ref/h5a.get_info.html" name="H5A.get_info" init="H">
                                        <purpose>Information about attribute</purpose>
                                    </ref>
                                    <ref target="ref/h5a.get_name.html" name="H5A.get_name" init="H">
                                        <purpose>Attribute name</purpose>
                                    </ref>
                                    <ref target="ref/h5a.get_space.html" name="H5A.get_space" init="H">
                                        <purpose>Copy of attribute data space</purpose>
                                    </ref>
                                    <ref target="ref/h5a.get_type.html" name="H5A.get_type" init="H">
                                        <purpose>Copy of attribute data type</purpose>
                                    </ref>
                                    <ref target="ref/h5a.iterate.html" name="H5A.iterate" init="H">
                                        <purpose>Execute function for attributes attached to object</purpose>
                                    </ref>
                                    <ref target="ref/h5a.open.html" name="H5A.open" init="H">
                                        <purpose>Open attribute</purpose>
                                    </ref>
                                    <ref target="ref/h5a.open_by_idx.html" name="H5A.open_by_idx" init="H">
                                        <purpose>Open attribute specified by index</purpose>
                                    </ref>
                                    <ref target="ref/h5a.open_by_name.html" name="H5A.open_by_name" init="H">
                                        <purpose>Open attribute specified by name</purpose>
                                    </ref>
                                    <ref target="ref/h5a.read.html" name="H5A.read" init="H">
                                        <purpose>Read attribute</purpose>
                                    </ref>
                                    <ref target="ref/h5a.write.html" name="H5A.write" init="H">
                                        <purpose>Write attribute</purpose>
                                    </ref>
                                </cat>
                                <cat target="dataset-h5d.html">
                                    <title>Dataset (H5D)</title>
                                    <ref target="ref/h5d.close.html" name="H5D.close" init="H">
                                        <purpose>Close dataset</purpose>
                                    </ref>
                                    <ref target="ref/h5d.create.html" name="H5D.create" init="H">
                                        <purpose>Create new dataset</purpose>
                                    </ref>
                                    <ref target="ref/h5d.get_access_plist.html" name="H5D.get_access_plist" init="H">
                                        <purpose>Copy of dataset access property list</purpose>
                                    </ref>
                                    <ref target="ref/h5d.get_create_plist.html" name="H5D.get_create_plist" init="H">
                                        <purpose>Copy of dataset creation property list</purpose>
                                    </ref>
                                    <ref target="ref/h5d.get_offset.html" name="H5D.get_offset" init="H">
                                        <purpose>Location of dataset in file</purpose>
                                    </ref>
                                    <ref target="ref/h5d.get_space.html" name="H5D.get_space" init="H">
                                        <purpose>Copy of dataset data space</purpose>
                                    </ref>
                                    <ref target="ref/h5d.get_space_status.html" name="H5D.get_space_status" init="H">
                                        <purpose>Determine if space is allocated</purpose>
                                    </ref>
                                    <ref target="ref/h5d.get_storage_size.html" name="H5D.get_storage_size" init="H">
                                        <purpose>Determine required storage size</purpose>
                                    </ref>
                                    <ref target="ref/h5d.get_type.html" name="H5D.get_type" init="H">
                                        <purpose>Copy of datatype</purpose>
                                    </ref>
                                    <ref target="ref/h5d.open.html" name="H5D.open" init="H">
                                        <purpose>Open specified dataset</purpose>
                                    </ref>
                                    <ref target="ref/h5d.read.html" name="H5D.read" init="H">
                                        <purpose>Read data from HDF5 dataset</purpose>
                                    </ref>
                                    <ref target="ref/h5d.set_extent.html" name="H5D.set_extent" init="H">
                                        <purpose>Change size of dataset dimensions</purpose>
                                    </ref>
                                    <ref target="ref/h5d.vlen_get_buf_size.html" name="H5D.vlen_get_buf_size" init="H">
                                        <purpose>Determine variable length storage requirements</purpose>
                                    </ref>
                                    <ref target="ref/h5d.write.html" name="H5D.write" init="H">
                                        <purpose>Write data to HDF5 dataset</purpose>
                                    </ref>
                                </cat>
                                <cat target="dimension-scale-h5ds.html">
                                    <title>Dimension Scale (H5DS)</title>
                                    <ref target="ref/h5ds.attach_scale.html" name="H5DS.attach_scale" init="H">
                                        <purpose>Attach dimension scale to specific dataset dimension</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.detach_scale.html" name="H5DS.detach_scale" init="H">
                                        <purpose>Detach dimension scale from specific dataset dimension</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.get_label.html" name="H5DS.get_label" init="H">
                                        <purpose>Retrieve label from specific dataset dimension</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.get_num_scales.html" name="H5DS.get_num_scales" init="H">
                                        <purpose>Number of scales attached to dataset dimension</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.get_scale_name.html" name="H5DS.get_scale_name" init="H">
                                        <purpose>Name of dimension scale</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.is_scale.html" name="H5DS.is_scale" init="H">
                                        <purpose>Determine if dataset is a dimension scale</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.iterate_scales.html" name="H5DS.iterate_scales" init="H">
                                        <purpose>Iterate on scales attached to dataset dimension</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.set_label.html" name="H5DS.set_label" init="H">
                                        <purpose>Set label for dataset dimension</purpose>
                                    </ref>
                                    <ref target="ref/h5ds.set_scale.html" name="H5DS.set_scale" init="H">
                                        <purpose>Convert dataset to dimension scale</purpose>
                                    </ref>
                                </cat>
                                <cat target="error-h5e.html">
                                    <title>Error (H5E)</title>
                                    <ref target="ref/h5e.clear.html" name="H5E.clear" init="H">
                                        <purpose>Clear error stack</purpose>
                                    </ref>
                                    <ref target="ref/h5e.get_major.html" name="H5E.get_major" init="H">
                                        <purpose>Description of major error number</purpose>
                                    </ref>
                                    <ref target="ref/h5e.get_minor.html" name="H5E.get_minor" init="H">
                                        <purpose>Description of minor error number</purpose>
                                    </ref>
                                    <ref target="ref/h5e.walk.html" name="H5E.walk" init="H">
                                        <purpose>Walk error stack</purpose>
                                    </ref>
                                </cat>
                                <cat target="file-h5f.html">
                                    <title>File (H5F)</title>
                                    <ref target="ref/h5f.close.html" name="H5F.close" init="H">
                                        <purpose>Close HDF5 file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.create.html" name="H5F.create" init="H">
                                        <purpose>Create HDF5 file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.flush.html" name="H5F.flush" init="H">
                                        <purpose>Flush buffers to disk</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_access_plist.html" name="H5F.get_access_plist" init="H">
                                        <purpose>File access property list</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_create_plist.html" name="H5F.get_create_plist" init="H">
                                        <purpose>File creation property list</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_filesize.html" name="H5F.get_filesize" init="H">
                                        <purpose>Size of HDF5 file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_freespace.html" name="H5F.get_freespace" init="H">
                                        <purpose>Amount of free space in file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_info.html" name="H5F.get_info" init="H">
                                        <purpose>Global information about file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_mdc_config.html" name="H5F.get_mdc_config" init="H">
                                        <purpose>Metadata cache configuration</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_mdc_hit_rate.html" name="H5F.get_mdc_hit_rate" init="H">
                                        <purpose>Metadata cache hit-rate</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_mdc_size.html" name="H5F.get_mdc_size" init="H">
                                        <purpose>Metadata cache size data</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_name.html" name="H5F.get_name" init="H">
                                        <purpose>Name of HDF5 file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_obj_count.html" name="H5F.get_obj_count" init="H">
                                        <purpose>Number of open objects in HDF5 file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.get_obj_ids.html" name="H5F.get_obj_ids" init="H">
                                        <purpose>List of open HDF5 file objects</purpose>
                                    </ref>
                                    <ref target="ref/h5f.is_hdf5.html" name="H5F.is_hdf5" init="H">
                                        <purpose>Determine if file is HDF5</purpose>
                                    </ref>
                                    <ref target="ref/h5f.mount.html" name="H5F.mount" init="H">
                                        <purpose>Mount HDF5 file onto specified location</purpose>
                                    </ref>
                                    <ref target="ref/h5f.open.html" name="H5F.open" init="H">
                                        <purpose>Open HDF5 file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.reopen.html" name="H5F.reopen" init="H">
                                        <purpose>Reopen HDF5 file</purpose>
                                    </ref>
                                    <ref target="ref/h5f.set_mdc_config.html" name="H5F.set_mdc_config" init="H">
                                        <purpose>Configure HDF5 file metadata cache</purpose>
                                    </ref>
                                    <ref target="ref/h5f.unmount.html" name="H5F.unmount" init="H">
                                        <purpose>Unmount file or group from mount point</purpose>
                                    </ref>
                                </cat>
                                <cat target="group-h5g.html">
                                    <title>Group (H5G)</title>
                                    <ref target="ref/h5g.close.html" name="H5G.close" init="H">
                                        <purpose>Close group</purpose>
                                    </ref>
                                    <ref target="ref/h5g.create.html" name="H5G.create" init="H">
                                        <purpose>Create group</purpose>
                                    </ref>
                                    <ref target="ref/h5g.get_info.html" name="H5G.get_info" init="H">
                                        <purpose>Information about group</purpose>
                                    </ref>
                                    <ref target="ref/h5g.open.html" name="H5G.open" init="H">
                                        <purpose>Open specified group</purpose>
                                    </ref>
                                </cat>
                                <cat target="identifier-h5i.html">
                                    <title>Identifier (H5I)</title>
                                    <ref target="ref/h5i.dec_ref.html" name="H5I.dec_ref" init="H">
                                        <purpose>Decrement reference count</purpose>
                                    </ref>
                                    <ref target="ref/h5i.get_file_id.html" name="H5I.get_file_id" init="H">
                                        <purpose>File identifier for specified object</purpose>
                                    </ref>
                                    <ref target="ref/h5i.get_name.html" name="H5I.get_name" init="H">
                                        <purpose>Name of object</purpose>
                                    </ref>
                                    <ref target="ref/h5i.get_ref.html" name="H5I.get_ref" init="H">
                                        <purpose>Reference count of object</purpose>
                                    </ref>
                                    <ref target="ref/h5i.get_type.html" name="H5I.get_type" init="H">
                                        <purpose>Type of object</purpose>
                                    </ref>
                                    <ref target="ref/h5i.inc_ref.html" name="H5I.inc_ref" init="H">
                                        <purpose>Increment reference count of specified object</purpose>
                                    </ref>
                                    <ref target="ref/h5i.is_valid.html" name="H5I.is_valid" init="H">
                                        <purpose>Determine if specified identifier is valid</purpose>
                                    </ref>
                                </cat>
                                <cat target="link-h5l.html">
                                    <title>Link (H5L)</title>
                                    <ref target="ref/h5l.copy.html" name="H5L.copy" init="H">
                                        <purpose>Copy link from source location to destination location</purpose>
                                    </ref>
                                    <ref target="ref/h5l.create_external.html" name="H5L.create_external" init="H">
                                        <purpose>Create soft link to external object</purpose>
                                    </ref>
                                    <ref target="ref/h5l.create_hard.html" name="H5L.create_hard" init="H">
                                        <purpose>Create hard link</purpose>
                                    </ref>
                                    <ref target="ref/h5l.create_soft.html" name="H5L.create_soft" init="H">
                                        <purpose>Create soft link</purpose>
                                    </ref>
                                    <ref target="ref/h5l.delete.html" name="H5L.delete" init="H">
                                        <purpose>Remove link</purpose>
                                    </ref>
                                    <ref target="ref/h5l.exists.html" name="H5L.exists" init="H">
                                        <purpose>Determine if link exists</purpose>
                                    </ref>
                                    <ref target="ref/h5l.get_info.html" name="H5L.get_info" init="H">
                                        <purpose>Information about link</purpose>
                                    </ref>
                                    <ref target="ref/h5l.get_name_by_idx.html" name="H5L.get_name_by_idx" init="H">
                                        <purpose>Information about link specified by index</purpose>
                                    </ref>
                                    <ref target="ref/h5l.get_val.html" name="H5L.get_val" init="H">
                                        <purpose>Value of symbolic link</purpose>
                                    </ref>
                                    <ref target="ref/h5l.iterate.html" name="H5L.iterate" init="H">
                                        <purpose>Iterate over links</purpose>
                                    </ref>
                                    <ref target="ref/h5l.iterate_by_name.html" name="H5L.iterate_by_name" init="H">
                                        <purpose>Iterate through links in group specified by name</purpose>
                                    </ref>
                                    <ref target="ref/h5l.move.html" name="H5L.move" init="H">
                                        <purpose>Rename link</purpose>
                                    </ref>
                                    <ref target="ref/h5l.visit.html" name="H5L.visit" init="H">
                                        <purpose>Recursively iterate through links in group specified by group identifier</purpose>
                                    </ref>
                                    <ref target="ref/h5l.visit_by_name.html" name="H5L.visit_by_name" init="H">
                                        <purpose>Recursively iterate through links in group specified by location and group name</purpose>
                                    </ref>
                                </cat>
                                <cat target="matlab-h5ml.html">
                                    <title>MATLAB (H5ML)</title>
                                    <ref target="ref/h5ml.compare_values.html" name="H5ML.compare_values" init="H">
                                        <purpose>Numerically compare two HDF5 values</purpose>
                                    </ref>
                                    <ref target="ref/h5ml.get_constant_names.html" name="H5ML.get_constant_names" init="H">
                                        <purpose>Constants known by HDF5 library</purpose>
                                    </ref>
                                    <ref target="ref/h5ml.get_constant_value.html" name="H5ML.get_constant_value" init="H">
                                        <purpose>Value corresponding to a string</purpose>
                                    </ref>
                                    <ref target="ref/h5ml.get_function_names.html" name="H5ML.get_function_names" init="H">
                                        <purpose>Functions provided by HDF5 library</purpose>
                                    </ref>
                                    <ref target="ref/h5ml.get_mem_datatype.html" name="H5ML.get_mem_datatype" init="H">
                                        <purpose>Data type for dataset ID</purpose>
                                    </ref>
                                    <ref target="ref/h5ml.hoffset.html" name="H5ML.hoffset" init="H" unlisted="y">
                                        <purpose>Determine the offset of a field within a structure</purpose>
                                    </ref>
                                    <ref target="ref/h5ml.sizeof.html" name="H5ML.sizeof" init="H" unlisted="y">
                                        <purpose>Return the size (in bytes) of a variable as stored on disk</purpose>
                                    </ref>
                                </cat>
                                <cat target="object-h5o.html">
                                    <title>Object (H5O)</title>
                                    <ref target="ref/h5o.close.html" name="H5O.close" init="H">
                                        <purpose>Close object</purpose>
                                    </ref>
                                    <ref target="ref/h5o.copy.html" name="H5O.copy" init="H">
                                        <purpose>Copy object from source location to destination location</purpose>
                                    </ref>
                                    <ref target="ref/h5o.get_comment.html" name="H5O.get_comment" init="H">
                                        <purpose>Get comment for object specified by object identifier</purpose>
                                    </ref>
                                    <ref target="ref/h5o.get_comment_by_name.html" name="H5O.get_comment_by_name" init="H">
                                        <purpose>Get comment for object specified by location and object name</purpose>
                                    </ref>
                                    <ref target="ref/h5o.get_info.html" name="H5O.get_info" init="H">
                                        <purpose>Object metadata</purpose>
                                    </ref>
                                    <ref target="ref/h5o.link.html" name="H5O.link" init="H">
                                        <purpose>Create hard link to specified object</purpose>
                                    </ref>
                                    <ref target="ref/h5o.open.html" name="H5O.open" init="H">
                                        <purpose>Open specified object</purpose>
                                    </ref>
                                    <ref target="ref/h5o.open_by_idx.html" name="H5O.open_by_idx" init="H">
                                        <purpose>Open object specified by index</purpose>
                                    </ref>
                                    <ref target="ref/h5o.set_comment.html" name="H5O.set_comment" init="H">
                                        <purpose>Set comment for object specified by object identifier</purpose>
                                    </ref>
                                    <ref target="ref/h5o.set_comment_by_name.html" name="H5O.set_comment_by_name" init="H">
                                        <purpose>Set comment for object specified by location and object name</purpose>
                                    </ref>
                                    <ref target="ref/h5o.visit.html" name="H5O.visit" init="H">
                                        <purpose>Visit objects specified by object identifier</purpose>
                                    </ref>
                                    <ref target="ref/h5o.visit_by_name.html" name="H5O.visit_by_name" init="H">
                                        <purpose>Visit objects specified by location and object name</purpose>
                                    </ref>
                                </cat>
                                <cat target="property-h5p.html">
                                    <title>Property (H5P)</title>
                                    <cat target="general-property-list-operations.html">
                                        <title>General Property List Operations</title>
                                        <ref target="ref/h5p.close.html" name="H5P.close" init="H">
                                            <purpose>Close property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.copy.html" name="H5P.copy" init="H">
                                            <purpose>Copy of property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.create.html" name="H5P.create" init="H">
                                            <purpose>Create new property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_class.html" name="H5P.get_class" init="H">
                                            <purpose>Property list class</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="generic-property-list-operations.html">
                                        <title>Generic Property List Operations</title>
                                        <ref target="ref/h5p.close_class.html" name="H5P.close_class" init="H">
                                            <purpose>Close property list class</purpose>
                                        </ref>
                                        <ref target="ref/h5p.equal.html" name="H5P.equal" init="H">
                                            <purpose>Determine equality of property lists</purpose>
                                        </ref>
                                        <ref target="ref/h5p.exist.html" name="H5P.exist" init="H">
                                            <purpose>Determine if specified property exists in property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get.html" name="H5P.get" init="H">
                                            <purpose>Value of specified property in property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_class_name.html" name="H5P.get_class_name" init="H">
                                            <purpose>Name of property list class</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_class_parent.html" name="H5P.get_class_parent" init="H">
                                            <purpose>Identifier for parent class</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_nprops.html" name="H5P.get_nprops" init="H">
                                            <purpose>Query number of properties in property list or class</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_size.html" name="H5P.get_size" init="H">
                                            <purpose>Query size of property value in bytes</purpose>
                                        </ref>
                                        <ref target="ref/h5p.isa_class.html" name="H5P.isa_class" init="H">
                                            <purpose>Determine if property list is member of class</purpose>
                                        </ref>
                                        <ref target="ref/h5p.iterate.html" name="H5P.iterate" init="H">
                                            <purpose>Iterate over properties in property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set.html" name="H5P.set" init="H">
                                            <purpose>Set property list value</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="dataset-access-memory-and-transfer-properties.html">
                                        <title>Dataset Access, Memory, and Transfer Properties</title>
                                        <ref target="ref/h5p.get_btree_ratios.html" name="H5P.get_btree_ratios" init="H">
                                            <purpose>B-tree split ratios</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_chunk_cache.html" name="H5P.get_chunk_cache" init="H">
                                            <purpose>Raw data chunk cache parameters</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_edc_check.html" name="H5P.get_edc_check" init="H">
                                            <purpose>Determine if error detection is enabled</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_hyper_vector_size.html" name="H5P.get_hyper_vector_size" init="H">
                                            <purpose>Number of I/O vectors</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_btree_ratios.html" name="H5P.set_btree_ratios" init="H">
                                            <purpose>Set B-tree split ratios for dataset transfer</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_chunk_cache.html" name="H5P.set_chunk_cache" init="H">
                                            <purpose>Set raw data chunk cache parameters</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_edc_check.html" name="H5P.set_edc_check" init="H">
                                            <purpose>Enable error detection for dataset transfer</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_hyper_vector_size.html" name="H5P.set_hyper_vector_size" init="H">
                                            <purpose>Set number of I/O vectors for hyperslab I/O</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="dataset-creation-properties.html">
                                        <title>Dataset Creation Properties</title>
                                        <ref target="ref/h5p.all_filters_avail.html" name="H5P.all_filters_avail" init="H">
                                            <purpose>Determine availability of all filters</purpose>
                                        </ref>
                                        <ref target="ref/h5p.fill_value_defined.html" name="H5P.fill_value_defined" init="H">
                                            <purpose>Determine if fill value is defined</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_alloc_time.html" name="H5P.get_alloc_time" init="H">
                                            <purpose>Return timing of storage space allocation</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_chunk.html" name="H5P.get_chunk" init="H">
                                            <purpose>Return size of chunks</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_external.html" name="H5P.get_external" init="H">
                                            <purpose>Return information about external file</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_external_count.html" name="H5P.get_external_count" init="H">
                                            <purpose>Return count of external files</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_fill_time.html" name="H5P.get_fill_time" init="H">
                                            <purpose>Return time when fill values are written to dataset</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_fill_value.html" name="H5P.get_fill_value" init="H">
                                            <purpose>Return dataset fill value</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_filter.html" name="H5P.get_filter" init="H">
                                            <purpose>Return information about filter in pipeline</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_filter_by_id.html" name="H5P.get_filter_by_id" init="H">
                                            <purpose>Return information about specified filter</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_layout.html" name="H5P.get_layout" init="H">
                                            <purpose>Determine layout of raw data for dataset</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_nfilters.html" name="H5P.get_nfilters" init="H">
                                            <purpose>Return number of filters in pipeline</purpose>
                                        </ref>
                                        <ref target="ref/h5p.modify_filter.html" name="H5P.modify_filter" init="H">
                                            <purpose>Modify filter in pipeline</purpose>
                                        </ref>
                                        <ref target="ref/h5p.remove_filter.html" name="H5P.remove_filter" init="H">
                                            <purpose>Remove filter from property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_alloc_time.html" name="H5P.set_alloc_time" init="H">
                                            <purpose>Set timing for storage space allocation</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_chunk.html" name="H5P.set_chunk" init="H">
                                            <purpose>Set chunk size</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_deflate.html" name="H5P.set_deflate" init="H">
                                            <purpose>Set compression method and compression level</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_external.html" name="H5P.set_external" init="H">
                                            <purpose>Add additional file to external file list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fill_time.html" name="H5P.set_fill_time" init="H">
                                            <purpose>Set time when fill values are written to dataset</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fill_value.html" name="H5P.set_fill_value" init="H">
                                            <purpose>Set fill value for dataset creation property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_filter.html" name="H5P.set_filter" init="H">
                                            <purpose>Add filter to filter pipeline</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fletcher32.html" name="H5P.set_fletcher32" init="H">
                                            <purpose>Set Fletcher32 checksum filter in dataset creation</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_layout.html" name="H5P.set_layout" init="H">
                                            <purpose>Set type of storage for dataset</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_nbit.html" name="H5P.set_nbit" init="H">
                                            <purpose>Set N-Bit filter</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_scaleoffset.html" name="H5P.set_scaleoffset" init="H">
                                            <purpose>Set Scale-Offset filter</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_shuffle.html" name="H5P.set_shuffle" init="H">
                                            <purpose>Set shuffle filter</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="file-access-properties.html">
                                        <title>File Access Properties</title>
                                        <ref target="ref/h5p.get_alignment.html" name="H5P.get_alignment" init="H">
                                            <purpose>Retrieve alignment properties</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_driver.html" name="H5P.get_driver" init="H">
                                            <purpose>Low-level file driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_family_offset.html" name="H5P.get_family_offset" init="H">
                                            <purpose>Offset for family file driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_fapl_core.html" name="H5P.get_fapl_core" init="H">
                                            <purpose>Information about core file driver properties</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_fapl_family.html" name="H5P.get_fapl_family" init="H">
                                            <purpose>File access property list information</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_fapl_multi.html" name="H5P.get_fapl_multi" init="H">
                                            <purpose>Information about multifile access property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_fclose_degree.html" name="H5P.get_fclose_degree" init="H">
                                            <purpose>File close degree</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_libver_bounds.html" name="H5P.get_libver_bounds" init="H">
                                            <purpose>Library version bounds settings</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_gc_references.html" name="H5P.get_gc_references" init="H">
                                            <purpose>Garbage collection references setting</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_mdc_config.html" name="H5P.get_mdc_config" init="H">
                                            <purpose>Metadata cache configuration</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_meta_block_size.html" name="H5P.get_meta_block_size" init="H">
                                            <purpose>Metadata block size setting</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_multi_type.html" name="H5P.get_multi_type" init="H">
                                            <purpose>Type of data property for MULTI driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_sieve_buf_size.html" name="H5P.get_sieve_buf_size" init="H">
                                            <purpose>Maximum data sieve buffer size</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_small_data_block_size.html" name="H5P.get_small_data_block_size" init="H">
                                            <purpose>Small data block size setting</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_alignment.html" name="H5P.set_alignment" init="H">
                                            <purpose>Set alignment properties for file access property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_family_offset.html" name="H5P.set_family_offset" init="H">
                                            <purpose>Set offset property for family of files</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fapl_core.html" name="H5P.set_fapl_core" init="H">
                                            <purpose>Modify file access to use H5FD_CORE driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fapl_family.html" name="H5P.set_fapl_family" init="H">
                                            <purpose>Set file access to use family driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fapl_log.html" name="H5P.set_fapl_log" init="H">
                                            <purpose>Set use of logging driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fapl_multi.html" name="H5P.set_fapl_multi" init="H">
                                            <purpose>Set use of multifile driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fapl_sec2.html" name="H5P.set_fapl_sec2" init="H">
                                            <purpose>Set file access for sec2 driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fapl_split.html" name="H5P.set_fapl_split" init="H">
                                            <purpose>Set file access for emulation of split file driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fapl_stdio.html" name="H5P.set_fapl_stdio" init="H">
                                            <purpose>Set file access for standard I/O driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_fclose_degree.html" name="H5P.set_fclose_degree" init="H">
                                            <purpose>Set file access for file close degree</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_gc_references.html" name="H5P.set_gc_references" init="H">
                                            <purpose>Set garbage collection references flag</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_libver_bounds.html" name="H5P.set_libver_bounds" init="H">
                                            <purpose>Set library version bounds for objects</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_mdc_config.html" name="H5P.set_mdc_config" init="H">
                                            <purpose>Set initial metadata cache configuration</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_meta_block_size.html" name="H5P.set_meta_block_size" init="H">
                                            <purpose>Set minimum metadata block size</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_multi_type.html" name="H5P.set_multi_type" init="H">
                                            <purpose>Specify type of data accessed with MULTI driver</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_sieve_buf_size.html" name="H5P.set_sieve_buf_size" init="H">
                                            <purpose>Set maximum size of data sieve buffer</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_small_data_block_size.html" name="H5P.set_small_data_block_size" init="H">
                                            <purpose>Set size of block reserved for small data</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="file-creation-properties.html">
                                        <title>File Creation Properties</title>
                                        <ref target="ref/h5p.get_istore_k.html" name="H5P.get_istore_k" init="H">
                                            <purpose>Return 1/2 rank of indexed storage B-tree</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_sizes.html" name="H5P.get_sizes" init="H">
                                            <purpose>Return size of offsets and lengths</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_sym_k.html" name="H5P.get_sym_k" init="H">
                                            <purpose>Return size of B-tree 1/2 rank and leaf node 1/2 size</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_userblock.html" name="H5P.get_userblock" init="H">
                                            <purpose>Return size of user block</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_version.html" name="H5P.get_version" init="H">
                                            <purpose>Return version information for file creation property list</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_istore_k.html" name="H5P.set_istore_k" init="H">
                                            <purpose>Set size of parameter for indexing chunked datasets</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_sizes.html" name="H5P.set_sizes" init="H">
                                            <purpose>Set byte size of offsets and lengths</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_sym_k.html" name="H5P.set_sym_k" init="H">
                                            <purpose>Set size of parameters used to control symbol table nodes</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_userblock.html" name="H5P.set_userblock" init="H">
                                            <purpose>Set user block size</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="object-copy-and-object-creation-properties.html">
                                        <title>Object Copy and Object Creation Properties</title>
                                        <ref target="ref/h5p.get_attr_creation_order.html" name="H5P.get_attr_creation_order" init="H">
                                            <purpose>Return tracking order and indexing settings</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_attr_phase_change.html" name="H5P.get_attr_phase_change" init="H">
                                            <purpose>Retrieve attribute phase change thresholds</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_copy_object.html" name="H5P.get_copy_object" init="H">
                                            <purpose>Return properties to be used when object is copied</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_attr_creation_order.html" name="H5P.set_attr_creation_order" init="H">
                                            <purpose>Set tracking of attribute creation order</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_attr_phase_change.html" name="H5P.set_attr_phase_change" init="H">
                                            <purpose>Set attribute storage phase change thresholds</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_copy_object.html" name="H5P.set_copy_object" init="H">
                                            <purpose>Set properties to be used when objects are copied</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="group-creation-properties.html">
                                        <title>Group Creation Properties</title>
                                        <ref target="ref/h5p.get_create_intermediate_group.html" name="H5P.get_create_intermediate_group" init="H">
                                            <purpose>Determine creation of intermediate groups</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_link_creation_order.html" name="H5P.get_link_creation_order" init="H">
                                            <purpose>Query if link creation order is tracked</purpose>
                                        </ref>
                                        <ref target="ref/h5p.get_link_phase_change.html" name="H5P.get_link_phase_change" init="H">
                                            <purpose>Query settings for conversion between groups</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_create_intermediate_group.html" name="H5P.set_create_intermediate_group" init="H">
                                            <purpose>Set creation of intermediate groups</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_link_creation_order.html" name="H5P.set_link_creation_order" init="H">
                                            <purpose>Set creation order tracking and indexing</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_link_phase_change.html" name="H5P.set_link_phase_change" init="H">
                                            <purpose>Set parameters for group conversion</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="string-properties.html">
                                        <title>HDF5 String Properties</title>
                                        <ref target="ref/h5p.get_char_encoding.html" name="H5P.get_char_encoding" init="H">
                                            <purpose>Return character encoding</purpose>
                                        </ref>
                                        <ref target="ref/h5p.set_char_encoding.html" name="H5P.set_char_encoding" init="H">
                                            <purpose>Set character encoding used to encode strings</purpose>
                                        </ref>
                                    </cat>
                                </cat>
                                <cat target="reference-h5r.html">
                                    <title>Reference (H5R)</title>
                                    <ref target="ref/h5r.create.html" name="H5R.create" init="H">
                                        <purpose>Create reference</purpose>
                                    </ref>
                                    <ref target="ref/h5r.dereference.html" name="H5R.dereference" init="H">
                                        <purpose>Open object specified by reference</purpose>
                                    </ref>
                                    <ref target="ref/h5r.get_name.html" name="H5R.get_name" init="H">
                                        <purpose>Name of referenced object</purpose>
                                    </ref>
                                    <ref target="ref/h5r.get_obj_type.html" name="H5R.get_obj_type" init="H">
                                        <purpose>Type of referenced object</purpose>
                                    </ref>
                                    <ref target="ref/h5r.get_region.html" name="H5R.get_region" init="H">
                                        <purpose>Copy of data space of specified region</purpose>
                                    </ref>
                                </cat>
                                <cat target="dataspace-h5s.html">
                                    <title>Dataspace (H5S)</title>
                                    <ref target="ref/h5s.copy.html" name="H5S.copy" init="H">
                                        <purpose>Create copy of data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.create.html" name="H5S.create" init="H">
                                        <purpose>Create new data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.close.html" name="H5S.close" init="H">
                                        <purpose>Close data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.create_simple.html" name="H5S.create_simple" init="H">
                                        <purpose>Create new simple data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.extent_copy.html" name="H5S.extent_copy" init="H">
                                        <purpose>Copy extent from source to destination data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.is_simple.html" name="H5S.is_simple" init="H">
                                        <purpose>Determine if data space is simple</purpose>
                                    </ref>
                                    <ref target="ref/h5s.offset_simple.html" name="H5S.offset_simple" init="H">
                                        <purpose>Set offset of simple data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.select_all.html" name="H5S.select_all" init="H">
                                        <purpose>Select entire extent of data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.select_elements.html" name="H5S.select_elements" init="H">
                                        <purpose>Specify coordinates to include in selection</purpose>
                                    </ref>
                                    <ref target="ref/h5s.select_hyperslab.html" name="H5S.select_hyperslab" init="H">
                                        <purpose>Select hyperslab region</purpose>
                                    </ref>
                                    <ref target="ref/h5s.select_none.html" name="H5S.select_none" init="H">
                                        <purpose>Reset selection region to include no elements</purpose>
                                    </ref>
                                    <ref target="ref/h5s.select_valid.html" name="H5S.select_valid" init="H">
                                        <purpose>Determine validity of selection</purpose>
                                    </ref>
                                    <ref target="ref/h5s.set_extent_none.html" name="H5S.set_extent_none" init="H">
                                        <purpose>Remove extent from data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.set_extent_simple.html" name="H5S.set_extent_simple" init="H">
                                        <purpose>Set size of data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_select_bounds.html" name="H5S.get_select_bounds" init="H">
                                        <purpose>Bounding box of data space selection</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_select_elem_npoints.html" name="H5S.get_select_elem_npoints" init="H">
                                        <purpose>Number of element points in selection</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_select_elem_pointlist.html" name="H5S.get_select_elem_pointlist" init="H">
                                        <purpose>Element points in data space selection</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_select_hyper_blocklist.html" name="H5S.get_select_hyper_blocklist" init="H">
                                        <purpose>List of hyperslab blocks</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_select_hyper_nblocks.html" name="H5S.get_select_hyper_nblocks" init="H">
                                        <purpose>Number of hyperslab blocks</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_select_npoints.html" name="H5S.get_select_npoints" init="H">
                                        <purpose>Number of elements in data space selection</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_select_type.html" name="H5S.get_select_type" init="H">
                                        <purpose>Type of data space selection</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_simple_extent_dims.html" name="H5S.get_simple_extent_dims" init="H">
                                        <purpose>Data space size and maximum size</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_simple_extent_ndims.html" name="H5S.get_simple_extent_ndims" init="H">
                                        <purpose>Data space rank</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_simple_extent_npoints.html" name="H5S.get_simple_extent_npoints" init="H">
                                        <purpose>Number of elements in data space</purpose>
                                    </ref>
                                    <ref target="ref/h5s.get_simple_extent_type.html" name="H5S.get_simple_extent_type" init="H">
                                        <purpose>Data space class</purpose>
                                    </ref>
                                </cat>
                                <cat target="datatype-h5t.html">
                                    <title>Datatype (H5T)</title>
                                    <cat target="-general-datatype-operation.html">
                                        <title>General Data Type Operation</title>
                                        <ref target="ref/h5t.close.html" name="H5T.close" init="H">
                                            <purpose>Close data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.commit.html" name="H5T.commit" init="H">
                                            <purpose>Commit transient data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.committed.html" name="H5T.committed" init="H">
                                            <purpose>Determine if data type is committed</purpose>
                                        </ref>
                                        <ref target="ref/h5t.copy.html" name="H5T.copy" init="H">
                                            <purpose>Copy data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.create.html" name="H5T.create" init="H">
                                            <purpose>Create new data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.detect_class.html" name="H5T.detect_class" init="H">
                                            <purpose>Determine of data type contains specific class</purpose>
                                        </ref>
                                        <ref target="ref/h5t.equal.html" name="H5T.equal" init="H">
                                            <purpose>Determine equality of data types</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_class.html" name="H5T.get_class" init="H">
                                            <purpose>Data type class identifier</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_create_plist.html" name="H5T.get_create_plist" init="H">
                                            <purpose>Copy of data type creation property list</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_native_type.html" name="H5T.get_native_type" init="H">
                                            <purpose>Native data type of dataset data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_size.html" name="H5T.get_size" init="H">
                                            <purpose>Size of data type in bytes</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_super.html" name="H5T.get_super" init="H">
                                            <purpose>Base data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.lock.html" name="H5T.lock" init="H">
                                            <purpose>Lock data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.open.html" name="H5T.open" init="H">
                                            <purpose>Open named data type</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="array-datatype.html">
                                        <title>Array Data Type</title>
                                        <ref target="ref/h5t.array_create.html" name="H5T.array_create" init="H">
                                            <purpose>Create array data type object</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_array_dims.html" name="H5T.get_array_dims" init="H">
                                            <purpose>Array dimension extents</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_array_ndims.html" name="H5T.get_array_ndims" init="H">
                                            <purpose>Rank of array data type</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="atomic-datatype-properties.html">
                                        <title>Atomic Data Type Properties</title>
                                        <ref target="ref/h5t.get_cset.html" name="H5T.get_cset" init="H">
                                            <purpose>Character set of string data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_ebias.html" name="H5T.get_ebias" init="H">
                                            <purpose>Exponent bias of floating-point type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_fields.html" name="H5T.get_fields" init="H">
                                            <purpose>Floating-point data type bit field information</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_inpad.html" name="H5T.get_inpad" init="H">
                                            <purpose>Internal padding type for floating-point data types</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_norm.html" name="H5T.get_norm" init="H">
                                            <purpose>Mantissa normalization type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_offset.html" name="H5T.get_offset" init="H">
                                            <purpose>Bit offset of first significant bit</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_order.html" name="H5T.get_order" init="H">
                                            <purpose>Byte order of atomic data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_pad.html" name="H5T.get_pad" init="H">
                                            <purpose>Padding type of least and most-significant bits</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_precision.html" name="H5T.get_precision" init="H">
                                            <purpose>Precision of atomic data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_sign.html" name="H5T.get_sign" init="H">
                                            <purpose>Sign type for integer data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_strpad.html" name="H5T.get_strpad" init="H">
                                            <purpose>Storage mechanism for string data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_cset.html" name="H5T.set_cset" init="H">
                                            <purpose>Set character dataset for string data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_ebias.html" name="H5T.set_ebias" init="H">
                                            <purpose>Set exponent bias of floating-point data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_fields.html" name="H5T.set_fields" init="H">
                                            <purpose>Set sizes and locations of floating-point bit fields</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_inpad.html" name="H5T.set_inpad" init="H">
                                            <purpose>Specify how unused internal bits are to be filled</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_norm.html" name="H5T.set_norm" init="H">
                                            <purpose>Set mantissa normalization of floating-point data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_offset.html" name="H5T.set_offset" init="H">
                                            <purpose>Set bit offset of first significant bit</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_order.html" name="H5T.set_order" init="H">
                                            <purpose>Set byte ordering of atomic data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_pad.html" name="H5T.set_pad" init="H">
                                            <purpose>Set padding type for least and most significant bits</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_precision.html" name="H5T.set_precision" init="H">
                                            <purpose>Set precision of atomic data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_sign.html" name="H5T.set_sign" init="H">
                                            <purpose>Set sign property for integer data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_size.html" name="H5T.set_size" init="H">
                                            <purpose>Set size of data type in bytes</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_strpad.html" name="H5T.set_strpad" init="H">
                                            <purpose>Set storage mechanism for string data type</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="compound-datatype.html">
                                        <title>Compound Data Type</title>
                                        <ref target="ref/h5t.get_member_class.html" name="H5T.get_member_class" init="H">
                                            <purpose>Data type class for compound data type member</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_member_index.html" name="H5T.get_member_index" init="H">
                                            <purpose>Index of compound or enumeration type member</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_member_name.html" name="H5T.get_member_name" init="H">
                                            <purpose>Name of compound or enumeration type member</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_member_offset.html" name="H5T.get_member_offset" init="H">
                                            <purpose>Offset of field of compound data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_member_type.html" name="H5T.get_member_type" init="H">
                                            <purpose>Data type of specified member</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_nmembers.html" name="H5T.get_nmembers" init="H">
                                            <purpose>Number of elements in enumeration type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.insert.html" name="H5T.insert" init="H">
                                            <purpose>Add member to compound data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.pack.html" name="H5T.pack" init="H">
                                            <purpose>Recursively remove padding from compound data type</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="enumeration-datatype.html">
                                        <title>Enumeration Data Type</title>
                                        <ref target="ref/h5t.enum_create.html" name="H5T.enum_create" init="H">
                                            <purpose>Create new enumeration data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.enum_insert.html" name="H5T.enum_insert" init="H">
                                            <purpose>Insert enumeration data type member</purpose>
                                        </ref>
                                        <ref target="ref/h5t.enum_nameof.html" name="H5T.enum_nameof" init="H">
                                            <purpose>Name of enumeration data type member</purpose>
                                        </ref>
                                        <ref target="ref/h5t.enum_valueof.html" name="H5T.enum_valueof" init="H">
                                            <purpose>Value of enumeration data type member</purpose>
                                        </ref>
                                        <ref target="ref/h5t.get_member_value.html" name="H5T.get_member_value" init="H">
                                            <purpose>Value of enumeration data type member</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="opaque-datatype-properties.html">
                                        <title>Opaque Data Type Properties</title>
                                        <ref target="ref/h5t.get_tag.html" name="H5T.get_tag" init="H">
                                            <purpose>Tag associated with opaque data type</purpose>
                                        </ref>
                                        <ref target="ref/h5t.set_tag.html" name="H5T.set_tag" init="H">
                                            <purpose>Tag opaque data type with description</purpose>
                                        </ref>
                                    </cat>
                                    <cat target="variable-length-datatype.html">
                                        <title>Variable-length Data Type</title>
                                        <ref target="ref/h5t.is_variable_str.html" name="H5T.is_variable_str" init="H">
                                            <purpose>Determine if data type is variable-length string</purpose>
                                        </ref>
                                        <ref target="ref/h5t.vlen_create.html" name="H5T.vlen_create" init="H">
                                            <purpose>Create new variable-length data type</purpose>
                                        </ref>
                                    </cat>
                                </cat>
                                <cat target="filters-and-compression-h5z.html">
                                    <title>Filters and Compression (H5Z)</title>
                                    <ref target="ref/h5z.filter_avail.html" name="H5Z.filter_avail" init="H">
                                        <purpose>Determine if filter is available</purpose>
                                    </ref>
                                    <ref target="ref/h5z.get_filter_info.html" name="H5Z.get_filter_info" init="H">
                                        <purpose>Information about filter</purpose>
                                    </ref>
                                </cat>
                            </cat>
                        </cat>
                        <cat target="hdf4.html">
                            <title>HDF4 Files</title>
                            <cat target="high-level-functions-1.html">
                                <title>High-Level Functions</title>
                                <ref target="ref/hdfinfo.html" name="hdfinfo" init="H">
                                    <purpose>Information about HDF4 or HDF-EOS file</purpose>
                                </ref>
                                <ref target="ref/hdfread.html" name="hdfread" init="H">
                                    <purpose>Read data from HDF4 or HDF-EOS file</purpose>
                                </ref>
                                <ref target="ref/imread.html" name="imread" init="I">
                                    <ext name="codegen" value="limited"/>
                                    <ext name="gpucodegen" value="limited"/>
                                    <purpose>Read image from graphics file</purpose>
                                </ref>
                                <ref target="ref/imwrite.html" name="imwrite" init="I">
                                    <ext name="gpuarrays" value="limited"/>
                                    <purpose>Write image to graphics file</purpose>
                                </ref>
                                <ref target="ref/hdftool.html" name="hdftool" init="H" unlisted="y">
                                    <purpose>(Removed) Browse and import data from HDF4 or HDF-EOS files</purpose>
                                </ref>
                            </cat>
                            <cat target="low-level-functions-1.html">
                                <title>Low-Level Functions</title>
                                <ref target="ref/matlab.io.hdf4.sd.html" name="matlab.io.hdf4.sd" init="M">
                                    <purpose>Interact directly with HDF4 multifile scientific data set (SD) interface</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.html" name="matlab.io.hdfeos.gd" init="M">
                                    <purpose>Low-level access to HDF-EOS grid data</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.html" name="matlab.io.hdfeos.sw" init="M">
                                    <purpose>Low-level access to HDF-EOS swath files</purpose>
                                </ref>
                                <ref target="ref/hdfan.html" name="hdfan" init="H">
                                    <purpose>Gateway to HDF multifile annotation (AN) interface</purpose>
                                </ref>
                                <ref target="ref/hdfhx.html" name="hdfhx" init="H">
                                    <purpose>Gateway to HDF external data (HX) interface</purpose>
                                </ref>
                                <ref target="ref/hdfh.html" name="hdfh" init="H">
                                    <purpose>Gateway to HDF H interface</purpose>
                                </ref>
                                <ref target="ref/hdfhd.html" name="hdfhd" init="H">
                                    <purpose>Gateway to HDF HD interface</purpose>
                                </ref>
                                <ref target="ref/hdfhe.html" name="hdfhe" init="H">
                                    <purpose>Gateway to HDF HE interface</purpose>
                                </ref>
                                <ref target="ref/hdfml.html" name="hdfml" init="H">
                                    <purpose>Utilities for working with MATLAB HDF gateway functions</purpose>
                                </ref>
                                <ref target="ref/hdfpt.html" name="hdfpt" init="H">
                                    <purpose>Interface to HDF-EOS Point object</purpose>
                                </ref>
                                <ref target="ref/hdfv.html" name="hdfv" init="H">
                                    <purpose>Gateway to HDF Vgroup (V) interface</purpose>
                                </ref>
                                <ref target="ref/hdfvf.html" name="hdfvf" init="H">
                                    <purpose>Gateway to VF functions in HDF Vdata interface</purpose>
                                </ref>
                                <ref target="ref/hdfvh.html" name="hdfvh" init="H">
                                    <purpose>Gateway to VH functions in HDF Vdata interface</purpose>
                                </ref>
                                <ref target="ref/hdfvs.html" name="hdfvs" init="H">
                                    <purpose>Gateway to VS functions in HDF Vdata interface</purpose>
                                </ref>
                                <ref target="ref/hdfdf24.html" name="hdfdf24" init="H">
                                    <purpose>Gateway to HDF 24-bit raster image (DF24) interface</purpose>
                                </ref>
                                <ref target="ref/hdfdfr8.html" name="hdfdfr8" init="H">
                                    <purpose>Gateway to HDF 8-bit raster image (DFR8) interface</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.attrinfo.html" name="matlab.io.hdf4.sd.attrInfo" init="M" unlisted="y">
                                    <purpose>Information about attribute</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.close.html" name="matlab.io.hdf4.sd.close" init="M" unlisted="y">
                                    <purpose>Terminate access to SD interface</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.create.html" name="matlab.io.hdf4.sd.create" init="M" unlisted="y">
                                    <purpose>Create new data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.diminfo.html" name="matlab.io.hdf4.sd.dimInfo" init="M" unlisted="y">
                                    <purpose>Information about dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.endaccess.html" name="matlab.io.hdf4.sd.endAccess" init="M" unlisted="y">
                                    <purpose>Terminate access to data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.fileinfo.html" name="matlab.io.hdf4.sd.fileInfo" init="M" unlisted="y">
                                    <purpose>Number of data sets and global attributes in file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.findattr.html" name="matlab.io.hdf4.sd.findAttr" init="M" unlisted="y">
                                    <purpose>Index of specified attribute</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getcal.html" name="matlab.io.hdf4.sd.getCal" init="M" unlisted="y">
                                    <purpose>Data set calibration information</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getchunkinfo.html" name="matlab.io.hdf4.sd.getChunkInfo" init="M" unlisted="y">
                                    <purpose>Chunk size for data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getcompinfo.html" name="matlab.io.hdf4.sd.getCompInfo" init="M" unlisted="y">
                                    <purpose>Information about data set compression</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getdatastrs.html" name="matlab.io.hdf4.sd.getDataStrs" init="M" unlisted="y">
                                    <purpose>Predefined attributes for data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getdimid.html" name="matlab.io.hdf4.sd.getDimID" init="M" unlisted="y">
                                    <purpose>Dimension identifier</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getdimscale.html" name="matlab.io.hdf4.sd.getDimScale" init="M" unlisted="y">
                                    <purpose>Scale data for dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getdimstrs.html" name="matlab.io.hdf4.sd.getDimStrs" init="M" unlisted="y">
                                    <purpose>Predefined attributes for dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getfilename.html" name="matlab.io.hdf4.sd.getFilename" init="M" unlisted="y">
                                    <purpose>Name of file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getfillvalue.html" name="matlab.io.hdf4.sd.getFillValue" init="M" unlisted="y">
                                    <purpose>Fill value for data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getinfo.html" name="matlab.io.hdf4.sd.getInfo" init="M" unlisted="y">
                                    <purpose>Information about data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.getrange.html" name="matlab.io.hdf4.sd.getRange" init="M" unlisted="y">
                                    <purpose>Maximum and minimum range values</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.idtoref.html" name="matlab.io.hdf4.sd.idToRef" init="M" unlisted="y">
                                    <purpose>Reference number corresponding to data set identifier</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.idtype.html" name="matlab.io.hdf4.sd.idType" init="M" unlisted="y">
                                    <purpose>Type of object</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.iscoordvar.html" name="matlab.io.hdf4.sd.isCoordVar" init="M" unlisted="y">
                                    <purpose>Determine if data set is a coordinate variable</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.isrecord.html" name="matlab.io.hdf4.sd.isRecord" init="M" unlisted="y">
                                    <purpose>Determine if data set is appendable</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.nametoindex.html" name="matlab.io.hdf4.sd.nameToIndex" init="M" unlisted="y">
                                    <purpose>Index value of named data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.nametoindices.html" name="matlab.io.hdf4.sd.nameToIndices" init="M" unlisted="y">
                                    <purpose>List of data sets with same name</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.readattr.html" name="matlab.io.hdf4.sd.readAttr" init="M" unlisted="y">
                                    <purpose>Read attribute value</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.readchunk.html" name="matlab.io.hdf4.sd.readChunk" init="M" unlisted="y">
                                    <purpose>Read chunk from data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.readdata.html" name="matlab.io.hdf4.sd.readData" init="M" unlisted="y">
                                    <purpose>Read subsample of data</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.reftoindex.html" name="matlab.io.hdf4.sd.refToIndex" init="M" unlisted="y">
                                    <purpose>Index of data set corresponding to reference number</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.select.html" name="matlab.io.hdf4.sd.select" init="M" unlisted="y">
                                    <purpose>Identifier of data set with specified index</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setattr.html" name="matlab.io.hdf4.sd.setAttr" init="M" unlisted="y">
                                    <purpose>Write attribute value</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setcal.html" name="matlab.io.hdf4.sd.setCal" init="M" unlisted="y">
                                    <purpose>Set data set calibration information</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setchunk.html" name="matlab.io.hdf4.sd.setChunk" init="M" unlisted="y">
                                    <purpose>Set chunk size and compression method of data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setcompress.html" name="matlab.io.hdf4.sd.setCompress" init="M" unlisted="y">
                                    <purpose>Set compression method of data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setdatastrs.html" name="matlab.io.hdf4.sd.setDataStrs" init="M" unlisted="y">
                                    <purpose>Set predefined attributes for data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setdimname.html" name="matlab.io.hdf4.sd.setDimName" init="M" unlisted="y">
                                    <purpose>Associate name with dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setdimscale.html" name="matlab.io.hdf4.sd.setDimScale" init="M" unlisted="y">
                                    <purpose>Set scale values for dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setdimstrs.html" name="matlab.io.hdf4.sd.setDimStrs" init="M" unlisted="y">
                                    <purpose>Set label, unit, and format attributes</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setexternalfile.html" name="matlab.io.hdf4.sd.setExternalFile" init="M" unlisted="y">
                                    <purpose>Store data in external file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setfillmode.html" name="matlab.io.hdf4.sd.setFillMode" init="M" unlisted="y">
                                    <purpose>Set current fill mode of file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setfillvalue.html" name="matlab.io.hdf4.sd.setFillValue" init="M" unlisted="y">
                                    <purpose>Set fill value for data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setnbitdataset.html" name="matlab.io.hdf4.sd.setNBitDataSet" init="M" unlisted="y">
                                    <purpose>Specify nonstandard bit length for data set values</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.setrange.html" name="matlab.io.hdf4.sd.setRange" init="M" unlisted="y">
                                    <purpose>Set maximum and minimum range value for data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.start.html" name="matlab.io.hdf4.sd.start" init="M" unlisted="y">
                                    <purpose>Open HDF file and initialize SD interface</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.writechunk.html" name="matlab.io.hdf4.sd.writeChunk" init="M" unlisted="y">
                                    <purpose>Write chunk to data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdf4.sd.writedata.html" name="matlab.io.hdf4.sd.writeData" init="M" unlisted="y">
                                    <purpose>Write to data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.attach.html" name="matlab.io.hdfeos.gd.attach" init="M" unlisted="y">
                                    <purpose>Attach to existing grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.close.html" name="matlab.io.hdfeos.gd.close" init="M" unlisted="y">
                                    <purpose>Close HDF-EOS grid file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.compinfo.html" name="matlab.io.hdfeos.gd.compInfo" init="M" unlisted="y">
                                    <purpose>Compression information for field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.create.html" name="matlab.io.hdfeos.gd.create" init="M" unlisted="y">
                                    <purpose>Create new grid structure</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.defboxregion.html" name="matlab.io.hdfeos.gd.defBoxRegion" init="M" unlisted="y">
                                    <purpose>Define region of interest by latitude and longitude</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.defcomp.html" name="matlab.io.hdfeos.gd.defComp" init="M" unlisted="y">
                                    <purpose>Set grid field compression</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.defdim.html" name="matlab.io.hdfeos.gd.defDim" init="M" unlisted="y">
                                    <purpose>Define new dimension within grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.deffield.html" name="matlab.io.hdfeos.gd.defField" init="M" unlisted="y">
                                    <purpose>Define new data field within grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.deforigin.html" name="matlab.io.hdfeos.gd.defOrigin" init="M" unlisted="y">
                                    <purpose>Define origin of pixels in grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.defpixreg.html" name="matlab.io.hdfeos.gd.defPixReg" init="M" unlisted="y">
                                    <purpose>Define pixel registration within grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.defproj.html" name="matlab.io.hdfeos.gd.defProj" init="M" unlisted="y">
                                    <purpose>Define grid projection</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.deftile.html" name="matlab.io.hdfeos.gd.defTile" init="M" unlisted="y">
                                    <purpose>Define tiling parameters</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.defvrtregion.html" name="matlab.io.hdfeos.gd.defVrtRegion" init="M" unlisted="y">
                                    <purpose>Define vertical subset region</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.detach.html" name="matlab.io.hdfeos.gd.detach" init="M" unlisted="y">
                                    <purpose>Detach from existing grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.diminfo.html" name="matlab.io.hdfeos.gd.dimInfo" init="M" unlisted="y">
                                    <purpose>Length of dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.extractregion.html" name="matlab.io.hdfeos.gd.extractRegion" init="M" unlisted="y">
                                    <purpose>Read region of interest from field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.fieldinfo.html" name="matlab.io.hdfeos.gd.fieldInfo" init="M" unlisted="y">
                                    <purpose>Information about data field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.getfillvalue.html" name="matlab.io.hdfeos.gd.getFillValue" init="M" unlisted="y">
                                    <purpose>Fill value for specified field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.getpixels.html" name="matlab.io.hdfeos.gd.getPixels" init="M" unlisted="y">
                                    <purpose>Pixel rows and columns for latitude/longitude pairs</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.getpixvalues.html" name="matlab.io.hdfeos.gd.getPixValues" init="M" unlisted="y">
                                    <purpose>Read data values for specified pixels</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.gridinfo.html" name="matlab.io.hdfeos.gd.gridInfo" init="M" unlisted="y">
                                    <purpose>Position and size of grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.ij2ll.html" name="matlab.io.hdfeos.gd.ij2ll" init="M" unlisted="y">
                                    <purpose>Convert row and column space to latitude and longitude</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.inqattrs.html" name="matlab.io.hdfeos.gd.inqAttrs" init="M" unlisted="y">
                                    <purpose>Names of grid attributes</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.inqdims.html" name="matlab.io.hdfeos.gd.inqDims" init="M" unlisted="y">
                                    <purpose>Information about dimensions defined in grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.inqfields.html" name="matlab.io.hdfeos.gd.inqFields" init="M" unlisted="y">
                                    <purpose>Information about data fields defined in grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.inqgrid.html" name="matlab.io.hdfeos.gd.inqGrid" init="M" unlisted="y">
                                    <purpose>Names of grids in file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.interpolate.html" name="matlab.io.hdfeos.gd.interpolate" init="M" unlisted="y">
                                    <purpose>Bilinear interpolation on a grid field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.ll2ij.html" name="matlab.io.hdfeos.gd.ll2ij" init="M" unlisted="y">
                                    <purpose>Convert latitude and longitude to row and column space</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.nentries.html" name="matlab.io.hdfeos.gd.nEntries" init="M" unlisted="y">
                                    <purpose>Number of specified objects</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.open.html" name="matlab.io.hdfeos.gd.open" init="M" unlisted="y">
                                    <purpose>Open grid file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.origininfo.html" name="matlab.io.hdfeos.gd.originInfo" init="M" unlisted="y">
                                    <purpose>Origin code</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.pixreginfo.html" name="matlab.io.hdfeos.gd.pixRegInfo" init="M" unlisted="y">
                                    <purpose>Pixel registration code</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.projinfo.html" name="matlab.io.hdfeos.gd.projInfo" init="M" unlisted="y">
                                    <purpose>GCTP projection information about grid</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.readattr.html" name="matlab.io.hdfeos.gd.readAttr" init="M" unlisted="y">
                                    <purpose>Read grid attribute</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.readblksomoffset.html" name="matlab.io.hdfeos.gd.readBlkSomOffset" init="M" unlisted="y">
                                    <purpose>Read Block SOM offset</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.readfield.html" name="matlab.io.hdfeos.gd.readField" init="M" unlisted="y">
                                    <purpose>Read data from grid field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.readtile.html" name="matlab.io.hdfeos.gd.readTile" init="M" unlisted="y">
                                    <purpose>Read single tile of data from field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.regioninfo.html" name="matlab.io.hdfeos.gd.regionInfo" init="M" unlisted="y">
                                    <purpose>Information about subsetted region</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.setfillvalue.html" name="matlab.io.hdfeos.gd.setFillValue" init="M" unlisted="y">
                                    <purpose>Set fill value for specified field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.settilecomp.html" name="matlab.io.hdfeos.gd.setTileComp" init="M" unlisted="y">
                                    <purpose>Set tiling and compression for field with fill value</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.spherecodetoname.html" name="matlab.io.hdfeos.gd.sphereCodeToName" init="M" unlisted="y">
                                    <purpose>Name corresponding to GCTP sphere code</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.spherenametocode.html" name="matlab.io.hdfeos.gd.sphereNameToCode" init="M" unlisted="y">
                                    <purpose>Numeric GCTP code corresponding to sphere name</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.tileinfo.html" name="matlab.io.hdfeos.gd.tileInfo" init="M" unlisted="y">
                                    <purpose>Tile size of grid field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.writeattr.html" name="matlab.io.hdfeos.gd.writeAttr" init="M" unlisted="y">
                                    <purpose>Write grid attribute</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.writeblksomoffset.html" name="matlab.io.hdfeos.gd.writeBlkSomOffset" init="M" unlisted="y">
                                    <purpose>Write Block SOM offset</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.writefield.html" name="matlab.io.hdfeos.gd.writeField" init="M" unlisted="y">
                                    <purpose>Write data to grid field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.gd.writetile.html" name="matlab.io.hdfeos.gd.writeTile" init="M" unlisted="y">
                                    <purpose>Write tile to field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.attach.html" name="matlab.io.hdfeos.sw.attach" init="M" unlisted="y">
                                    <purpose>Attach to swath data set</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.close.html" name="matlab.io.hdfeos.sw.close" init="M" unlisted="y">
                                    <purpose>Close swath file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.compinfo.html" name="matlab.io.hdfeos.sw.compInfo" init="M" unlisted="y">
                                    <purpose>Compression information for field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.create.html" name="matlab.io.hdfeos.sw.create" init="M" unlisted="y">
                                    <purpose>Create new swath structure</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.defboxregion.html" name="matlab.io.hdfeos.sw.defBoxRegion" init="M" unlisted="y">
                                    <purpose>Define latitude-longitude region for swath</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.defcomp.html" name="matlab.io.hdfeos.sw.defComp" init="M" unlisted="y">
                                    <purpose>Set grid field compression</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.defdatafield.html" name="matlab.io.hdfeos.sw.defDataField" init="M" unlisted="y">
                                    <purpose>Define new data field within swath</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.defdim.html" name="matlab.io.hdfeos.sw.defDim" init="M" unlisted="y">
                                    <purpose>Define new dimension within swath</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.defdimmap.html" name="matlab.io.hdfeos.sw.defDimMap" init="M" unlisted="y">
                                    <purpose>Define mapping between geolocation and data dimensions</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.defgeofield.html" name="matlab.io.hdfeos.sw.defGeoField" init="M" unlisted="y">
                                    <purpose>Define new data field within swath</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.deftimeperiod.html" name="matlab.io.hdfeos.sw.defTimePeriod" init="M" unlisted="y">
                                    <purpose>Define time period of interest</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.defvrtregion.html" name="matlab.io.hdfeos.sw.defVrtRegion" init="M" unlisted="y">
                                    <purpose>Subset on monotonic field or dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.detach.html" name="matlab.io.hdfeos.sw.detach" init="M" unlisted="y">
                                    <purpose>Detach from swath</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.diminfo.html" name="matlab.io.hdfeos.sw.dimInfo" init="M" unlisted="y">
                                    <purpose>Size of dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.extractperiod.html" name="matlab.io.hdfeos.sw.extractPeriod" init="M" unlisted="y">
                                    <purpose>Read data from subsetted time period</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.extractregion.html" name="matlab.io.hdfeos.sw.extractRegion" init="M" unlisted="y">
                                    <purpose>Read subsetted region</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.fieldinfo.html" name="matlab.io.hdfeos.sw.fieldInfo" init="M" unlisted="y">
                                    <purpose>Information about swath field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.geomapinfo.html" name="matlab.io.hdfeos.sw.geoMapInfo" init="M" unlisted="y">
                                    <purpose>Type of dimension mapping for named dimension</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.getfillvalue.html" name="matlab.io.hdfeos.sw.getFillValue" init="M" unlisted="y">
                                    <purpose>Fill value for specified field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.idxmapinfo.html" name="matlab.io.hdfeos.sw.idxMapInfo" init="M" unlisted="y">
                                    <purpose>Indexed array of geolocation mapping</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.inqattrs.html" name="matlab.io.hdfeos.sw.inqAttrs" init="M" unlisted="y">
                                    <purpose>Names of swath attributes</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.inqdatafields.html" name="matlab.io.hdfeos.sw.inqDataFields" init="M" unlisted="y">
                                    <purpose>Information about geolocation fields</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.inqdims.html" name="matlab.io.hdfeos.sw.inqDims" init="M" unlisted="y">
                                    <purpose>Information about dimensions defined in swath</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.inqgeofields.html" name="matlab.io.hdfeos.sw.inqGeoFields" init="M" unlisted="y">
                                    <purpose>Information about geolocation fields</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.inqidxmaps.html" name="matlab.io.hdfeos.sw.inqIdxMaps" init="M" unlisted="y">
                                    <purpose>Information about swath indexed geolocation mapping</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.inqmaps.html" name="matlab.io.hdfeos.sw.inqMaps" init="M" unlisted="y">
                                    <purpose>Information about swath geolocation relations</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.inqswath.html" name="matlab.io.hdfeos.sw.inqSwath" init="M" unlisted="y">
                                    <purpose>Names of swaths in file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.mapinfo.html" name="matlab.io.hdfeos.sw.mapInfo" init="M" unlisted="y">
                                    <purpose>Offset and increment of specific geolocation mapping</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.nentries.html" name="matlab.io.hdfeos.sw.nEntries" init="M" unlisted="y">
                                    <purpose>Number of entries for specific type</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.open.html" name="matlab.io.hdfeos.sw.open" init="M" unlisted="y">
                                    <purpose>Open swath file</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.periodinfo.html" name="matlab.io.hdfeos.sw.periodInfo" init="M" unlisted="y">
                                    <purpose>Information about subsetted period</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.readattr.html" name="matlab.io.hdfeos.sw.readAttr" init="M" unlisted="y">
                                    <purpose>Read swath attribute</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.readfield.html" name="matlab.io.hdfeos.sw.readField" init="M" unlisted="y">
                                    <purpose>Read data from swath field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.regioninfo.html" name="matlab.io.hdfeos.sw.regionInfo" init="M" unlisted="y">
                                    <purpose>Information about subsetted region</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.setfillvalue.html" name="matlab.io.hdfeos.sw.setFillValue" init="M" unlisted="y">
                                    <purpose>Set fill value for the specified field</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.writeattr.html" name="matlab.io.hdfeos.sw.writeAttr" init="M" unlisted="y">
                                    <purpose>Write swath attribute</purpose>
                                </ref>
                                <ref target="ref/matlab.io.hdfeos.sw.writefield.html" name="matlab.io.hdfeos.sw.writeField" init="M" unlisted="y">
                                    <purpose>Write data to swath field</purpose>
                                </ref>
                            </cat>
                        </cat>
                        <cat target="flexible-image-transport-system.html">
                            <title>FITS Files</title>
                            <cat target="high-level-functions-for-fits-files.html">
                                <title>High-Level Functions</title>
                                <ref target="ref/fitsdisp.html" name="fitsdisp" init="F">
                                    <purpose>Display FITS metadata</purpose>
                                </ref>
                                <ref target="ref/fitsinfo.html" name="fitsinfo" init="F">
                                    <purpose>Information about FITS file</purpose>
                                </ref>
                                <ref target="ref/fitsread.html" name="fitsread" init="F">
                                    <purpose>Read data from FITS file</purpose>
                                </ref>
                                <ref target="ref/fitswrite.html" name="fitswrite" init="F">
                                    <purpose>Write image to FITS file</purpose>
                                </ref>
                            </cat>
                            <cat target="low-level-functions-for-fits-files.html">
                                <title>Low-Level Functions</title>
                                <cat target="file-access.html">
                                    <title>File Access</title>
                                    <ref target="ref/matlab.io.fits.createfile.html" name="createFile" init="C">
                                        <purpose>Create FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.openfile.html" name="openFile" init="O">
                                        <purpose>Open FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.opendiskfile.html" name="openDiskFile" init="O">
                                        <purpose>Open FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.closefile.html" name="closeFile" init="C">
                                        <purpose>Close FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.deletefile.html" name="deleteFile" init="D">
                                        <purpose>Delete FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.filename.html" name="fileName" init="F">
                                        <purpose>Name of FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.filemode.html" name="fileMode" init="F">
                                        <purpose>I/O mode of FITS file</purpose>
                                    </ref>
                                </cat>
                                <cat target="image-manipulation.html">
                                    <title>Image Manipulation</title>
                                    <ref target="ref/matlab.io.fits.createimg.html" name="createImg" init="C">
                                        <purpose>Create FITS image</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getimgsize.html" name="getImgSize" init="G">
                                        <purpose>Size of image</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getimgtype.html" name="getImgType" init="G">
                                        <purpose>Data type of image</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.insertimg.html" name="insertImg" init="I">
                                        <purpose>Insert FITS image after current image</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readimg.html" name="readImg" init="R">
                                        <purpose>Read image data</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.setbscale.html" name="setBscale" init="S">
                                        <purpose>Reset image scaling</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writeimg.html" name="writeImg" init="W">
                                        <purpose>Write to FITS image</purpose>
                                    </ref>
                                </cat>
                                <cat target="keywords.html">
                                    <title>Keywords</title>
                                    <ref target="ref/matlab.io.fits.readcard.html" name="readCard" init="R">
                                        <purpose>Header record of keyword</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readkey.html" name="readKey" init="R">
                                        <purpose>Keyword</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readkeycmplx.html" name="readKeyCmplx" init="R">
                                        <purpose>Keyword as complex scalar value</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readkeydbl.html" name="readKeyDbl" init="R">
                                        <purpose>Keyword as double precision value</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readkeylonglong.html" name="readKeyLongLong" init="R">
                                        <purpose>Keyword as int64</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readkeylongstr.html" name="readKeyLongStr" init="R">
                                        <purpose>Long string value</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readkeyunit.html" name="readKeyUnit" init="R">
                                        <purpose>Physical units string from keyword</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readrecord.html" name="readRecord" init="R">
                                        <purpose>Header record specified by number</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writecomment.html" name="writeComment" init="W">
                                        <purpose>Write or append COMMENT keyword to CHU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writedate.html" name="writeDate" init="W">
                                        <purpose>Write DATE keyword to CHU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writekey.html" name="writeKey" init="W">
                                        <purpose>Update or add new keyword into current HDU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writekeyunit.html" name="writeKeyUnit" init="W">
                                        <purpose>Write physical units string</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writehistory.html" name="writeHistory" init="W">
                                        <purpose>Write or append HISTORY keyword to CHU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.deletekey.html" name="deleteKey" init="D">
                                        <purpose>Delete key by name</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.deleterecord.html" name="deleteRecord" init="D">
                                        <purpose>Delete key by record number</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.gethdrspace.html" name="getHdrSpace" init="G">
                                        <purpose>Number of keywords in header</purpose>
                                    </ref>
                                </cat>
                                <cat target="header-data-unit-hdu-access.html">
                                    <title>Header Data Unit (HDU) Access</title>
                                    <ref target="ref/matlab.io.fits.copyhdu.html" name="copyHDU" init="C">
                                        <purpose>Copy current HDU from one file to another</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.gethdunum.html" name="getHDUnum" init="G">
                                        <purpose>Number of current HDU in FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.gethdutype.html" name="getHDUtype" init="G">
                                        <purpose>Type of current HDU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getnumhdus.html" name="getNumHDUs" init="G">
                                        <purpose>Total number of HDUs in FITS file</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.movabshdu.html" name="movAbsHDU" init="M">
                                        <purpose>Move to absolute HDU number</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.movnamhdu.html" name="movNamHDU" init="M">
                                        <purpose>Move to first HDU having specific type and keyword values</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.movrelhdu.html" name="movRelHDU" init="M">
                                        <purpose>Move relative number of HDUs from current HDU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writechecksum.html" name="writeChecksum" init="W">
                                        <purpose>Compute and write checksum for current HDU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.deletehdu.html" name="deleteHDU" init="D">
                                        <purpose>Delete current HDU in FITS file</purpose>
                                    </ref>
                                </cat>
                                <cat target="image-compression.html">
                                    <title>Image Compression</title>
                                    <ref target="ref/matlab.io.fits.imgcompress.html" name="imgCompress" init="I">
                                        <purpose>Compress HDU from one file into another</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.iscompressedimg.html" name="isCompressedImg" init="I">
                                        <purpose>Determine if current image is compressed</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.setcompressiontype.html" name="setCompressionType" init="S">
                                        <purpose>Set image compression type</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.sethcompscale.html" name="setHCompScale" init="S">
                                        <purpose>Set scale parameter for HCOMPRESS algorithm</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.sethcompsmooth.html" name="setHCompSmooth" init="S">
                                        <purpose>Set smoothing for images compressed with HCOMPRESS</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.settiledim.html" name="setTileDim" init="S">
                                        <purpose>Set tile dimensions</purpose>
                                    </ref>
                                </cat>
                                <cat target="ascii-and-binary-tables.html">
                                    <title>ASCII and Binary Tables</title>
                                    <ref target="ref/matlab.io.fits.createtbl.html" name="createTbl" init="C">
                                        <purpose>Create new ASCII or binary table extension</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.insertcol.html" name="insertCol" init="I">
                                        <purpose>Insert column into table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.insertrows.html" name="insertRows" init="I">
                                        <purpose>Insert rows into table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.insertatbl.html" name="insertATbl" init="I">
                                        <purpose>Insert ASCII table after current HDU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.insertbtbl.html" name="insertBTbl" init="I">
                                        <purpose>Insert binary table after current HDU</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.deletecol.html" name="deleteCol" init="D">
                                        <purpose>Delete column from table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.deleterows.html" name="deleteRows" init="D">
                                        <purpose>Delete rows from table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getacolparms.html" name="getAColParms" init="G">
                                        <purpose>ASCII table information</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getbcolparms.html" name="getBColParms" init="G">
                                        <purpose>Binary table information</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getcolname.html" name="getColName" init="G">
                                        <purpose>Table column name</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getcoltype.html" name="getColType" init="G">
                                        <purpose>Scaled column data type, repeat value, width</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.geteqcoltype.html" name="getEqColType" init="G">
                                        <purpose>Column data type, repeat value, width</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getnumcols.html" name="getNumCols" init="G">
                                        <purpose>Number of columns in table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getnumrows.html" name="getNumRows" init="G">
                                        <purpose>Number of rows in table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readatblhdr.html" name="readATblHdr" init="R">
                                        <purpose>Read header information from current ASCII table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readbtblhdr.html" name="readBTblHdr" init="R">
                                        <purpose>Read header information from current binary table</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.readcol.html" name="readCol" init="R">
                                        <purpose>Read rows of ASCII or binary table column</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.settscale.html" name="setTscale" init="S">
                                        <purpose>Reset image scaling</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.writecol.html" name="writeCol" init="W">
                                        <purpose>Write elements into ASCII or binary table column</purpose>
                                    </ref>
                                </cat>
                                <cat target="utilities-1.html">
                                    <title>Utilities</title>
                                    <ref target="ref/matlab.io.fits.getconstantvalue.html" name="getConstantValue" init="G">
                                        <purpose>Numeric value of named constant</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getversion.html" name="getVersion" init="G">
                                        <purpose>Revision number of the CFITSIO library</purpose>
                                    </ref>
                                    <ref target="ref/matlab.io.fits.getopenfiles.html" name="getOpenFiles" init="G">
                                        <purpose>List of open FITS files</purpose>
                                    </ref>
                                </cat>
                            </cat>
                        </cat>
                        <cat target="band-interleaved-data.html">
                            <title>Band-Interleaved Files</title>
                            <ref target="ref/multibandread.html" name="multibandread" init="M">
                                <purpose>Read band-interleaved data from binary file</purpose>
                            </ref>
                            <ref target="ref/multibandwrite.html" name="multibandwrite" init="M">
                                <purpose>Write band-interleaved data to file</purpose>
                            </ref>
                        </cat>
                        <cat target="common-data-format.html">
                            <title>Common Data Format</title>
                            <ref target="ref/cdfinfo.html" name="cdfinfo" init="C">
                                <purpose>Information about Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdfread.html" name="cdfread" init="C">
                                <purpose>Read data from Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdfepoch.html" name="cdfepoch" init="C">
                                <purpose>Convert date text or serial date number to CDF formatted dates</purpose>
                            </ref>
                            <ref target="ref/todatenum.html" name="todatenum" init="T">
                                <purpose>Convert CDF epoch object to MATLAB serial date number</purpose>
                            </ref>
                            <ref target="ref/cdflib.html" name="cdflib" init="C">
                                <purpose>Interact directly with CDF library</purpose>
                            </ref>
                            <ref target="ref/cdfwrite.html" name="cdfwrite" init="C" unlisted="y">
                                <purpose>Write data to Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.getconstantnames.html" name="cdflib.getConstantNames" init="C" unlisted="y">
                                <purpose>Names of Common Data Format (CDF) library constants</purpose>
                            </ref>
                            <ref target="ref/cdflib.getconstantvalue.html" name="cdflib.getConstantValue" init="C" unlisted="y">
                                <purpose>Numeric value corresponding to Common Data Format (CDF) library constant</purpose>
                            </ref>
                            <ref target="ref/cdflib.getfilebackward.html" name="cdflib.getFileBackward" init="C" unlisted="y">
                                <purpose>Return current backward compatibility mode setting</purpose>
                            </ref>
                            <ref target="ref/cdflib.getlibrarycopyright.html" name="cdflib.getLibraryCopyright" init="C" unlisted="y">
                                <purpose>Copyright notice of Common Data Format (CDF) library</purpose>
                            </ref>
                            <ref target="ref/cdflib.getlibraryversion.html" name="cdflib.getLibraryVersion" init="C" unlisted="y">
                                <purpose>Library version and release information</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvalidate.html" name="cdflib.getValidate" init="C" unlisted="y">
                                <purpose>Library validation mode</purpose>
                            </ref>
                            <ref target="ref/cdflib.setfilebackward.html" name="cdflib.setFileBackward" init="C" unlisted="y">
                                <purpose>Set backward compatibility mode</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvalidate.html" name="cdflib.setValidate" init="C" unlisted="y">
                                <purpose>Specify library validation mode</purpose>
                            </ref>
                            <ref target="ref/cdflib.close.html" name="cdflib.close" init="C" unlisted="y">
                                <purpose>Close Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.create.html" name="cdflib.create" init="C" unlisted="y">
                                <purpose>Create Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.delete.html" name="cdflib.delete" init="C" unlisted="y">
                                <purpose>Delete existing Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.getcachesize.html" name="cdflib.getCacheSize" init="C" unlisted="y">
                                <purpose>Number of cache buffers used</purpose>
                            </ref>
                            <ref target="ref/cdflib.getchecksum.html" name="cdflib.getChecksum" init="C" unlisted="y">
                                <purpose>Checksum mode</purpose>
                            </ref>
                            <ref target="ref/cdflib.getcompression.html" name="cdflib.getCompression" init="C" unlisted="y">
                                <purpose>Compression settings</purpose>
                            </ref>
                            <ref target="ref/cdflib.getcompressioncachesize.html" name="cdflib.getCompressionCacheSize" init="C" unlisted="y">
                                <purpose>Number of compression cache buffers</purpose>
                            </ref>
                            <ref target="ref/cdflib.getcopyright.html" name="cdflib.getCopyright" init="C" unlisted="y">
                                <purpose>Copyright notice in Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.getformat.html" name="cdflib.getFormat" init="C" unlisted="y">
                                <purpose>Format of Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.getmajority.html" name="cdflib.getMajority" init="C" unlisted="y">
                                <purpose>Majority of variables</purpose>
                            </ref>
                            <ref target="ref/cdflib.getname.html" name="cdflib.getName" init="C" unlisted="y">
                                <purpose>Name of Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.getreadonlymode.html" name="cdflib.getReadOnlyMode" init="C" unlisted="y">
                                <purpose>Read-only mode</purpose>
                            </ref>
                            <ref target="ref/cdflib.getstagecachesize.html" name="cdflib.getStageCacheSize" init="C" unlisted="y">
                                <purpose>Number of cache buffers for staging</purpose>
                            </ref>
                            <ref target="ref/cdflib.getversion.html" name="cdflib.getVersion" init="C" unlisted="y">
                                <purpose>Common Data Format (CDF) library version and release information</purpose>
                            </ref>
                            <ref target="ref/cdflib.inquire.html" name="cdflib.inquire" init="C" unlisted="y">
                                <purpose>Basic characteristics of Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.open.html" name="cdflib.open" init="C" unlisted="y">
                                <purpose>Open existing Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.setcachesize.html" name="cdflib.setCacheSize" init="C" unlisted="y">
                                <purpose>Specify number of dotCDF cache buffers</purpose>
                            </ref>
                            <ref target="ref/cdflib.setchecksum.html" name="cdflib.setChecksum" init="C" unlisted="y">
                                <purpose>Specify checksum mode</purpose>
                            </ref>
                            <ref target="ref/cdflib.setcompression.html" name="cdflib.setCompression" init="C" unlisted="y">
                                <purpose>Specify compression settings</purpose>
                            </ref>
                            <ref target="ref/cdflib.setcompressioncachesize.html" name="cdflib.setCompressionCacheSize" init="C" unlisted="y">
                                <purpose>Specify number of compression cache buffers</purpose>
                            </ref>
                            <ref target="ref/cdflib.setformat.html" name="cdflib.setFormat" init="C" unlisted="y">
                                <purpose>Specify format of Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.setmajority.html" name="cdflib.setMajority" init="C" unlisted="y">
                                <purpose>Specify majority of variables</purpose>
                            </ref>
                            <ref target="ref/cdflib.setreadonlymode.html" name="cdflib.setReadOnlyMode" init="C" unlisted="y">
                                <purpose>Specify read-only mode</purpose>
                            </ref>
                            <ref target="ref/cdflib.setstagecachesize.html" name="cdflib.setStageCacheSize" init="C" unlisted="y">
                                <purpose>Specify number of staging cache buffers for Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.closevar.html" name="cdflib.closeVar" init="C" unlisted="y">
                                <purpose>Close specified variable from multifile format Common Data Format (CDF) file</purpose>
                            </ref>
                            <ref target="ref/cdflib.createvar.html" name="cdflib.createVar" init="C" unlisted="y">
                                <purpose>Create new variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.deletevar.html" name="cdflib.deleteVar" init="C" unlisted="y">
                                <purpose>Delete variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.deletevarrecords.html" name="cdflib.deleteVarRecords" init="C" unlisted="y">
                                <purpose>Delete range of records from variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarallocrecords.html" name="cdflib.getVarAllocRecords" init="C" unlisted="y">
                                <purpose>Number of records allocated for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarblockingfactor.html" name="cdflib.getVarBlockingFactor" init="C" unlisted="y">
                                <purpose>Blocking factor for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarcachesize.html" name="cdflib.getVarCacheSize" init="C" unlisted="y">
                                <purpose>Number of multifile cache buffers</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarcompression.html" name="cdflib.getVarCompression" init="C" unlisted="y">
                                <purpose>Information about compression used by variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvardata.html" name="cdflib.getVarData" init="C" unlisted="y">
                                <purpose>Single value from record in variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarmaxallocrecnum.html" name="cdflib.getVarMaxAllocRecNum" init="C" unlisted="y">
                                <purpose>Maximum allocated record number for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarmaxwrittenrecnum.html" name="cdflib.getVarMaxWrittenRecNum" init="C" unlisted="y">
                                <purpose>Maximum written record number for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarname.html" name="cdflib.getVarName" init="C" unlisted="y">
                                <purpose>Variable name, given variable number</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarnum.html" name="cdflib.getVarNum" init="C" unlisted="y">
                                <purpose>Variable number, given variable name</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarnumrecswritten.html" name="cdflib.getVarNumRecsWritten" init="C" unlisted="y">
                                <purpose>Number of records written to variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarpadvalue.html" name="cdflib.getVarPadValue" init="C" unlisted="y">
                                <purpose>Pad value for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarrecorddata.html" name="cdflib.getVarRecordData" init="C" unlisted="y">
                                <purpose>Entire record for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarreservepercent.html" name="cdflib.getVarReservePercent" init="C" unlisted="y">
                                <purpose>Compression reserve percentage for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarsmaxwrittenrecnum.html" name="cdflib.getVarsMaxWrittenRecNum" init="C" unlisted="y">
                                <purpose>Maximum written record number for CDF file</purpose>
                            </ref>
                            <ref target="ref/cdflib.getvarsparserecords.html" name="cdflib.getVarSparseRecords" init="C" unlisted="y">
                                <purpose>Information about how variable handles sparse records</purpose>
                            </ref>
                            <ref target="ref/cdflib.hypergetvardata.html" name="cdflib.hyperGetVarData" init="C" unlisted="y">
                                <purpose>Read hyperslab of data from variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.hyperputvardata.html" name="cdflib.hyperPutVarData" init="C" unlisted="y">
                                <purpose>Write hyperslab of data to variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.inquirevar.html" name="cdflib.inquireVar" init="C" unlisted="y">
                                <purpose>Information about variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.putvardata.html" name="cdflib.putVarData" init="C" unlisted="y">
                                <purpose>Write single value to variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.putvarrecorddata.html" name="cdflib.putVarRecordData" init="C" unlisted="y">
                                <purpose>Write entire record to variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.renamevar.html" name="cdflib.renameVar" init="C" unlisted="y">
                                <purpose>Rename existing variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarallocblockrecords.html" name="cdflib.setVarAllocBlockRecords" init="C" unlisted="y">
                                <purpose>Specify range of records to be allocated for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarblockingfactor.html" name="cdflib.setVarBlockingFactor" init="C" unlisted="y">
                                <purpose>Specify blocking factor for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarcachesize.html" name="cdflib.setVarCacheSize" init="C" unlisted="y">
                                <purpose>Specify number of multi-file cache buffers for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarcompression.html" name="cdflib.setVarCompression" init="C" unlisted="y">
                                <purpose>Specify compression settings used with variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarinitialrecs.html" name="cdflib.setVarInitialRecs" init="C" unlisted="y">
                                <purpose>Specify initial number of records written to variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarpadvalue.html" name="cdflib.setVarPadValue" init="C" unlisted="y">
                                <purpose>Specify pad value used with variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarreservepercent.html" name="cdflib.SetVarReservePercent" init="C" unlisted="y">
                                <purpose>Specify reserve percentage for variable</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarscachesize.html" name="cdflib.setVarsCacheSize" init="C" unlisted="y">
                                <purpose>Specify number of cache buffers used for all variables</purpose>
                            </ref>
                            <ref target="ref/cdflib.setvarsparserecords.html" name="cdflib.setVarSparseRecords" init="C" unlisted="y">
                                <purpose>Specify how variable handles sparse records</purpose>
                            </ref>
                            <ref target="ref/cdflib.createattr.html" name="cdflib.createAttr" init="C" unlisted="y">
                                <purpose>Create attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.deleteattr.html" name="cdflib.deleteAttr" init="C" unlisted="y">
                                <purpose>Delete attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.deleteattrentry.html" name="cdflib.deleteAttrEntry" init="C" unlisted="y">
                                <purpose>Delete attribute entry</purpose>
                            </ref>
                            <ref target="ref/cdflib.deleteattrgentry.html" name="cdflib.deleteAttrgEntry" init="C" unlisted="y">
                                <purpose>Delete entry in global attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.getattrentry.html" name="cdflib.getAttrEntry" init="C" unlisted="y">
                                <purpose>Value of entry in attribute with variable scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.getattrgentry.html" name="cdflib.getAttrgEntry" init="C" unlisted="y">
                                <purpose>Value of entry in global attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.getattrmaxentry.html" name="cdflib.getAttrMaxEntry" init="C" unlisted="y">
                                <purpose>Number of last entry for variable attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.getattrmaxgentry.html" name="cdflib.getAttrMaxgEntry" init="C" unlisted="y">
                                <purpose>Number of last entry for global attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.getattrname.html" name="cdflib.getAttrName" init="C" unlisted="y">
                                <purpose>Name of attribute, given attribute number</purpose>
                            </ref>
                            <ref target="ref/cdflib.getattrnum.html" name="cdflib.getAttrNum" init="C" unlisted="y">
                                <purpose>Attribute number, given attribute name</purpose>
                            </ref>
                            <ref target="ref/cdflib.getattrscope.html" name="cdflib.getAttrScope" init="C" unlisted="y">
                                <purpose>Scope of attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.getnumattrentries.html" name="cdflib.getNumAttrEntries" init="C" unlisted="y">
                                <purpose>Number of entries for attribute with variable scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.getnumattrgentries.html" name="cdflib.getNumAttrgEntries" init="C" unlisted="y">
                                <purpose>Number of entries for attribute with global scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.getnumattributes.html" name="cdflib.getNumAttributes" init="C" unlisted="y">
                                <purpose>Number of attributes with variable scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.getnumgattributes.html" name="cdflib.getNumgAttributes" init="C" unlisted="y">
                                <purpose>Number of attributes with global scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.inquireattr.html" name="cdflib.inquireAttr" init="C" unlisted="y">
                                <purpose>Information about attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.inquireattrentry.html" name="cdflib.inquireAttrEntry" init="C" unlisted="y">
                                <purpose>Information about entry in attribute with variable scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.inquireattrgentry.html" name="cdflib.inquireAttrgEntry" init="C" unlisted="y">
                                <purpose>Information about entry in attribute with global scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.putattrentry.html" name="cdflib.putAttrEntry" init="C" unlisted="y">
                                <purpose>Write value to entry in attribute with variable scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.putattrgentry.html" name="cdflib.putAttrgEntry" init="C" unlisted="y">
                                <purpose>Write value to entry in attribute with global scope</purpose>
                            </ref>
                            <ref target="ref/cdflib.renameattr.html" name="cdflib.renameAttr" init="C" unlisted="y">
                                <purpose>Rename existing attribute</purpose>
                            </ref>
                            <ref target="ref/cdflib.computeepoch.html" name="cdflib.computeEpoch" init="C" unlisted="y">
                                <purpose>Convert time value to CDF_EPOCH value</purpose>
                            </ref>
                            <ref target="ref/cdflib.computeepoch16.html" name="cdflib.computeEpoch16" init="C" unlisted="y">
                                <purpose>Convert time value to CDF_EPOCH16 value</purpose>
                            </ref>
                            <ref target="ref/cdflib.epoch16breakdown.html" name="cdflib.epoch16Breakdown" init="C" unlisted="y">
                                <purpose>Convert CDF_EPOCH16 value to time value</purpose>
                            </ref>
                            <ref target="ref/cdflib.epochbreakdown.html" name="cdflib.epochBreakdown" init="C" unlisted="y">
                                <purpose>Convert CDF_EPOCH value into time value</purpose>
                            </ref>
                        </cat>
                    </cat>
                    <cat target="audio-and-video.html">
                        <title>Audio and Video</title>
                        <ref target="ref/videoreader.html" name="VideoReader" init="V">
                            <ext name="codegen" value="limited"/>
                            <purpose>Create object to read video files</purpose>
                        </ref>
                        <ref target="ref/videoreader.read.html" name="read" init="R">
                            <ext name="codegen" value="limited"/>
                            <purpose>Read one or more video frames</purpose>
                        </ref>
                        <ref target="ref/videoreader.readframe.html" name="readFrame" init="R">
                            <ext name="codegen" value="limited"/>
                            <purpose>Read next video frame</purpose>
                        </ref>
                        <ref target="ref/videoreader.hasframe.html" name="hasFrame" init="H">
                            <ext name="codegen" value="yes"/>
                            <purpose>Determine if video frame is available to read</purpose>
                        </ref>
                        <ref target="ref/videoreader.getfileformats.html" name="getFileFormats" init="G">
                            <purpose>File formats that VideoReader supports</purpose>
                        </ref>
                        <ref target="ref/mmfileinfo.html" name="mmfileinfo" init="M">
                            <purpose>Information about multimedia file</purpose>
                        </ref>
                        <ref target="ref/videowriter.html" name="VideoWriter" init="V">
                            <purpose>Create object to write video files</purpose>
                        </ref>
                        <ref target="ref/videowriter.open.html" name="open" init="O">
                            <purpose>Open file for writing video data</purpose>
                        </ref>
                        <ref target="ref/videowriter.writevideo.html" name="writeVideo" init="W">
                            <purpose>Write video data to file</purpose>
                        </ref>
                        <ref target="ref/videowriter.close.html" name="close" init="C">
                            <purpose>Close file after writing video data</purpose>
                        </ref>
                        <ref target="ref/videowriter.getprofiles.html" name="getProfiles" init="G">
                            <purpose>Profiles and file formats that VideoWriter supports</purpose>
                        </ref>
                        <ref target="ref/audioread.html" name="audioread" init="A">
                            <purpose>Read audio file</purpose>
                        </ref>
                        <ref target="ref/audiowrite.html" name="audiowrite" init="A">
                            <purpose>Write audio file</purpose>
                        </ref>
                        <ref target="ref/lin2mu.html" name="lin2mu" init="L">
                            <purpose>Convert linear audio signal to mu-law</purpose>
                        </ref>
                        <ref target="ref/mu2lin.html" name="mu2lin" init="M">
                            <purpose>Convert mu-law audio signal to linear</purpose>
                        </ref>
                        <ref target="ref/audioinfo.html" name="audioinfo" init="A">
                            <purpose>Information about audio file</purpose>
                        </ref>
                        <ref target="ref/audioplayer.html" name="audioplayer" init="A">
                            <purpose>Object for playing audio</purpose>
                        </ref>
                        <ref target="ref/audioplayer.isplaying.html" name="isplaying" init="I">
                            <purpose>Determine if playback is in progress</purpose>
                        </ref>
                        <ref target="ref/audioplayer.pause.html" name="pause" init="P">
                            <purpose>Pause playback or recording</purpose>
                        </ref>
                        <ref target="ref/audioplayer.play.html" name="play" init="P">
                            <purpose>Play audio from audioplayer object</purpose>
                        </ref>
                        <ref target="ref/audioplayer.playblocking.html" name="playblocking" init="P">
                            <purpose>Play audio from audioplayer object, hold control until playback completes</purpose>
                        </ref>
                        <ref target="ref/audioplayer.resume.html" name="resume" init="R">
                            <purpose>Resume playback or recording from paused state</purpose>
                        </ref>
                        <ref target="ref/audioplayer.stop.html" name="stop" init="S">
                            <purpose>Stop playback or recording</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.html" name="audiorecorder" init="A">
                            <purpose>Object for recording audio</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.getaudiodata.html" name="getaudiodata" init="G">
                            <purpose>Store recorded audio signal in numeric array</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.getplayer.html" name="getplayer" init="G">
                            <purpose>Creates associated audioplayer object</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.isrecording.html" name="isrecording" init="I">
                            <purpose>Determine if recording is in progress</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.record.html" name="record" init="R">
                            <purpose>Record audio to audiorecorder object</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.recordblocking.html" name="recordblocking" init="R">
                            <purpose>Record audio to audiorecorder object, hold control until recording completes</purpose>
                        </ref>
                        <ref target="ref/audiodevinfo.html" name="audiodevinfo" init="A">
                            <purpose>Information about audio device</purpose>
                        </ref>
                        <ref target="ref/sound.html" name="sound" init="S">
                            <purpose>Convert matrix of signal data to sound</purpose>
                        </ref>
                        <ref target="ref/soundsc.html" name="soundsc" init="S">
                            <purpose>Scale data and play as sound</purpose>
                        </ref>
                        <ref target="ref/beep.html" name="beep" init="B">
                            <purpose>Produce operating system beep sound</purpose>
                        </ref>
                        <ref target="ref/videoreader.read.html" name="read" init="R" unlisted="y">
                            <ext name="codegen" value="limited"/>
                            <purpose>Read one or more video frames</purpose>
                        </ref>
                        <ref target="ref/aviinfo.html" name="aviinfo" init="A" unlisted="y">
                            <purpose>Information about Audio/Video Interleaved (AVI) file</purpose>
                        </ref>
                        <ref target="ref/audioplayer.get.html" name="get" init="G" unlisted="y">
                            <purpose>Query property values for audioplayer object</purpose>
                        </ref>
                        <ref target="ref/audioplayer.set.html" name="set" init="S" unlisted="y">
                            <purpose>Set property values for audioplayer object</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.get.html" name="get" init="G" unlisted="y">
                            <purpose>Query property values for audiorecorder object</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.set.html" name="set" init="S" unlisted="y">
                            <purpose>Set property values for audiorecorder object</purpose>
                        </ref>
                        <ref target="ref/audiorecorder.play.html" name="play" init="P" unlisted="y">
                            <purpose>Play audio from audiorecorder object</purpose>
                        </ref>
                    </cat>
                    <cat target="xml-documents.html">
                        <title>XML Documents</title>
                        <ref target="ref/xmlread.html" name="xmlread" init="X">
                            <purpose>Read XML document and return Document Object Model node</purpose>
                        </ref>
                        <ref target="ref/xmlwrite.html" name="xmlwrite" init="X">
                            <purpose>Write XML Document Object Model node</purpose>
                        </ref>
                        <ref target="ref/xslt.html" name="xslt" init="X">
                            <purpose>Transform XML document using XSLT engine</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="workspace.html">
                    <title>Workspace Variables and MAT-Files</title>
                    <ref target="ref/load.html" name="load" init="L">
                        <ext name="codegen" value="limited"/>
                        <purpose>Load variables from file into workspace</purpose>
                    </ref>
                    <ref target="ref/save.html" name="save" init="S">
                        <purpose>Save workspace variables to file</purpose>
                    </ref>
                    <ref target="ref/matlab.io.matfile.html" name="matfile" init="M">
                        <purpose>Access and change variables in MAT-file without loading file into memory</purpose>
                    </ref>
                    <ref target="ref/disp.html" name="disp" init="D">
                        <purpose>Display value of variable</purpose>
                    </ref>
                    <ref target="ref/who.html" name="who" init="W">
                        <purpose>List variables in workspace</purpose>
                    </ref>
                    <ref target="ref/whos.html" name="whos" init="W">
                        <purpose>List variables in workspace, with sizes and types</purpose>
                    </ref>
                    <ref target="ref/clear.html" name="clear" init="C">
                        <purpose>Remove items from workspace, freeing up system memory</purpose>
                    </ref>
                    <ref target="ref/clearvars.html" name="clearvars" init="C">
                        <purpose>Clear variables from memory</purpose>
                    </ref>
                    <ref target="ref/openvar.html" name="openvar" init="O">
                        <purpose>Open workspace variable in Variables editor or other graphical editing tool</purpose>
                    </ref>
                </cat>
                <cat target="low-level-file-i-o.html">
                    <title>Low-Level File I/O</title>
                    <ref target="ref/fclose.html" name="fclose" init="F">
                        <ext name="codegen" value="yes"/>
                        <purpose>Close one or all open files</purpose>
                    </ref>
                    <ref target="ref/feof.html" name="feof" init="F">
                        <ext name="codegen" value="yes"/>
                        <purpose>Test for end of file</purpose>
                    </ref>
                    <ref target="ref/ferror.html" name="ferror" init="F">
                        <purpose>File I/O error information</purpose>
                    </ref>
                    <ref target="ref/fgetl.html" name="fgetl" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Read line from file, removing newline characters</purpose>
                    </ref>
                    <ref target="ref/fgets.html" name="fgets" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Read line from file, keeping newline characters</purpose>
                    </ref>
                    <ref target="ref/fileread.html" name="fileread" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Read contents of file as text</purpose>
                    </ref>
                    <ref target="ref/fopen.html" name="fopen" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Open file, or obtain information about open files</purpose>
                    </ref>
                    <ref target="ref/fprintf.html" name="fprintf" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Write data to text file</purpose>
                    </ref>
                    <ref target="ref/fread.html" name="fread" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Read data from binary file</purpose>
                    </ref>
                    <ref target="ref/frewind.html" name="frewind" init="F">
                        <ext name="codegen" value="yes"/>
                        <purpose>Move file position indicator to beginning of open file</purpose>
                    </ref>
                    <ref target="ref/fscanf.html" name="fscanf" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Read data from text file</purpose>
                    </ref>
                    <ref target="ref/fseek.html" name="fseek" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Move to specified position in file</purpose>
                    </ref>
                    <ref target="ref/ftell.html" name="ftell" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Current position</purpose>
                    </ref>
                    <ref target="ref/fwrite.html" name="fwrite" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Write data to binary file</purpose>
                    </ref>
                </cat>
                <cat target="tcpip-communication.html">
                    <title>TCP/IP Communication</title>
                    <ref target="ref/tcpclient.html" name="tcpclient" init="T">
                        <ext name="codegen" value="yes"/>
                        <purpose>Create TCP/IP client object to communicate over TCP/IP</purpose>
                    </ref>
                    <ref target="ref/tcpclient.read.html" name="read" init="R">
                        <ext name="codegen" value="yes"/>
                        <purpose>Read data from remote host over TCP/IP</purpose>
                    </ref>
                    <ref target="ref/tcpclient.write.html" name="write" init="W">
                        <ext name="codegen" value="yes"/>
                        <purpose>Write data to remote host over TCP/IP</purpose>
                    </ref>
                </cat>
                <cat target="bluetooth-low-energy-communication.html">
                    <title>Bluetooth Low Energy Communication</title>
                    <ref target="ref/blelist.html" name="blelist" init="B">
                        <purpose>Scan nearby Bluetooth Low Energy peripheral devices</purpose>
                    </ref>
                    <ref target="ref/ble.html" name="ble" init="B">
                        <purpose>Connect to Bluetooth Low Energy peripheral device</purpose>
                    </ref>
                    <ref target="ref/matlabshared.blelib.characteristic.html" name="characteristic" init="C">
                        <purpose>Access a characteristic on Bluetooth Low Energy peripheral device</purpose>
                    </ref>
                    <ref target="ref/matlabshared.blelib.descriptor.html" name="descriptor" init="D">
                        <purpose>Access a descriptor on Bluetooth Low Energy peripheral device</purpose>
                    </ref>
                    <ref target="ref/matlabshared.blelib.characteristic.read.html" name="read" init="R">
                        <purpose>Read characteristic or descriptor data on a Bluetooth Low Energy peripheral device</purpose>
                    </ref>
                    <ref target="ref/matlabshared.blelib.characteristic.write.html" name="write" init="W">
                        <purpose>Write data to a characteristic or descriptor on a Bluetooth Low Energy peripheral device</purpose>
                    </ref>
                    <ref target="ref/matlabshared.blelib.characteristic.subscribe.html" name="subscribe" init="S">
                        <purpose>Subscribe to characteristic notification or indication</purpose>
                    </ref>
                    <ref target="ref/matlabshared.blelib.characteristic.unsubscribe.html" name="unsubscribe" init="U">
                        <purpose>Unsubscribe from characteristic notification and indication</purpose>
                    </ref>
                </cat>
                <cat target="internet-file-access.html">
                    <title>Web Access</title>
                    <ref target="ref/webread.html" name="webread" init="W">
                        <purpose>Read content from RESTful web service</purpose>
                    </ref>
                    <ref target="ref/webwrite.html" name="webwrite" init="W">
                        <purpose>Write data to RESTful web service</purpose>
                    </ref>
                    <ref target="ref/websave.html" name="websave" init="W">
                        <purpose>Save content from RESTful web service to file</purpose>
                    </ref>
                    <ref target="ref/weboptions.html" name="weboptions" init="W">
                        <purpose>Specify parameters for RESTful web service</purpose>
                    </ref>
                    <ref target="ref/web.html" name="web" init="W">
                        <purpose>Open web page or file in browser</purpose>
                    </ref>
                    <ref target="ref/sendmail.html" name="sendmail" init="S">
                        <purpose>Send email message to address list</purpose>
                    </ref>
                    <ref target="ref/ftp.html" name="ftp" init="F">
                        <purpose>Object to connect to FTP server and access its files</purpose>
                    </ref>
                    <ref target="ref/ftp.ascii.html" name="ascii" init="A">
                        <purpose>Set FTP transfer mode to ASCII</purpose>
                    </ref>
                    <ref target="ref/ftp.binary.html" name="binary" init="B">
                        <purpose>Set FTP transfer mode to binary</purpose>
                    </ref>
                    <ref target="ref/ftp.cd.html" name="cd" init="C">
                        <purpose>Change or view current folder on FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.close.html" name="close" init="C">
                        <purpose>Close connection to FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.delete.html" name="delete" init="D">
                        <purpose>Delete file on FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.dir.html" name="dir" init="D">
                        <purpose>List folder contents on FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.mget.html" name="mget" init="M">
                        <purpose>Download files from FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.mkdir.html" name="mkdir" init="M">
                        <purpose>Make new folder on FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.mput.html" name="mput" init="M">
                        <purpose>Upload file or folder to FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.rename.html" name="rename" init="R">
                        <purpose>Rename file on FTP server</purpose>
                    </ref>
                    <ref target="ref/ftp.rmdir.html" name="rmdir" init="R">
                        <purpose>Remove folder on FTP server</purpose>
                    </ref>
                    <ref target="ref/urlread.html" name="urlread" init="U" unlisted="y">
                        <purpose>Download URL content to character vector (not recommended)</purpose>
                    </ref>
                    <ref target="ref/urlwrite.html" name="urlwrite" init="U" unlisted="y">
                        <purpose>Download URL content and save to file (not recommended)</purpose>
                    </ref>
                </cat>
                <cat target="iot-data.html">
                    <title>Internet of Things (IoT) Data</title>
                    <ref target="ref/thingspeakread.html" name="thingSpeakRead" init="T">
                        <purpose>Read data stored in a ThingSpeak channel</purpose>
                    </ref>
                    <ref target="ref/thingspeakwrite.html" name="thingSpeakWrite" init="T">
                        <purpose>Write data to a ThingSpeak channel</purpose>
                    </ref>
                </cat>
                <cat target="json-format.html">
                    <title>JSON Format</title>
                    <ref target="ref/jsondecode.html" name="jsondecode" init="J">
                        <purpose>Decode JSON-formatted text</purpose>
                    </ref>
                    <ref target="ref/jsonencode.html" name="jsonencode" init="J">
                        <purpose>Create JSON-formatted text from structured MATLAB data</purpose>
                    </ref>
                </cat>
                <cat target="serial-port-devices.html">
                    <title>Serial Port Devices</title>
                    <ref target="ref/serialportlist.html" name="serialportlist" init="S">
                        <purpose>List of serial ports connected to your system</purpose>
                    </ref>
                    <ref target="ref/serialport.html" name="serialport" init="S">
                        <purpose>Connection to serial port</purpose>
                    </ref>
                    <ref target="ref/serialport.configureterminator.html" name="configureTerminator" init="C">
                        <purpose>Set terminator for ASCII string communication on serial port</purpose>
                    </ref>
                    <ref target="ref/serialport.configurecallback.html" name="configureCallback" init="C">
                        <purpose>Set serial port callback function and trigger</purpose>
                    </ref>
                    <ref target="ref/serialport.read.html" name="read" init="R">
                        <purpose>Read data from serial port</purpose>
                    </ref>
                    <ref target="ref/serialport.readline.html" name="readline" init="R">
                        <purpose>Read line of ASCII string data from serial port</purpose>
                    </ref>
                    <ref target="ref/serialport.write.html" name="write" init="W">
                        <purpose>Write data to serial port</purpose>
                    </ref>
                    <ref target="ref/serialport.writeline.html" name="writeline" init="W">
                        <purpose>Write line of ASCII data to serial port</purpose>
                    </ref>
                    <ref target="ref/serialport.flush.html" name="flush" init="F">
                        <purpose>Flush serial port buffers</purpose>
                    </ref>
                    <ref target="ref/serialport.getpinstatus.html" name="getpinstatus" init="G">
                        <purpose>Get serial pin status</purpose>
                    </ref>
                    <ref target="ref/serialport.setrts.html" name="setRTS" init="S">
                        <purpose>Set serial RTS pin</purpose>
                    </ref>
                    <ref target="ref/serialport.setdtr.html" name="setDTR" init="S">
                        <purpose>Set serial DTR pin</purpose>
                    </ref>
                    <ref target="ref/serial.fclose.html" name="fclose (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Disconnect serial port object from device</purpose>
                    </ref>
                    <ref target="ref/serial.fgetl.html" name="fgetl (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Read line of ASCII text from device and discard terminator</purpose>
                    </ref>
                    <ref target="ref/serial.fgets.html" name="fgets (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Read line of text from device and include terminator</purpose>
                    </ref>
                    <ref target="ref/serial.fopen.html" name="fopen (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Connect serial port object to device</purpose>
                    </ref>
                    <ref target="ref/serial.fprintf.html" name="fprintf (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Write text to device</purpose>
                    </ref>
                    <ref target="ref/serial.fread.html" name="fread (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Read binary data from device</purpose>
                    </ref>
                    <ref target="ref/serial.fscanf.html" name="fscanf (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Read ASCII data from device, and format as text</purpose>
                    </ref>
                    <ref target="ref/serial.fwrite.html" name="fwrite (serial)" init="F" unlisted="y">
                        <purpose>(Not recommended) Write binary data to device</purpose>
                    </ref>
                    <ref target="ref/readasync.html" name="readasync" init="R" unlisted="y">
                        <purpose>(Not recommended) Read data asynchronously from device</purpose>
                    </ref>
                    <ref target="ref/serial.html" name="serial" init="S" unlisted="y">
                        <purpose>(Not recommended) Create serial port object</purpose>
                    </ref>
                    <ref target="ref/serialbreak.html" name="serialbreak" init="S" unlisted="y">
                        <purpose>(Not recommended) Send break to device connected to serial port</purpose>
                    </ref>
                    <ref target="ref/seriallist.html" name="seriallist" init="S" unlisted="y">
                        <purpose>(Not recommended) List of serial ports connected to your system</purpose>
                    </ref>
                    <ref target="ref/stopasync.html" name="stopasync" init="S" unlisted="y">
                        <purpose>(Not recommended) Stop asynchronous read and write operations</purpose>
                    </ref>
                    <ref target="ref/instrcallback.html" name="instrcallback" init="I" unlisted="y">
                        <purpose>(Not recommended) Event information when event occurs</purpose>
                    </ref>
                    <ref target="ref/instrfind.html" name="instrfind" init="I" unlisted="y">
                        <purpose>(Not recommended) Read serial port objects from memory to MATLAB workspace</purpose>
                    </ref>
                    <ref target="ref/instrfindall.html" name="instrfindall" init="I" unlisted="y">
                        <purpose>(Not recommended) Find visible and hidden serial port objects</purpose>
                    </ref>
                    <ref target="ref/record.html" name="record" init="R" unlisted="y">
                        <purpose>(Not recommended) Record data and event information to file</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="large-files-and-big-data.html">
                <title>Large Files and Big Data</title>
                <cat target="datastore.html">
                    <title>Datastore</title>
                    <ref target="ref/datastore.html" name="datastore" init="D">
                        <purpose>Create datastore for large collections of data</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.tabulartextdatastore.html" name="tabularTextDatastore" init="T">
                        <purpose>Datastore for tabular text files</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.spreadsheetdatastore.html" name="spreadsheetDatastore" init="S">
                        <purpose>Datastore for spreadsheet files</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.html" name="imageDatastore" init="I">
                        <purpose>Datastore for image data</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.parquetdatastore.html" name="parquetDatastore" init="P">
                        <purpose>Datastore for collection of Parquet files</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filedatastore.html" name="fileDatastore" init="F">
                        <purpose>Datastore with custom file reader</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.read.html" name="read" init="R">
                        <purpose>Read data in datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.readall.html" name="readall" init="R">
                        <purpose>Read all data in datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.preview.html" name="preview" init="P">
                        <purpose>Subset of data in datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hasdata.html" name="hasdata" init="H">
                        <purpose>Determine if data is available to read</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.reset.html" name="reset" init="R">
                        <purpose>Reset datastore to initial state</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.writeall.html" name="writeall" init="W">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Write datastore to files</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.shuffle.html" name="shuffle" init="S">
                        <purpose>Shuffle files in datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.isshuffleable.html" name="isShuffleable" init="I">
                        <purpose>Determine whether datastore is shuffleable</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.numpartitions.html" name="numpartitions" init="N">
                        <purpose>Number of datastore partitions</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.partition.html" name="partition" init="P">
                        <purpose>Partition a datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.ispartitionable.html" name="isPartitionable" init="I">
                        <purpose>Determine whether datastore is partitionable</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.combine.html" name="combine" init="C">
                        <purpose>Combine data from multiple datastores</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.transform.html" name="transform" init="T">
                        <purpose>Transform datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.combineddatastore.html" name="CombinedDatastore" init="C">
                        <purpose>Datastore to combine data read from multiple underlying datastores</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.transformeddatastore.html" name="TransformedDatastore" init="T">
                        <purpose>Datastore to transform underlying datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.keyvaluedatastore.html" name="KeyValueDatastore" init="K">
                        <purpose>Datastore for key-value pair data for use with mapreduce</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.talldatastore.html" name="TallDatastore" init="T">
                        <purpose>Datastore for checkpointing tall arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore-class.html" name="matlab.io.Datastore" init="M">
                        <purpose>Base datastore class</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.partitionable-class.html" name="matlab.io.datastore.Partitionable" init="M">
                        <purpose>Add parallelization support to datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadooplocationbased-class.html" name="matlab.io.datastore.HadoopLocationBased" init="M">
                        <purpose>Add Hadoop support to datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.shuffleable-class.html" name="matlab.io.datastore.Shuffleable" init="M">
                        <purpose>Add shuffling support to datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfileset-class.html" name="matlab.io.datastore.DsFileSet" init="M">
                        <purpose>File-set object for collection of files in datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfilereader-class.html" name="matlab.io.datastore.DsFileReader" init="M">
                        <purpose>File-reader object for files in a datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable-class.html" name="matlab.io.datastore.FileWritable" init="M">
                        <purpose>Add file writing support to datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.folderspropertyprovider-class.html" name="matlab.io.datastore.FoldersPropertyProvider" init="M">
                        <purpose>Add Folder property support to datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.fileset.html" name="matlab.io.datastore.FileSet" init="M">
                        <purpose>File-set for collection of files in datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.blockedfileset.html" name="matlab.io.datastore.BlockedFileSet" init="M">
                        <purpose>Blocked file-set for collection of blocks within file</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.fileset.hasnextfile.html" name="hasNextFile" init="H" unlisted="y">
                        <purpose>Determine if file-set has another file in file-set</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.fileset.haspreviousfile.html" name="hasPreviousFile" init="H" unlisted="y">
                        <purpose>Determine if a file-set has a previous file</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.fileset.previousfile.html" name="previousfile" init="P" unlisted="y">
                        <purpose>Information on previous file in file-set</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.blockedfileset.haspreviousblock.html" name="hasPreviousBlock" init="H" unlisted="y">
                        <purpose>Determine if blocked file-set has previous block</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.blockedfileset.previousblock.html" name="previousblock" init="P" unlisted="y">
                        <purpose>Information on previous block in blocked file-set</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.blockedfileset.hasnextblock.html" name="hasNextBlock" init="H" unlisted="y">
                        <purpose>Determine if blocked file-set has another block</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.blockedfileset.nextblock.html" name="nextblock" init="N" unlisted="y">
                        <purpose>Information on next block in blocked file-set</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.blockedfileset.progress.html" name="progress" init="P" unlisted="y">
                        <purpose>Determine how many blocks or files have been read</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.progress.html" name="progress" init="P" unlisted="y">
                        <purpose>Determine how much data has been read</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfilereader.hasdata.html" name="hasdata" init="H" unlisted="y">
                        <purpose>Determine if data is available to read</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfilereader.read.html" name="read" init="R" unlisted="y">
                        <purpose>Read bytes from file</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfilereader.seek.html" name="seek" init="S" unlisted="y">
                        <purpose>Seek to a position in the file</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfileset.hasfile.html" name="hasfile" init="H" unlisted="y">
                        <purpose>Determine if more files are available in file-set object</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfileset.maxpartitions.html" name="maxpartitions" init="M" unlisted="y">
                        <purpose>Maximum number of partitions</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfileset.nextfile.html" name="nextfile" init="N" unlisted="y">
                        <purpose>Information on next file or file chunk</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfileset.partition.html" name="partition" init="P" unlisted="y">
                        <purpose>Partition file-set object</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfileset.reset.html" name="reset" init="R" unlisted="y">
                        <purpose>Reset the file-set object</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.dsfileset.resolve.html" name="resolve" init="R" unlisted="y">
                        <purpose>Information on all files in file-set object</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadooplocationbased.getlocation.html" name="getLocation" init="G" unlisted="y">
                        <purpose>Location in Hadoop</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadooplocationbased.initializedatastore.html" name="initializeDatastore" init="I" unlisted="y">
                        <purpose>Initialize datastore with information from Hadoop</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadooplocationbased.isfullfile.html" name="isfullfile" init="I" unlisted="y">
                        <purpose>Check if datastore reads full files</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadoopfilebased-class.html" name="matlab.io.datastore.HadoopFileBased" init="M" unlisted="y">
                        <purpose>(Not recommended) Add Hadoop file support to datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadoopfilebased.getlocation.html" name="getLocation" init="G" unlisted="y">
                        <purpose>(Not recommended) Location of files in Hadoop</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadoopfilebased.initializedatastore.html" name="initializeDatastore" init="I" unlisted="y">
                        <purpose>(Not recommended) Initialize datastore with information from Hadoop</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.hadoopfilebased.isfullfile.html" name="isfullfile" init="I" unlisted="y">
                        <purpose>(Not recommended) Check if datastore reads full files</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.partitionable.maxpartitions.html" name="maxpartitions" init="M" unlisted="y">
                        <purpose>Maximum number of partitions possible</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.partitionable.numpartitions.html" name="numpartitions" init="N" unlisted="y">
                        <purpose>Default number of partitions</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.partitionable.partition.html" name="partition" init="P" unlisted="y">
                        <purpose>Partition a datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.shuffleable.shuffle.html" name="shuffle" init="S" unlisted="y">
                        <purpose>Return a shuffled version of a datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.folderspropertyprovider.populatefoldersfromlocation.html" name="populateFoldersFromLocation" init="P" unlisted="y">
                        <purpose>Populate Folders property from datastore location argument</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable.currentfileindexcomparator.html" name="currentFileIndexComparator" init="C" unlisted="y">
                        <purpose>Compare file indices</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable.getcurrentfilename.html" name="getCurrentFilename" init="G" unlisted="y">
                        <purpose>Get file name of file read by datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable.getfiles.html" name="getFiles" init="G" unlisted="y">
                        <purpose>Get files backing datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable.getfolders.html" name="getFolders" init="G" unlisted="y">
                        <purpose>Get folders backing datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable.issinglereadperfile.html" name="isSingleReadPerFile" init="I" unlisted="y">
                        <purpose>Determine whether datastore reads whole files</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable.validateoutputlocation.html" name="validateOutputLocation" init="V" unlisted="y">
                        <purpose>Validate output location</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.filewritable.write.html" name="write" init="W" unlisted="y">
                        <purpose>Write block of data</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.counteachlabel.html" name="countEachLabel" init="C" unlisted="y">
                        <purpose>Count files in ImageDatastore labels</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.readimage.html" name="readimage" init="R" unlisted="y">
                        <purpose>Read specified image from datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.spreadsheetdatastore.sheetnames.html" name="sheetnames" init="S" unlisted="y">
                        <purpose>Query sheet names from datastore</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.spliteachlabel.html" name="splitEachLabel" init="S" unlisted="y">
                        <purpose>Split ImageDatastore labels by proportions</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.imagedatastore.subset.html" name="subset" init="S" unlisted="y">
                        <purpose>Create subset of datastore or file-set</purpose>
                    </ref>
                </cat>
                <cat target="tall-arrays.html">
                    <title>Tall Arrays</title>
                    <ref target="ref/tall.tall.html" name="tall" init="T">
                        <ext name="parallelautosupport" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Create tall array</purpose>
                    </ref>
                    <ref target="ref/datastore.html" name="datastore" init="D">
                        <purpose>Create datastore for large collections of data</purpose>
                    </ref>
                    <ref target="ref/tall.gather.html" name="gather" init="G">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Collect tall array into memory after executing queued operations</purpose>
                    </ref>
                    <ref target="ref/tall.write.html" name="write" init="W">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Write tall array to local and remote locations for checkpointing</purpose>
                    </ref>
                    <ref target="ref/mapreducer.html" name="mapreducer" init="M">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Define execution environment for mapreduce or tall arrays</purpose>
                    </ref>
                    <ref target="ref/tallrng.html" name="tallrng" init="T">
                        <purpose>Control random number generation for tall arrays</purpose>
                    </ref>
                    <ref target="ref/tall.istall.html" name="istall" init="I">
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if input is tall array</purpose>
                    </ref>
                    <ref target="ref/tall.classunderlying.html" name="classUnderlying" init="C">
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Class of underlying data in tall array</purpose>
                    </ref>
                    <ref target="ref/tall.isaunderlying.html" name="isaUnderlying" init="I">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine if tall array data is of specified class</purpose>
                    </ref>
                    <ref target="ref/matlab.tall.transform.html" name="matlab.tall.transform" init="M">
                        <purpose>Transform array by applying function handle to blocks of data</purpose>
                    </ref>
                    <ref target="ref/matlab.tall.reduce.html" name="matlab.tall.reduce" init="M">
                        <purpose>Reduce arrays by applying reduction algorithm to blocks of data</purpose>
                    </ref>
                    <ref target="ref/matlab.tall.movingwindow.html" name="matlab.tall.movingWindow" init="M">
                        <purpose>Apply moving window function to blocks of data</purpose>
                    </ref>
                    <ref target="ref/matlab.tall.blockmovingwindow.html" name="matlab.tall.blockMovingWindow" init="M">
                        <purpose>Apply moving window function and block reduction to padded blocks of data</purpose>
                    </ref>
                </cat>
                <cat target="mapreduce.html">
                    <title>MapReduce</title>
                    <ref target="ref/mapreduce.html" name="mapreduce" init="M">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Programming technique for analyzing data sets that do not fit in memory</purpose>
                    </ref>
                    <ref target="ref/datastore.html" name="datastore" init="D">
                        <purpose>Create datastore for large collections of data</purpose>
                    </ref>
                    <ref target="ref/matlab.mapreduce.keyvaluestore.add.html" name="add" init="A">
                        <purpose>Add single key-value pair to KeyValueStore</purpose>
                    </ref>
                    <ref target="ref/matlab.mapreduce.keyvaluestore.addmulti.html" name="addmulti" init="A">
                        <purpose>Add multiple key-value pairs to KeyValueStore</purpose>
                    </ref>
                    <ref target="ref/matlab.mapreduce.valueiterator.hasnext.html" name="hasnext" init="H">
                        <purpose>Determine if ValueIterator has one or more values available</purpose>
                    </ref>
                    <ref target="ref/matlab.mapreduce.valueiterator.getnext.html" name="getnext" init="G">
                        <purpose>Get next value from ValueIterator</purpose>
                    </ref>
                    <ref target="ref/mapreducer.html" name="mapreducer" init="M">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Define execution environment for mapreduce or tall arrays</purpose>
                    </ref>
                    <ref target="ref/gcmr.html" name="gcmr" init="G">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Get current mapreducer configuration</purpose>
                    </ref>
                    <ref target="ref/matlab.mapreduce.keyvaluestore.html" name="KeyValueStore" init="K">
                        <purpose>Store key-value pairs for use with mapreduce</purpose>
                    </ref>
                    <ref target="ref/matlab.mapreduce.valueiterator.html" name="ValueIterator" init="V">
                        <purpose>An iterator over intermediate values for use with mapreduce</purpose>
                    </ref>
                </cat>
                <cat target="large-mat-files.html">
                    <title>Large MAT-Files</title>
                    <ref target="ref/matlab.io.matfile.html" name="matfile" init="M">
                        <purpose>Access and change variables in MAT-file without loading file into memory</purpose>
                    </ref>
                </cat>
                <cat target="parquet-files.html">
                    <title>Parquet Files</title>
                    <ref target="ref/parquetread.html" name="parquetread" init="P">
                        <purpose>Read columnar data from a Parquet file</purpose>
                    </ref>
                    <ref target="ref/parquetwrite.html" name="parquetwrite" init="P">
                        <purpose>Write columnar data to Parquet file</purpose>
                    </ref>
                    <ref target="ref/matlab.io.parquet.parquetinfo.html" name="parquetinfo" init="P">
                        <purpose>Get information about Parquet file</purpose>
                    </ref>
                    <ref target="ref/matlab.io.datastore.parquetdatastore.html" name="parquetDatastore" init="P">
                        <purpose>Datastore for collection of Parquet files</purpose>
                    </ref>
                </cat>
                <cat target="memory-mapping.html">
                    <title>Memory Mapping</title>
                    <ref target="ref/memmapfile.html" name="memmapfile" init="M">
                        <purpose>Create memory map to a file</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="preprocessing-data.html">
                <title>Preprocessing Data</title>
                <ref target="ref/ismissing.html" name="ismissing" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Find missing values</purpose>
                </ref>
                <ref target="ref/rmmissing.html" name="rmmissing" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Remove missing entries</purpose>
                </ref>
                <ref target="ref/fillmissing.html" name="fillmissing" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Fill missing values</purpose>
                </ref>
                <ref target="ref/missing.html" name="missing" init="M">
                    <purpose>Create missing values</purpose>
                </ref>
                <ref target="ref/standardizemissing.html" name="standardizeMissing" init="S">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Insert standard missing values</purpose>
                </ref>
                <ref target="ref/isoutlier.html" name="isoutlier" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Find outliers in data</purpose>
                </ref>
                <ref target="ref/filloutliers.html" name="filloutliers" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Detect and replace outliers in data</purpose>
                </ref>
                <ref target="ref/rmoutliers.html" name="rmoutliers" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Detect and remove outliers in data</purpose>
                </ref>
                <ref target="ref/movmad.html" name="movmad" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving median absolute deviation</purpose>
                </ref>
                <ref target="ref/ischange.html" name="ischange" init="I">
                    <ext name="codegen" value="limited"/>
                    <purpose>Find abrupt changes in data</purpose>
                </ref>
                <ref target="ref/islocalmin.html" name="islocalmin" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Find local minima</purpose>
                </ref>
                <ref target="ref/islocalmax.html" name="islocalmax" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Find local maxima</purpose>
                </ref>
                <ref target="ref/smoothdata.html" name="smoothdata" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Smooth noisy data</purpose>
                </ref>
                <ref target="ref/movmean.html" name="movmean" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving mean</purpose>
                </ref>
                <ref target="ref/movmedian.html" name="movmedian" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving median</purpose>
                </ref>
                <ref target="ref/detrend.html" name="detrend" init="D">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Remove polynomial trend</purpose>
                </ref>
                <ref target="ref/double.normalize.html" name="normalize" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Normalize data</purpose>
                </ref>
                <ref target="ref/rescale.html" name="rescale" init="R">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Scale range of array elements</purpose>
                </ref>
                <ref target="ref/double.discretize.html" name="discretize" init="D">
                    <ext name="codegen" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Group data into bins or categories</purpose>
                </ref>
                <ref target="ref/double.groupcounts.html" name="groupcounts" init="G">
                    <ext name="tall" value="limited"/>
                    <purpose>Number of group elements</purpose>
                </ref>
                <ref target="ref/double.groupfilter.html" name="groupfilter" init="G">
                    <ext name="tall" value="limited"/>
                    <purpose>Filter by group</purpose>
                </ref>
                <ref target="ref/double.groupsummary.html" name="groupsummary" init="G">
                    <ext name="tall" value="limited"/>
                    <purpose>Group summary computations</purpose>
                </ref>
                <ref target="ref/double.grouptransform.html" name="grouptransform" init="G">
                    <ext name="tall" value="limited"/>
                    <purpose>Transform by group</purpose>
                </ref>
                <ref target="ref/histcounts.html" name="histcounts" init="H">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Histogram bin counts</purpose>
                </ref>
                <ref target="ref/histcounts2.html" name="histcounts2" init="H">
                    <ext name="codegen" value="limited"/>
                    <purpose>Bivariate histogram bin counts</purpose>
                </ref>
                <ref target="ref/findgroups.html" name="findgroups" init="F">
                    <ext name="tall" value="limited"/>
                    <purpose>Find groups and return group numbers</purpose>
                </ref>
                <ref target="ref/splitapply.html" name="splitapply" init="S">
                    <ext name="tall" value="limited"/>
                    <purpose>Split data into groups and apply function</purpose>
                </ref>
                <ref target="ref/rowfun.html" name="rowfun" init="R">
                    <purpose>Apply function to table or timetable rows</purpose>
                </ref>
                <ref target="ref/varfun.html" name="varfun" init="V">
                    <ext name="tall" value="limited"/>
                    <purpose>Apply function to table or timetable variables</purpose>
                </ref>
                <ref target="ref/accumarray.html" name="accumarray" init="A">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Construct array with accumulation</purpose>
                </ref>
            </cat>
            <cat target="descriptive-statistics.html">
                <title>Descriptive Statistics</title>
                <ref target="ref/min.html" name="min" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Minimum elements of an array</purpose>
                </ref>
                <ref target="ref/mink.html" name="mink" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Find k smallest elements of array</purpose>
                </ref>
                <ref target="ref/max.html" name="max" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Maximum elements of an array</purpose>
                </ref>
                <ref target="ref/maxk.html" name="maxk" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Find k largest elements of array</purpose>
                </ref>
                <ref target="ref/bounds.html" name="bounds" init="B">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Smallest and largest elements</purpose>
                </ref>
                <ref target="ref/topkrows.html" name="topkrows" init="T">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Top rows in sorted order</purpose>
                </ref>
                <ref target="ref/mean.html" name="mean" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Average or mean value of array</purpose>
                </ref>
                <ref target="ref/median.html" name="median" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Median value of array</purpose>
                </ref>
                <ref target="ref/mode.html" name="mode" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Most frequent values in array</purpose>
                </ref>
                <ref target="ref/std.html" name="std" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Standard deviation</purpose>
                </ref>
                <ref target="ref/var.html" name="var" init="V">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Variance</purpose>
                </ref>
                <ref target="ref/corrcoef.html" name="corrcoef" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Correlation coefficients</purpose>
                </ref>
                <ref target="ref/cov.html" name="cov" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Covariance</purpose>
                </ref>
                <ref target="ref/xcorr.html" name="xcorr" init="X">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Cross-correlation</purpose>
                </ref>
                <ref target="ref/xcov.html" name="xcov" init="X">
                    <ext name="codegen" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Cross-covariance</purpose>
                </ref>
                <ref target="ref/cummax.html" name="cummax" init="C">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Cumulative maximum</purpose>
                </ref>
                <ref target="ref/cummin.html" name="cummin" init="C">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Cumulative minimum</purpose>
                </ref>
                <ref target="ref/movmad.html" name="movmad" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving median absolute deviation</purpose>
                </ref>
                <ref target="ref/movmax.html" name="movmax" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving maximum</purpose>
                </ref>
                <ref target="ref/movmean.html" name="movmean" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving mean</purpose>
                </ref>
                <ref target="ref/movmedian.html" name="movmedian" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving median</purpose>
                </ref>
                <ref target="ref/movmin.html" name="movmin" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving minimum</purpose>
                </ref>
                <ref target="ref/movprod.html" name="movprod" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving product</purpose>
                </ref>
                <ref target="ref/movstd.html" name="movstd" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving standard deviation</purpose>
                </ref>
                <ref target="ref/movsum.html" name="movsum" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving sum</purpose>
                </ref>
                <ref target="ref/movvar.html" name="movvar" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Moving variance</purpose>
                </ref>
            </cat>
            <cat target="visual-exploration.html">
                <title>Visual Exploration</title>
                <ref target="ref/plotedit.html" name="plotedit" init="P">
                    <purpose>Interactively edit and annotate plots</purpose>
                </ref>
                <ref target="ref/plottools.html" name="plottools" init="P">
                    <purpose>Show or hide plot tools</purpose>
                </ref>
                <ref target="ref/showplottool.html" name="showplottool" init="S">
                    <purpose>Show or hide figure plot tool</purpose>
                </ref>
                <ref target="ref/figurepalette.html" name="figurepalette" init="F">
                    <purpose>Show or hide Figure Palette</purpose>
                </ref>
                <ref target="ref/plotbrowser.html" name="plotbrowser" init="P">
                    <purpose>Show or hide figure Plot Browser</purpose>
                </ref>
                <ref target="ref/propertyeditor.html" name="propertyeditor" init="P">
                    <purpose>Show or hide Property Editor</purpose>
                </ref>
                <ref target="ref/propedit.html" name="propedit" init="P">
                    <purpose>Open Property Editor</purpose>
                </ref>
                <ref target="ref/matlab.graphics.datatip.datatip.html" name="datatip" init="D">
                    <purpose>Create data tip</purpose>
                </ref>
                <ref target="ref/matlab.graphics.datatip.datatiptextrow.html" name="dataTipTextRow" init="D">
                    <purpose>Add row to data tips</purpose>
                </ref>
                <ref target="ref/axtoolbar.html" name="axtoolbar" init="A">
                    <purpose>Create axes toolbar</purpose>
                </ref>
                <ref target="ref/axtoolbarbtn.html" name="axtoolbarbtn" init="A">
                    <purpose>Add buttons to axes toolbar</purpose>
                </ref>
                <ref target="ref/addtoolbarexplorationbuttons.html" name="addToolbarExplorationButtons" init="A">
                    <purpose>Add data exploration buttons to figure toolbar</purpose>
                </ref>
                <ref target="ref/removetoolbarexplorationbuttons.html" name="removeToolbarExplorationButtons" init="R">
                    <purpose>Remove data exploration buttons from figure toolbar</purpose>
                </ref>
                <ref target="ref/matlab.graphics.interaction.interactions.paninteraction.html" name="panInteraction" init="P">
                    <purpose>Pan interaction</purpose>
                </ref>
                <ref target="ref/matlab.graphics.interaction.interactions.rulerpaninteraction.html" name="rulerPanInteraction" init="R">
                    <purpose>Ruler-pan interaction</purpose>
                </ref>
                <ref target="ref/matlab.graphics.interaction.interactions.zoominteraction.html" name="zoomInteraction" init="Z">
                    <purpose>Zoom interaction</purpose>
                </ref>
                <ref target="ref/matlab.graphics.interaction.interactions.regionzoominteraction.html" name="regionZoomInteraction" init="R">
                    <purpose>Region-zoom interaction</purpose>
                </ref>
                <ref target="ref/matlab.graphics.interaction.interactions.rotateinteraction.html" name="rotateInteraction" init="R">
                    <purpose>Rotate interaction</purpose>
                </ref>
                <ref target="ref/matlab.graphics.interaction.interactions.datatipinteraction.html" name="dataTipInteraction" init="D">
                    <purpose>Data tip interaction</purpose>
                </ref>
                <ref target="ref/enabledefaultinteractivity.html" name="enableDefaultInteractivity" init="E">
                    <purpose>Enable built-in axes interactions</purpose>
                </ref>
                <ref target="ref/disabledefaultinteractivity.html" name="disableDefaultInteractivity" init="D">
                    <purpose>Disable built-in axes interactions</purpose>
                </ref>
                <ref target="ref/pan.html" name="pan" init="P">
                    <purpose>Pan view of graph interactively</purpose>
                </ref>
                <ref target="ref/zoom.html" name="zoom" init="Z">
                    <purpose>Turn zooming on or off or magnify by factor</purpose>
                </ref>
                <ref target="ref/rotate3d.html" name="rotate3d" init="R">
                    <purpose>Rotate 3-D view using mouse</purpose>
                </ref>
                <ref target="ref/matlab.graphics.shape.internal.datacursormanager.html" name="datacursormode" init="D">
                    <purpose>Enable data cursor mode</purpose>
                </ref>
                <ref target="ref/matlab.graphics.interaction.internal.brush.html" name="brush" init="B">
                    <purpose>Interactively mark data values in a chart</purpose>
                </ref>
                <ref target="ref/enablelegacyexplorationmodes.html" name="enableLegacyExplorationModes" init="E">
                    <purpose>Control behavior of modes in UI figures</purpose>
                </ref>
                <ref target="ref/matlab.graphics.internal.linkdata.html" name="linkdata" init="L">
                    <purpose>Automatically update charted data</purpose>
                </ref>
                <ref target="ref/linkaxes.html" name="linkaxes" init="L">
                    <purpose>Synchronize limits of multiple axes</purpose>
                </ref>
                <ref target="ref/linkprop.html" name="linkprop" init="L">
                    <purpose>Keep same value for corresponding properties of graphics objects</purpose>
                </ref>
                <ref target="ref/refreshdata.html" name="refreshdata" init="R">
                    <purpose>Refresh charted data</purpose>
                </ref>
                <ref target="ref/selectmoveresize.html" name="selectmoveresize" init="S" unlisted="y">
                    <purpose>Select, move, resize, or copy axes and uicontrol graphics objects</purpose>
                </ref>
            </cat>
        </cat>
        <cat target="mathematics.html">
            <title>Mathematics</title>
            <cat target="elementary-math.html">
                <title>Elementary Math</title>
                <cat target="arithmetic.html">
                    <title>Arithmetic</title>
                    <ref target="ref/plus.html" name="+" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Addition</purpose>
                    </ref>
                    <ref target="ref/sum.html" name="sum" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Sum of array elements</purpose>
                    </ref>
                    <ref target="ref/cumsum.html" name="cumsum" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Cumulative sum</purpose>
                    </ref>
                    <ref target="ref/movsum.html" name="movsum" init="M">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Moving sum</purpose>
                    </ref>
                    <ref target="ref/minus.html" name="-" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Subtraction</purpose>
                    </ref>
                    <ref target="ref/diff.html" name="diff" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Differences and approximate derivatives</purpose>
                    </ref>
                    <ref target="ref/times.html" name=".*" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Multiplication</purpose>
                    </ref>
                    <ref target="ref/mtimes.html" name="*" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Matrix multiplication</purpose>
                    </ref>
                    <ref target="ref/prod.html" name="prod" init="P">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Product of array elements</purpose>
                    </ref>
                    <ref target="ref/cumprod.html" name="cumprod" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Cumulative product</purpose>
                    </ref>
                    <ref target="ref/rdivide.html" name="./" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Right array division</purpose>
                    </ref>
                    <ref target="ref/ldivide.html" name=".\" init="">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Left array division</purpose>
                    </ref>
                    <ref target="ref/mrdivide.html" name="/" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Solve systems of linear equations xA = B for x</purpose>
                    </ref>
                    <ref target="ref/mldivide.html" name="\" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Solve systems of linear equations Ax = B for x</purpose>
                    </ref>
                    <ref target="ref/power.html" name=".^" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Element-wise power</purpose>
                    </ref>
                    <ref target="ref/mpower.html" name="^" init="">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Matrix power</purpose>
                    </ref>
                    <ref target="ref/uminus.html" name="uminus" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Unary minus</purpose>
                    </ref>
                    <ref target="ref/uplus.html" name="uplus" init="U">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Unary plus</purpose>
                    </ref>
                    <ref target="ref/mod.html" name="mod" init="M">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remainder after division (modulo operation)</purpose>
                    </ref>
                    <ref target="ref/rem.html" name="rem" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Remainder after division</purpose>
                    </ref>
                    <ref target="ref/idivide.html" name="idivide" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Integer division with rounding option</purpose>
                    </ref>
                    <ref target="ref/ceil.html" name="ceil" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round toward positive infinity</purpose>
                    </ref>
                    <ref target="ref/fix.html" name="fix" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round toward zero</purpose>
                    </ref>
                    <ref target="ref/floor.html" name="floor" init="F">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round toward negative infinity</purpose>
                    </ref>
                    <ref target="ref/round.html" name="round" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Round to nearest decimal or integer</purpose>
                    </ref>
                    <ref target="ref/bsxfun.html" name="bsxfun" init="B">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Apply element-wise operation to two arrays with implicit expansion enabled</purpose>
                    </ref>
                </cat>
                <cat target="trigonometry.html">
                    <title>Trigonometry</title>
                    <ref target="ref/sin.html" name="sin" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Sine of argument in radians</purpose>
                    </ref>
                    <ref target="ref/sind.html" name="sind" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Sine of argument in degrees</purpose>
                    </ref>
                    <ref target="ref/double.sinpi.html" name="sinpi" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compute sin(X*pi) accurately</purpose>
                    </ref>
                    <ref target="ref/asin.html" name="asin" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse sine in radians</purpose>
                    </ref>
                    <ref target="ref/asind.html" name="asind" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse sine in degrees</purpose>
                    </ref>
                    <ref target="ref/sinh.html" name="sinh" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hyperbolic sine</purpose>
                    </ref>
                    <ref target="ref/asinh.html" name="asinh" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse hyperbolic sine</purpose>
                    </ref>
                    <ref target="ref/double.cos.html" name="cos" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Cosine of argument in radians</purpose>
                    </ref>
                    <ref target="ref/cosd.html" name="cosd" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Cosine of argument in degrees</purpose>
                    </ref>
                    <ref target="ref/double.cospi.html" name="cospi" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compute cos(X*pi) accurately</purpose>
                    </ref>
                    <ref target="ref/acos.html" name="acos" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse cosine in radians</purpose>
                    </ref>
                    <ref target="ref/acosd.html" name="acosd" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse cosine in degrees</purpose>
                    </ref>
                    <ref target="ref/cosh.html" name="cosh" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hyperbolic cosine</purpose>
                    </ref>
                    <ref target="ref/acosh.html" name="acosh" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse hyperbolic cosine</purpose>
                    </ref>
                    <ref target="ref/tan.html" name="tan" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Tangent of argument in radians</purpose>
                    </ref>
                    <ref target="ref/tand.html" name="tand" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Tangent of argument in degrees</purpose>
                    </ref>
                    <ref target="ref/atan.html" name="atan" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse tangent in radians</purpose>
                    </ref>
                    <ref target="ref/atand.html" name="atand" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse tangent in degrees</purpose>
                    </ref>
                    <ref target="ref/atan2.html" name="atan2" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Four-quadrant inverse tangent</purpose>
                    </ref>
                    <ref target="ref/atan2d.html" name="atan2d" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Four-quadrant inverse tangent in degrees</purpose>
                    </ref>
                    <ref target="ref/tanh.html" name="tanh" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hyperbolic tangent</purpose>
                    </ref>
                    <ref target="ref/atanh.html" name="atanh" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse hyperbolic tangent</purpose>
                    </ref>
                    <ref target="ref/csc.html" name="csc" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Cosecant of input angle in radians</purpose>
                    </ref>
                    <ref target="ref/cscd.html" name="cscd" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Cosecant of argument in degrees</purpose>
                    </ref>
                    <ref target="ref/acsc.html" name="acsc" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse cosecant in radians</purpose>
                    </ref>
                    <ref target="ref/acscd.html" name="acscd" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse cosecant in degrees</purpose>
                    </ref>
                    <ref target="ref/csch.html" name="csch" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hyperbolic cosecant</purpose>
                    </ref>
                    <ref target="ref/acsch.html" name="acsch" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse hyperbolic cosecant</purpose>
                    </ref>
                    <ref target="ref/sec.html" name="sec" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Secant of angle in radians</purpose>
                    </ref>
                    <ref target="ref/secd.html" name="secd" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Secant of argument in degrees</purpose>
                    </ref>
                    <ref target="ref/asec.html" name="asec" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse secant in radians</purpose>
                    </ref>
                    <ref target="ref/asecd.html" name="asecd" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse secant in degrees</purpose>
                    </ref>
                    <ref target="ref/sech.html" name="sech" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hyperbolic secant</purpose>
                    </ref>
                    <ref target="ref/asech.html" name="asech" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse hyperbolic secant</purpose>
                    </ref>
                    <ref target="ref/cot.html" name="cot" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Cotangent of angle in radians</purpose>
                    </ref>
                    <ref target="ref/cotd.html" name="cotd" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Cotangent of argument in degrees</purpose>
                    </ref>
                    <ref target="ref/acot.html" name="acot" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse cotangent in radians</purpose>
                    </ref>
                    <ref target="ref/acotd.html" name="acotd" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse cotangent in degrees</purpose>
                    </ref>
                    <ref target="ref/coth.html" name="coth" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Hyperbolic cotangent</purpose>
                    </ref>
                    <ref target="ref/acoth.html" name="acoth" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse hyperbolic cotangent</purpose>
                    </ref>
                    <ref target="ref/hypot.html" name="hypot" init="H">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Square root of sum of squares (hypotenuse)</purpose>
                    </ref>
                    <ref target="ref/deg2rad.html" name="deg2rad" init="D">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert angle from degrees to radians</purpose>
                    </ref>
                    <ref target="ref/rad2deg.html" name="rad2deg" init="R">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Convert angle from radians to degrees</purpose>
                    </ref>
                    <ref target="ref/cart2pol.html" name="cart2pol" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Transform Cartesian coordinates to polar or cylindrical</purpose>
                    </ref>
                    <ref target="ref/cart2sph.html" name="cart2sph" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Transform Cartesian coordinates to spherical</purpose>
                    </ref>
                    <ref target="ref/pol2cart.html" name="pol2cart" init="P">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Transform polar or cylindrical coordinates to Cartesian</purpose>
                    </ref>
                    <ref target="ref/sph2cart.html" name="sph2cart" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Transform spherical coordinates to Cartesian</purpose>
                    </ref>
                </cat>
                <cat target="exponents-and-logarithms.html">
                    <title>Exponents and Logarithms</title>
                    <ref target="ref/exp.html" name="exp" init="E">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Exponential</purpose>
                    </ref>
                    <ref target="ref/expm1.html" name="expm1" init="E">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compute exp(x)-1 accurately for small values of x</purpose>
                    </ref>
                    <ref target="ref/log.html" name="log" init="L">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Natural logarithm</purpose>
                    </ref>
                    <ref target="ref/log10.html" name="log10" init="L">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Common logarithm (base 10)</purpose>
                    </ref>
                    <ref target="ref/log1p.html" name="log1p" init="L">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Compute log(1+x) accurately for small values of x</purpose>
                    </ref>
                    <ref target="ref/log2.html" name="log2" init="L">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Base 2 logarithm and floating-point number dissection</purpose>
                    </ref>
                    <ref target="ref/nextpow2.html" name="nextpow2" init="N">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Exponent of next higher power of 2</purpose>
                    </ref>
                    <ref target="ref/nthroot.html" name="nthroot" init="N">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Real nth root of real numbers</purpose>
                    </ref>
                    <ref target="ref/pow2.html" name="pow2" init="P">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Base 2 power and scale floating-point numbers</purpose>
                    </ref>
                    <ref target="ref/reallog.html" name="reallog" init="R">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Natural logarithm for nonnegative real arrays</purpose>
                    </ref>
                    <ref target="ref/realpow.html" name="realpow" init="R">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Array power for real-only output</purpose>
                    </ref>
                    <ref target="ref/realsqrt.html" name="realsqrt" init="R">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Square root for nonnegative real arrays</purpose>
                    </ref>
                    <ref target="ref/sqrt.html" name="sqrt" init="S">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Square root</purpose>
                    </ref>
                </cat>
                <cat target="complex-numbers.html">
                    <title>Complex Numbers</title>
                    <ref target="ref/abs.html" name="abs" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Absolute value and complex magnitude</purpose>
                    </ref>
                    <ref target="ref/angle.html" name="angle" init="A">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Phase angle</purpose>
                    </ref>
                    <ref target="ref/complex.html" name="complex" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Create complex array</purpose>
                    </ref>
                    <ref target="ref/conj.html" name="conj" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Complex conjugate</purpose>
                    </ref>
                    <ref target="ref/cplxpair.html" name="cplxpair" init="C">
                        <ext name="codegen" value="yes"/>
                        <purpose>Sort complex numbers into complex conjugate pairs</purpose>
                    </ref>
                    <ref target="ref/i.html" name="i" init="I">
                        <purpose>Imaginary unit</purpose>
                    </ref>
                    <ref target="ref/imag.html" name="imag" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Imaginary part of complex number</purpose>
                    </ref>
                    <ref target="ref/isreal.html" name="isreal" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine whether array is real</purpose>
                    </ref>
                    <ref target="ref/j.html" name="j" init="J">
                        <purpose>Imaginary unit</purpose>
                    </ref>
                    <ref target="ref/real.html" name="real" init="R">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Real part of complex number</purpose>
                    </ref>
                    <ref target="ref/sign.html" name="sign" init="S">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Sign function (signum function)</purpose>
                    </ref>
                    <ref target="ref/unwrap.html" name="unwrap" init="U">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Shift phase angles</purpose>
                    </ref>
                </cat>
                <cat target="discrete-math.html">
                    <title>Discrete Math</title>
                    <ref target="ref/factor.html" name="factor" init="F">
                        <ext name="codegen" value="limited"/>
                        <purpose>Prime factors</purpose>
                    </ref>
                    <ref target="ref/factorial.html" name="factorial" init="F">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Factorial of input</purpose>
                    </ref>
                    <ref target="ref/gcd.html" name="gcd" init="G">
                        <ext name="codegen" value="yes"/>
                        <purpose>Greatest common divisor</purpose>
                    </ref>
                    <ref target="ref/isprime.html" name="isprime" init="I">
                        <ext name="codegen" value="limited"/>
                        <purpose>Determine which array elements are prime</purpose>
                    </ref>
                    <ref target="ref/lcm.html" name="lcm" init="L">
                        <ext name="codegen" value="yes"/>
                        <purpose>Least common multiple</purpose>
                    </ref>
                    <ref target="ref/nchoosek.html" name="nchoosek" init="N">
                        <ext name="codegen" value="limited"/>
                        <purpose>Binomial coefficient or all combinations</purpose>
                    </ref>
                    <ref target="ref/perms.html" name="perms" init="P">
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>All possible permutations</purpose>
                    </ref>
                    <ref target="ref/matchpairs.html" name="matchpairs" init="M">
                        <ext name="codegen" value="limited"/>
                        <purpose>Solve linear assignment problem</purpose>
                    </ref>
                    <ref target="ref/primes.html" name="primes" init="P">
                        <ext name="codegen" value="limited"/>
                        <purpose>Prime numbers less than or equal to input value</purpose>
                    </ref>
                    <ref target="ref/rat.html" name="rat" init="R">
                        <ext name="codegen" value="limited"/>
                        <purpose>Rational fraction approximation</purpose>
                    </ref>
                    <ref target="ref/rats.html" name="rats" init="R">
                        <purpose>Rational output</purpose>
                    </ref>
                </cat>
                <cat target="polynomials.html">
                    <title>Polynomials</title>
                    <ref target="ref/poly.html" name="poly" init="P">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Polynomial with specified roots or characteristic polynomial</purpose>
                    </ref>
                    <ref target="ref/polyeig.html" name="polyeig" init="P">
                        <ext name="codegen" value="limited"/>
                        <purpose>Polynomial eigenvalue problem</purpose>
                    </ref>
                    <ref target="ref/polyfit.html" name="polyfit" init="P">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Polynomial curve fitting</purpose>
                    </ref>
                    <ref target="ref/residue.html" name="residue" init="R">
                        <purpose>Partial fraction expansion (partial fraction decomposition)</purpose>
                    </ref>
                    <ref target="ref/roots.html" name="roots" init="R">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Polynomial roots</purpose>
                    </ref>
                    <ref target="ref/polyval.html" name="polyval" init="P">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Polynomial evaluation</purpose>
                    </ref>
                    <ref target="ref/polyvalm.html" name="polyvalm" init="P">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Matrix polynomial evaluation</purpose>
                    </ref>
                    <ref target="ref/conv.html" name="conv" init="C">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Convolution and polynomial multiplication</purpose>
                    </ref>
                    <ref target="ref/deconv.html" name="deconv" init="D">
                        <ext name="codegen" value="limited"/>
                        <purpose>Deconvolution and polynomial division</purpose>
                    </ref>
                    <ref target="ref/polyint.html" name="polyint" init="P">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Polynomial integration</purpose>
                    </ref>
                    <ref target="ref/polyder.html" name="polyder" init="P">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Polynomial differentiation</purpose>
                    </ref>
                </cat>
                <cat target="special-functions.html">
                    <title>Special Functions</title>
                    <ref target="ref/airy.html" name="airy" init="A">
                        <ext name="codegen" value="limited"/>
                        <purpose>Airy Functions</purpose>
                    </ref>
                    <ref target="ref/besselh.html" name="besselh" init="B">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Bessel function of third kind (Hankel function)</purpose>
                    </ref>
                    <ref target="ref/besseli.html" name="besseli" init="B">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Modified Bessel function of first kind</purpose>
                    </ref>
                    <ref target="ref/besselj.html" name="besselj" init="B">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Bessel function of first kind</purpose>
                    </ref>
                    <ref target="ref/besselk.html" name="besselk" init="B">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Modified Bessel function of second kind</purpose>
                    </ref>
                    <ref target="ref/bessely.html" name="bessely" init="B">
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Bessel function of second kind</purpose>
                    </ref>
                    <ref target="ref/beta.html" name="beta" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Beta function</purpose>
                    </ref>
                    <ref target="ref/betainc.html" name="betainc" init="B">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Incomplete beta function</purpose>
                    </ref>
                    <ref target="ref/betaincinv.html" name="betaincinv" init="B">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Beta inverse cumulative distribution function</purpose>
                    </ref>
                    <ref target="ref/betaln.html" name="betaln" init="B">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Logarithm of beta function</purpose>
                    </ref>
                    <ref target="ref/erf.html" name="erf" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Error function</purpose>
                    </ref>
                    <ref target="ref/erfc.html" name="erfc" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Complementary error function</purpose>
                    </ref>
                    <ref target="ref/erfcinv.html" name="erfcinv" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse complementary error function</purpose>
                    </ref>
                    <ref target="ref/erfcx.html" name="erfcx" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Scaled complementary error function</purpose>
                    </ref>
                    <ref target="ref/erfinv.html" name="erfinv" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse error function</purpose>
                    </ref>
                    <ref target="ref/gamma.html" name="gamma" init="G">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Gamma function</purpose>
                    </ref>
                    <ref target="ref/gammainc.html" name="gammainc" init="G">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Incomplete gamma function</purpose>
                    </ref>
                    <ref target="ref/gammaincinv.html" name="gammaincinv" init="G">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Inverse incomplete gamma function</purpose>
                    </ref>
                    <ref target="ref/gammaln.html" name="gammaln" init="G">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Logarithm of gamma function</purpose>
                    </ref>
                    <ref target="ref/psi.html" name="psi" init="P">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Psi (polygamma) function</purpose>
                    </ref>
                    <ref target="ref/ellipj.html" name="ellipj" init="E">
                        <purpose>Jacobi elliptic functions</purpose>
                    </ref>
                    <ref target="ref/ellipke.html" name="ellipke" init="E">
                        <ext name="codegen" value="yes"/>
                        <purpose>Complete elliptic integrals of first and second kind</purpose>
                    </ref>
                    <ref target="ref/expint.html" name="expint" init="E">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Exponential integral</purpose>
                    </ref>
                    <ref target="ref/legendre.html" name="legendre" init="L">
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Associated Legendre functions</purpose>
                    </ref>
                </cat>
                <cat target="constants-and-test-matrices.html">
                    <title>Constants and Test Matrices</title>
                    <ref target="ref/eps.html" name="eps" init="E">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Floating-point relative accuracy</purpose>
                    </ref>
                    <ref target="ref/flintmax.html" name="flintmax" init="F">
                        <ext name="codegen" value="yes"/>
                        <purpose>Largest consecutive integer in floating-point format</purpose>
                    </ref>
                    <ref target="ref/i.html" name="i" init="I">
                        <purpose>Imaginary unit</purpose>
                    </ref>
                    <ref target="ref/j.html" name="j" init="J">
                        <purpose>Imaginary unit</purpose>
                    </ref>
                    <ref target="ref/inf.html" name="Inf" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Create array of all Inf values</purpose>
                    </ref>
                    <ref target="ref/pi.html" name="pi" init="P">
                        <ext name="codegen" value="yes"/>
                        <purpose>Ratio of circle's circumference to its diameter</purpose>
                    </ref>
                    <ref target="ref/nan.html" name="NaN" init="N">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Create array of all NaN values</purpose>
                    </ref>
                    <ref target="ref/isfinite.html" name="isfinite" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine which array elements are finite</purpose>
                    </ref>
                    <ref target="ref/isinf.html" name="isinf" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine which array elements are infinite</purpose>
                    </ref>
                    <ref target="ref/isnan.html" name="isnan" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine which array elements are NaN</purpose>
                    </ref>
                    <ref target="ref/compan.html" name="compan" init="C">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Companion matrix</purpose>
                    </ref>
                    <ref target="ref/gallery.html" name="gallery" init="G">
                        <purpose>Test matrices</purpose>
                    </ref>
                    <ref target="ref/hadamard.html" name="hadamard" init="H">
                        <ext name="codegen" value="limited"/>
                        <purpose>Hadamard matrix</purpose>
                    </ref>
                    <ref target="ref/hankel.html" name="hankel" init="H">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Hankel matrix</purpose>
                    </ref>
                    <ref target="ref/hilb.html" name="hilb" init="H">
                        <ext name="codegen" value="yes"/>
                        <purpose>Hilbert matrix</purpose>
                    </ref>
                    <ref target="ref/invhilb.html" name="invhilb" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Inverse of Hilbert matrix</purpose>
                    </ref>
                    <ref target="ref/magic.html" name="magic" init="M">
                        <ext name="codegen" value="limited"/>
                        <purpose>Magic square</purpose>
                    </ref>
                    <ref target="ref/pascal.html" name="pascal" init="P">
                        <ext name="codegen" value="yes"/>
                        <purpose>Pascal matrix</purpose>
                    </ref>
                    <ref target="ref/rosser.html" name="rosser" init="R">
                        <ext name="codegen" value="yes"/>
                        <purpose>Classic symmetric eigenvalue test problem</purpose>
                    </ref>
                    <ref target="ref/toeplitz.html" name="toeplitz" init="T">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Toeplitz matrix</purpose>
                    </ref>
                    <ref target="ref/vander.html" name="vander" init="V">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Vandermonde matrix</purpose>
                    </ref>
                    <ref target="ref/wilkinson.html" name="wilkinson" init="W">
                        <ext name="codegen" value="limited"/>
                        <purpose>Wilkinson's eigenvalue test matrix</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="linear-algebra.html">
                <title>Linear Algebra</title>
                <ref target="ref/mldivide.html" name="mldivide" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Solve systems of linear equations Ax = B for x</purpose>
                </ref>
                <ref target="ref/mrdivide.html" name="mrdivide" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Solve systems of linear equations xA = B for x</purpose>
                </ref>
                <ref target="ref/decomposition.html" name="decomposition" init="D">
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Matrix decomposition for solving linear systems</purpose>
                </ref>
                <ref target="ref/lsqminnorm.html" name="lsqminnorm" init="L">
                    <purpose>Minimum norm least-squares solution to linear equation</purpose>
                </ref>
                <ref target="ref/linsolve.html" name="linsolve" init="L">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Solve linear system of equations</purpose>
                </ref>
                <ref target="ref/inv.html" name="inv" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Matrix inverse</purpose>
                </ref>
                <ref target="ref/pinv.html" name="pinv" init="P">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Moore-Penrose pseudoinverse</purpose>
                </ref>
                <ref target="ref/lscov.html" name="lscov" init="L">
                    <ext name="codegen" value="limited"/>
                    <purpose>Least-squares solution in presence of known covariance</purpose>
                </ref>
                <ref target="ref/lsqnonneg.html" name="lsqnonneg" init="L">
                    <ext name="codegen" value="limited"/>
                    <purpose>Solve nonnegative linear least-squares problem</purpose>
                </ref>
                <ref target="ref/sylvester.html" name="sylvester" init="S">
                    <purpose>Solve Sylvester equation AX + XB = C for X</purpose>
                </ref>
                <ref target="ref/eig.html" name="eig" init="E">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Eigenvalues and eigenvectors</purpose>
                </ref>
                <ref target="ref/eigs.html" name="eigs" init="E">
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Subset of eigenvalues and eigenvectors</purpose>
                </ref>
                <ref target="ref/balance.html" name="balance" init="B">
                    <purpose>Diagonal scaling to improve eigenvalue accuracy</purpose>
                </ref>
                <ref target="ref/double.svd.html" name="svd" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Singular value decomposition</purpose>
                </ref>
                <ref target="ref/svds.html" name="svds" init="S">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Subset of singular values and vectors</purpose>
                </ref>
                <ref target="ref/gsvd.html" name="gsvd" init="G">
                    <purpose>Generalized singular value decomposition</purpose>
                </ref>
                <ref target="ref/ordeig.html" name="ordeig" init="O">
                    <purpose>Eigenvalues of quasitriangular matrices</purpose>
                </ref>
                <ref target="ref/ordqz.html" name="ordqz" init="O">
                    <purpose>Reorder eigenvalues in QZ factorization</purpose>
                </ref>
                <ref target="ref/ordschur.html" name="ordschur" init="O">
                    <purpose>Reorder eigenvalues in Schur factorization</purpose>
                </ref>
                <ref target="ref/polyeig.html" name="polyeig" init="P">
                    <ext name="codegen" value="limited"/>
                    <purpose>Polynomial eigenvalue problem</purpose>
                </ref>
                <ref target="ref/qz.html" name="qz" init="Q">
                    <purpose>QZ factorization for generalized eigenvalues</purpose>
                </ref>
                <ref target="ref/hess.html" name="hess" init="H">
                    <purpose>Hessenberg form of matrix</purpose>
                </ref>
                <ref target="ref/schur.html" name="schur" init="S">
                    <ext name="codegen" value="limited"/>
                    <purpose>Schur decomposition</purpose>
                </ref>
                <ref target="ref/rsf2csf.html" name="rsf2csf" init="R">
                    <ext name="codegen" value="limited"/>
                    <purpose>Convert real Schur form to complex Schur form</purpose>
                </ref>
                <ref target="ref/cdf2rdf.html" name="cdf2rdf" init="C">
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Convert complex diagonal form to real block diagonal form</purpose>
                </ref>
                <ref target="ref/lu.html" name="lu" init="L">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>LU matrix factorization</purpose>
                </ref>
                <ref target="ref/ldl.html" name="ldl" init="L">
                    <purpose>Block LDL' factorization for Hermitian indefinite matrices</purpose>
                </ref>
                <ref target="ref/chol.html" name="chol" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Cholesky factorization</purpose>
                </ref>
                <ref target="ref/cholupdate.html" name="cholupdate" init="C">
                    <ext name="codegen" value="limited"/>
                    <purpose>Rank 1 update to Cholesky factorization</purpose>
                </ref>
                <ref target="ref/qr.html" name="qr" init="Q">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>QR decomposition</purpose>
                </ref>
                <ref target="ref/qrdelete.html" name="qrdelete" init="Q">
                    <purpose>Remove column or row from QR factorization</purpose>
                </ref>
                <ref target="ref/qrinsert.html" name="qrinsert" init="Q">
                    <purpose>Insert column or row into QR factorization</purpose>
                </ref>
                <ref target="ref/qrupdate.html" name="qrupdate" init="Q">
                    <ext name="codegen" value="limited"/>
                    <purpose>Rank 1 update to QR factorization</purpose>
                </ref>
                <ref target="ref/planerot.html" name="planerot" init="P">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Givens plane rotation</purpose>
                </ref>
                <ref target="ref/transpose.html" name="transpose" init="T">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Transpose vector or matrix</purpose>
                </ref>
                <ref target="ref/ctranspose.html" name="ctranspose" init="C">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Complex conjugate transpose</purpose>
                </ref>
                <ref target="ref/mtimes.html" name="mtimes" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Matrix multiplication</purpose>
                </ref>
                <ref target="ref/mpower.html" name="mpower" init="M">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Matrix power</purpose>
                </ref>
                <ref target="ref/sqrtm.html" name="sqrtm" init="S">
                    <ext name="codegen" value="limited"/>
                    <purpose>Matrix square root</purpose>
                </ref>
                <ref target="ref/expm.html" name="expm" init="E">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Matrix exponential</purpose>
                </ref>
                <ref target="ref/logm.html" name="logm" init="L">
                    <purpose>Matrix logarithm</purpose>
                </ref>
                <ref target="ref/funm.html" name="funm" init="F">
                    <purpose>Evaluate general matrix function</purpose>
                </ref>
                <ref target="ref/kron.html" name="kron" init="K">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Kronecker tensor product</purpose>
                </ref>
                <ref target="ref/cross.html" name="cross" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Cross product</purpose>
                </ref>
                <ref target="ref/dot.html" name="dot" init="D">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Dot product</purpose>
                </ref>
                <ref target="ref/bandwidth.html" name="bandwidth" init="B">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Lower and upper matrix bandwidth</purpose>
                </ref>
                <ref target="ref/tril.html" name="tril" init="T">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Lower triangular part of matrix</purpose>
                </ref>
                <ref target="ref/triu.html" name="triu" init="T">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Upper triangular part of matrix</purpose>
                </ref>
                <ref target="ref/isbanded.html" name="isbanded" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Determine if matrix is within specific bandwidth</purpose>
                </ref>
                <ref target="ref/isdiag.html" name="isdiag" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Determine if matrix is diagonal</purpose>
                </ref>
                <ref target="ref/ishermitian.html" name="ishermitian" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Determine if matrix is Hermitian or skew-Hermitian</purpose>
                </ref>
                <ref target="ref/issymmetric.html" name="issymmetric" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Determine if matrix is symmetric or skew-symmetric</purpose>
                </ref>
                <ref target="ref/istril.html" name="istril" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Determine if matrix is lower triangular</purpose>
                </ref>
                <ref target="ref/istriu.html" name="istriu" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Determine if matrix is upper triangular</purpose>
                </ref>
                <ref target="ref/norm.html" name="norm" init="N">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Vector and matrix norms</purpose>
                </ref>
                <ref target="ref/normest.html" name="normest" init="N">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>2-norm estimate</purpose>
                </ref>
                <ref target="ref/vecnorm.html" name="vecnorm" init="V">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Vector-wise norm</purpose>
                </ref>
                <ref target="ref/cond.html" name="cond" init="C">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Condition number for inversion</purpose>
                </ref>
                <ref target="ref/condest.html" name="condest" init="C">
                    <purpose>1-norm condition number estimate</purpose>
                </ref>
                <ref target="ref/rcond.html" name="rcond" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Reciprocal condition number</purpose>
                </ref>
                <ref target="ref/condeig.html" name="condeig" init="C">
                    <purpose>Condition number with respect to eigenvalues</purpose>
                </ref>
                <ref target="ref/det.html" name="det" init="D">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Matrix determinant</purpose>
                </ref>
                <ref target="ref/null.html" name="null" init="N">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Null space of matrix</purpose>
                </ref>
                <ref target="ref/orth.html" name="orth" init="O">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Orthonormal basis for range of matrix</purpose>
                </ref>
                <ref target="ref/rank.html" name="rank" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Rank of matrix</purpose>
                </ref>
                <ref target="ref/rref.html" name="rref" init="R">
                    <purpose>Reduced row echelon form (Gauss-Jordan elimination)</purpose>
                </ref>
                <ref target="ref/double.trace.html" name="trace" init="T">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Sum of diagonal elements</purpose>
                </ref>
                <ref target="ref/subspace.html" name="subspace" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Angle between two subspaces</purpose>
                </ref>
                <ref target="ref/decomposition.isillconditioned.html" name="isIllConditioned" init="I" unlisted="y">
                    <purpose>Determine whether matrix is ill conditioned</purpose>
                </ref>
            </cat>
            <cat target="random-number-generation.html">
                <title>Random Number Generation</title>
                <ref target="ref/rand.html" name="rand" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Uniformly distributed random numbers</purpose>
                </ref>
                <ref target="ref/randn.html" name="randn" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Normally distributed random numbers</purpose>
                </ref>
                <ref target="ref/randi.html" name="randi" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Uniformly distributed pseudorandom integers</purpose>
                </ref>
                <ref target="ref/randperm.html" name="randperm" init="R">
                    <ext name="codegen" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Random permutation of integers</purpose>
                </ref>
                <ref target="ref/rng.html" name="rng" init="R">
                    <ext name="codegen" value="limited"/>
                    <purpose>Control random number generator</purpose>
                </ref>
                <ref target="ref/randstream.randstream.html" name="RandStream" init="R">
                    <purpose>Random number stream</purpose>
                </ref>
                <ref target="ref/randstream.html" name="RandStream" init="R" unlisted="y">
                    <purpose>Random number stream</purpose>
                </ref>
                <ref target="ref/randstream.get.html" name="get (RandStream)" init="G" unlisted="y">
                    <purpose>Random stream properties</purpose>
                </ref>
                <ref target="ref/randstream.create.html" name="RandStream.create" init="R" unlisted="y">
                    <purpose>Create random number streams</purpose>
                </ref>
                <ref target="ref/randstream.list.html" name="RandStream.list" init="R" unlisted="y">
                    <purpose>Random number generator algorithms</purpose>
                </ref>
                <ref target="ref/randstream.rand.html" name="rand (RandStream)" init="R" unlisted="y">
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Uniformly distributed random numbers</purpose>
                </ref>
                <ref target="ref/randstream.randi.html" name="randi (RandStream)" init="R" unlisted="y">
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Uniformly distributed pseudorandom integers</purpose>
                </ref>
                <ref target="ref/randstream.randn.html" name="randn (RandStream)" init="R" unlisted="y">
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Normally distributed pseudorandom numbers</purpose>
                </ref>
                <ref target="ref/randstream.randperm.html" name="randperm (RandStream)" init="R" unlisted="y">
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Random permutation</purpose>
                </ref>
                <ref target="ref/randstream.reset.html" name="reset (RandStream)" init="R" unlisted="y">
                    <purpose>Reset random number stream</purpose>
                </ref>
                <ref target="ref/randstream.set.html" name="set (RandStream)" init="S" unlisted="y">
                    <purpose>Set random number stream property</purpose>
                </ref>
                <ref target="ref/randstream.setglobalstream.html" name="RandStream.setGlobalStream" init="R" unlisted="y">
                    <purpose>Set global random number stream</purpose>
                </ref>
                <ref target="ref/randstream.getglobalstream.html" name="RandStream.getGlobalStream" init="R" unlisted="y">
                    <purpose>Current global random number stream</purpose>
                </ref>
            </cat>
            <cat target="interpolation.html">
                <title>Interpolation</title>
                <ref target="ref/interp1.html" name="interp1" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>1-D data interpolation (table lookup)</purpose>
                </ref>
                <ref target="ref/interp2.html" name="interp2" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Interpolation for 2-D gridded data in meshgrid format</purpose>
                </ref>
                <ref target="ref/interp3.html" name="interp3" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Interpolation for 3-D gridded data in meshgrid format</purpose>
                </ref>
                <ref target="ref/interpn.html" name="interpn" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Interpolation for 1-D, 2-D, 3-D, and N-D gridded data in ndgrid format</purpose>
                </ref>
                <ref target="ref/griddedinterpolant.html" name="griddedInterpolant" init="G">
                    <purpose>Gridded data interpolation</purpose>
                </ref>
                <ref target="ref/pchip.html" name="pchip" init="P">
                    <ext name="codegen" value="limited"/>
                    <purpose>Piecewise Cubic Hermite Interpolating Polynomial (PCHIP)</purpose>
                </ref>
                <ref target="ref/makima.html" name="makima" init="M">
                    <purpose>Modified Akima piecewise cubic Hermite interpolation</purpose>
                </ref>
                <ref target="ref/spline.html" name="spline" init="S">
                    <ext name="codegen" value="limited"/>
                    <purpose>Cubic spline data interpolation</purpose>
                </ref>
                <ref target="ref/ppval.html" name="ppval" init="P">
                    <ext name="codegen" value="limited"/>
                    <purpose>Evaluate piecewise polynomial</purpose>
                </ref>
                <ref target="ref/mkpp.html" name="mkpp" init="M">
                    <ext name="codegen" value="limited"/>
                    <purpose>Make piecewise polynomial</purpose>
                </ref>
                <ref target="ref/unmkpp.html" name="unmkpp" init="U">
                    <ext name="codegen" value="limited"/>
                    <purpose>Extract piecewise polynomial details</purpose>
                </ref>
                <ref target="ref/padecoef.html" name="padecoef" init="P">
                    <purpose>Padé approximation of time delays</purpose>
                </ref>
                <ref target="ref/interpft.html" name="interpft" init="I">
                    <purpose>1-D interpolation (FFT method)</purpose>
                </ref>
                <ref target="ref/ndgrid.html" name="ndgrid" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Rectangular grid in N-D space</purpose>
                </ref>
                <ref target="ref/meshgrid.html" name="meshgrid" init="M">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>2-D and 3-D grids</purpose>
                </ref>
                <ref target="ref/griddata.html" name="griddata" init="G">
                    <purpose>Interpolate 2-D or 3-D scattered data</purpose>
                </ref>
                <ref target="ref/griddatan.html" name="griddatan" init="G">
                    <purpose>Interpolate N-D scattered data</purpose>
                </ref>
                <ref target="ref/scatteredinterpolant.html" name="scatteredInterpolant" init="S">
                    <purpose>Interpolate 2-D or 3-D scattered data</purpose>
                </ref>
                <ref target="ref/interp1q.html" name="interp1q" init="I" unlisted="y">
                    <ext name="codegen" value="limited"/>
                    <purpose>Quick 1-D linear interpolation</purpose>
                </ref>
                <ref target="ref/triscatteredinterp.html" name="TriScatteredInterp" init="T" unlisted="y">
                    <purpose>(Not recommended) Interpolate scattered data</purpose>
                </ref>
                <ref target="ref/triscatteredinterp-class.html" name="TriScatteredInterp" init="T" unlisted="y">
                    <purpose>(Not recommended) Interpolate scattered data</purpose>
                </ref>
            </cat>
            <cat target="optimization.html">
                <title>Optimization</title>
                <ref target="ref/fminbnd.html" name="fminbnd" init="F">
                    <ext name="codegen" value="limited"/>
                    <purpose>Find minimum of single-variable function on fixed interval</purpose>
                </ref>
                <ref target="ref/fminsearch.html" name="fminsearch" init="F">
                    <ext name="codegen" value="limited"/>
                    <purpose>Find minimum of unconstrained multivariable function using derivative-free method</purpose>
                </ref>
                <ref target="ref/lsqnonneg.html" name="lsqnonneg" init="L">
                    <ext name="codegen" value="limited"/>
                    <purpose>Solve nonnegative linear least-squares problem</purpose>
                </ref>
                <ref target="ref/fzero.html" name="fzero" init="F">
                    <ext name="codegen" value="limited"/>
                    <purpose>Root of nonlinear function</purpose>
                </ref>
                <ref target="ref/optimget.html" name="optimget" init="O">
                    <ext name="codegen" value="limited"/>
                    <purpose>Optimization options values</purpose>
                </ref>
                <ref target="ref/optimset.html" name="optimset" init="O">
                    <ext name="codegen" value="limited"/>
                    <purpose>Create or modify optimization options structure</purpose>
                </ref>
            </cat>
            <cat target="numerical-integration-and-differential-equations.html">
                <title>Numerical Integration and Differential Equations</title>
                <cat target="ordinary-differential-equations.html">
                    <title>Ordinary Differential Equations</title>
                    <ref target="ref/ode45.html" name="ode45" init="O">
                        <ext name="codegen" value="limited"/>
                        <purpose>Solve nonstiff differential equations — medium order method</purpose>
                    </ref>
                    <ref target="ref/ode23.html" name="ode23" init="O">
                        <ext name="codegen" value="limited"/>
                        <purpose>Solve nonstiff differential equations — low order method</purpose>
                    </ref>
                    <ref target="ref/ode113.html" name="ode113" init="O">
                        <purpose>Solve nonstiff differential equations — variable order method</purpose>
                    </ref>
                    <ref target="ref/ode15s.html" name="ode15s" init="O">
                        <purpose>Solve stiff differential equations and DAEs — variable order method</purpose>
                    </ref>
                    <ref target="ref/ode23s.html" name="ode23s" init="O">
                        <purpose>Solve stiff differential equations — low order method</purpose>
                    </ref>
                    <ref target="ref/ode23t.html" name="ode23t" init="O">
                        <purpose>Solve moderately stiff ODEs and DAEs — trapezoidal rule</purpose>
                    </ref>
                    <ref target="ref/ode23tb.html" name="ode23tb" init="O">
                        <purpose>Solve stiff differential equations — trapezoidal rule + backward differentiation formula</purpose>
                    </ref>
                    <ref target="ref/ode15i.html" name="ode15i" init="O">
                        <purpose>Solve fully implicit differential equations — variable order method</purpose>
                    </ref>
                    <ref target="ref/decic.html" name="decic" init="D">
                        <purpose>Compute consistent initial conditions for ode15i</purpose>
                    </ref>
                    <ref target="ref/odeget.html" name="odeget" init="O">
                        <ext name="codegen" value="limited"/>
                        <purpose>Extract ODE option values</purpose>
                    </ref>
                    <ref target="ref/odeset.html" name="odeset" init="O">
                        <ext name="codegen" value="limited"/>
                        <purpose>Create or modify options structure for ODE and PDE solvers</purpose>
                    </ref>
                    <ref target="ref/deval.html" name="deval" init="D">
                        <purpose>Evaluate differential equation solution structure</purpose>
                    </ref>
                    <ref target="ref/odextend.html" name="odextend" init="O">
                        <purpose>Extend solution to ODE</purpose>
                    </ref>
                </cat>
                <cat target="boundary-value-problems.html">
                    <title>Boundary Value Problems</title>
                    <ref target="ref/bvp4c.html" name="bvp4c" init="B">
                        <purpose>Solve boundary value problem — fourth-order method</purpose>
                    </ref>
                    <ref target="ref/bvp5c.html" name="bvp5c" init="B">
                        <purpose>Solve boundary value problem — fifth-order method</purpose>
                    </ref>
                    <ref target="ref/bvpinit.html" name="bvpinit" init="B">
                        <purpose>Form initial guess for boundary value problem solver</purpose>
                    </ref>
                    <ref target="ref/bvpget.html" name="bvpget" init="B">
                        <purpose>Extract properties from options structure created with bvpset</purpose>
                    </ref>
                    <ref target="ref/bvpset.html" name="bvpset" init="B">
                        <purpose>Create or alter options structure of boundary value problem</purpose>
                    </ref>
                    <ref target="ref/deval.html" name="deval" init="D">
                        <purpose>Evaluate differential equation solution structure</purpose>
                    </ref>
                    <ref target="ref/bvpxtend.html" name="bvpxtend" init="B">
                        <purpose>Form guess structure for extending boundary value solutions</purpose>
                    </ref>
                </cat>
                <cat target="delay-differential-equations.html">
                    <title>Delay Differential Equations</title>
                    <ref target="ref/dde23.html" name="dde23" init="D">
                        <purpose>Solve delay differential equations (DDEs) with constant delays</purpose>
                    </ref>
                    <ref target="ref/ddesd.html" name="ddesd" init="D">
                        <purpose>Solve delay differential equations (DDEs) with general delays</purpose>
                    </ref>
                    <ref target="ref/ddensd.html" name="ddensd" init="D">
                        <purpose>Solve delay differential equations (DDEs) of neutral type</purpose>
                    </ref>
                    <ref target="ref/ddeget.html" name="ddeget" init="D">
                        <purpose>Extract properties from delay differential equations options structure</purpose>
                    </ref>
                    <ref target="ref/ddeset.html" name="ddeset" init="D">
                        <purpose>Create or alter delay differential equations options structure</purpose>
                    </ref>
                    <ref target="ref/deval.html" name="deval" init="D">
                        <purpose>Evaluate differential equation solution structure</purpose>
                    </ref>
                </cat>
                <cat target="partial-differential-equations.html">
                    <title>1-D Partial Differential Equations</title>
                    <ref target="ref/pdepe.html" name="pdepe" init="P">
                        <purpose>Solve 1-D parabolic and elliptic PDEs</purpose>
                    </ref>
                    <ref target="ref/odeget.html" name="odeget" init="O">
                        <ext name="codegen" value="limited"/>
                        <purpose>Extract ODE option values</purpose>
                    </ref>
                    <ref target="ref/odeset.html" name="odeset" init="O">
                        <ext name="codegen" value="limited"/>
                        <purpose>Create or modify options structure for ODE and PDE solvers</purpose>
                    </ref>
                    <ref target="ref/pdeval.html" name="pdeval" init="P">
                        <purpose>Interpolate numerical solution of PDE</purpose>
                    </ref>
                </cat>
                <cat target="numerical-integration-and-differentiation.html">
                    <title>Numerical Integration and Differentiation</title>
                    <ref target="ref/integral.html" name="integral" init="I">
                        <purpose>Numerical integration</purpose>
                    </ref>
                    <ref target="ref/integral2.html" name="integral2" init="I">
                        <purpose>Numerically evaluate double integral</purpose>
                    </ref>
                    <ref target="ref/integral3.html" name="integral3" init="I">
                        <purpose>Numerically evaluate triple integral</purpose>
                    </ref>
                    <ref target="ref/quadgk.html" name="quadgk" init="Q">
                        <ext name="codegen" value="yes"/>
                        <purpose>Numerically evaluate integral — Gauss-Kronrod quadrature</purpose>
                    </ref>
                    <ref target="ref/quad2d.html" name="quad2d" init="Q">
                        <ext name="codegen" value="limited"/>
                        <purpose>Numerically evaluate double integral — tiled method</purpose>
                    </ref>
                    <ref target="ref/cumtrapz.html" name="cumtrapz" init="C">
                        <ext name="codegen" value="yes"/>
                        <purpose>Cumulative trapezoidal numerical integration</purpose>
                    </ref>
                    <ref target="ref/trapz.html" name="trapz" init="T">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Trapezoidal numerical integration</purpose>
                    </ref>
                    <ref target="ref/del2.html" name="del2" init="D">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Discrete Laplacian</purpose>
                    </ref>
                    <ref target="ref/diff.html" name="diff" init="D">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Differences and approximate derivatives</purpose>
                    </ref>
                    <ref target="ref/gradient.html" name="gradient" init="G">
                        <ext name="codegen" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Numerical gradient</purpose>
                    </ref>
                    <ref target="ref/polyint.html" name="polyint" init="P">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Polynomial integration</purpose>
                    </ref>
                    <ref target="ref/polyder.html" name="polyder" init="P">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Polynomial differentiation</purpose>
                    </ref>
                    <ref target="ref/quad.html" name="quad" init="Q" unlisted="y">
                        <purpose>(Not recommended) Numerically evaluate integral, adaptive Simpson quadrature</purpose>
                    </ref>
                    <ref target="ref/quadl.html" name="quadl" init="Q" unlisted="y">
                        <purpose>(Not recommended) Numerically evaluate integral, adaptive Lobatto quadrature</purpose>
                    </ref>
                    <ref target="ref/quadv.html" name="quadv" init="Q" unlisted="y">
                        <purpose>(Not recommended) Vectorized quadrature</purpose>
                    </ref>
                    <ref target="ref/dblquad.html" name="dblquad" init="D" unlisted="y">
                        <purpose>(Not recommended) Numerically evaluate double integral over rectangle</purpose>
                    </ref>
                    <ref target="ref/triplequad.html" name="triplequad" init="T" unlisted="y">
                        <purpose>(Not recommended) Numerically evaluate triple integral</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="fourier-analysis-and-filtering.html">
                <title>Fourier Analysis and Filtering</title>
                <ref target="ref/fft.html" name="fft" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Fast Fourier transform</purpose>
                </ref>
                <ref target="ref/fft2.html" name="fft2" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>2-D fast Fourier transform</purpose>
                </ref>
                <ref target="ref/fftn.html" name="fftn" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>N-D fast Fourier transform</purpose>
                </ref>
                <ref target="ref/double.nufft.html" name="nufft" init="N">
                    <purpose>Nonuniform fast Fourier transform</purpose>
                </ref>
                <ref target="ref/double.nufftn.html" name="nufftn" init="N">
                    <purpose>N-D nonuniform fast Fourier transform</purpose>
                </ref>
                <ref target="ref/fftshift.html" name="fftshift" init="F">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Shift zero-frequency component to center of spectrum</purpose>
                </ref>
                <ref target="ref/fftw.html" name="fftw" init="F">
                    <ext name="codegen" value="limited"/>
                    <purpose>Define method for determining FFT algorithm</purpose>
                </ref>
                <ref target="ref/ifft.html" name="ifft" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Inverse fast Fourier transform</purpose>
                </ref>
                <ref target="ref/ifft2.html" name="ifft2" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>2-D inverse fast Fourier transform</purpose>
                </ref>
                <ref target="ref/ifftn.html" name="ifftn" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Multidimensional inverse fast Fourier transform</purpose>
                </ref>
                <ref target="ref/ifftshift.html" name="ifftshift" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Inverse zero-frequency shift</purpose>
                </ref>
                <ref target="ref/nextpow2.html" name="nextpow2" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Exponent of next higher power of 2</purpose>
                </ref>
                <ref target="ref/interpft.html" name="interpft" init="I">
                    <purpose>1-D interpolation (FFT method)</purpose>
                </ref>
                <ref target="ref/conv.html" name="conv" init="C">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Convolution and polynomial multiplication</purpose>
                </ref>
                <ref target="ref/conv2.html" name="conv2" init="C">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>2-D convolution</purpose>
                </ref>
                <ref target="ref/convn.html" name="convn" init="C">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>N-D convolution</purpose>
                </ref>
                <ref target="ref/deconv.html" name="deconv" init="D">
                    <ext name="codegen" value="limited"/>
                    <purpose>Deconvolution and polynomial division</purpose>
                </ref>
                <ref target="ref/filter.html" name="filter" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <ext name="tall" value="limited"/>
                    <purpose>1-D digital filter</purpose>
                </ref>
                <ref target="ref/filter2.html" name="filter2" init="F">
                    <ext name="codegen" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>2-D digital filter</purpose>
                </ref>
                <ref target="ref/ss2tf.html" name="ss2tf" init="S">
                    <purpose>Convert state-space representation to transfer function</purpose>
                </ref>
                <ref target="ref/padecoef.html" name="padecoef" init="P">
                    <purpose>Padé approximation of time delays</purpose>
                </ref>
            </cat>
            <cat target="sparse-matrices.html">
                <title>Sparse Matrices</title>
                <ref target="ref/spalloc.html" name="spalloc" init="S">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Allocate space for sparse matrix</purpose>
                </ref>
                <ref target="ref/spdiags.html" name="spdiags" init="S">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Extract nonzero diagonals and create sparse band and diagonal matrices</purpose>
                </ref>
                <ref target="ref/speye.html" name="speye" init="S">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Sparse identity matrix</purpose>
                </ref>
                <ref target="ref/sprand.html" name="sprand" init="S">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Sparse uniformly distributed random matrix</purpose>
                </ref>
                <ref target="ref/sprandn.html" name="sprandn" init="S">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Sparse normally distributed random matrix</purpose>
                </ref>
                <ref target="ref/sprandsym.html" name="sprandsym" init="S">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Sparse symmetric random matrix</purpose>
                </ref>
                <ref target="ref/sparse.html" name="sparse" init="S">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Create sparse matrix</purpose>
                </ref>
                <ref target="ref/spconvert.html" name="spconvert" init="S">
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Import from sparse matrix external format</purpose>
                </ref>
                <ref target="ref/issparse.html" name="issparse" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Determine whether input is sparse</purpose>
                </ref>
                <ref target="ref/nnz.html" name="nnz" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Number of nonzero matrix elements</purpose>
                </ref>
                <ref target="ref/nonzeros.html" name="nonzeros" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Nonzero matrix elements</purpose>
                </ref>
                <ref target="ref/nzmax.html" name="nzmax" init="N">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Amount of storage allocated for nonzero matrix elements</purpose>
                </ref>
                <ref target="ref/spfun.html" name="spfun" init="S">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Apply function to nonzero sparse matrix elements</purpose>
                </ref>
                <ref target="ref/spones.html" name="spones" init="S">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Replace nonzero sparse matrix elements with ones</purpose>
                </ref>
                <ref target="ref/spparms.html" name="spparms" init="S">
                    <purpose>Set parameters for sparse matrix routines</purpose>
                </ref>
                <ref target="ref/spy.html" name="spy" init="S">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Visualize sparsity pattern of matrix</purpose>
                </ref>
                <ref target="ref/find.html" name="find" init="F">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="tall" value="limited"/>
                    <purpose>Find indices and values of nonzero elements</purpose>
                </ref>
                <ref target="ref/full.html" name="full" init="F">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>Convert sparse matrix to full storage</purpose>
                </ref>
                <ref target="ref/dissect.html" name="dissect" init="D">
                    <purpose>Nested dissection permutation</purpose>
                </ref>
                <ref target="ref/amd.html" name="amd" init="A">
                    <purpose>Approximate minimum degree permutation</purpose>
                </ref>
                <ref target="ref/colamd.html" name="colamd" init="C">
                    <purpose>Column approximate minimum degree permutation</purpose>
                </ref>
                <ref target="ref/colperm.html" name="colperm" init="C">
                    <purpose>Sparse column permutation based on nonzero count</purpose>
                </ref>
                <ref target="ref/dmperm.html" name="dmperm" init="D">
                    <purpose>Dulmage-Mendelsohn decomposition</purpose>
                </ref>
                <ref target="ref/randperm.html" name="randperm" init="R">
                    <ext name="codegen" value="yes"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Random permutation of integers</purpose>
                </ref>
                <ref target="ref/symamd.html" name="symamd" init="S">
                    <purpose>Symmetric approximate minimum degree permutation</purpose>
                </ref>
                <ref target="ref/symrcm.html" name="symrcm" init="S">
                    <purpose>Sparse reverse Cuthill-McKee ordering</purpose>
                </ref>
                <ref target="ref/pcg.html" name="pcg" init="P">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — preconditioned conjugate gradients method</purpose>
                </ref>
                <ref target="ref/lsqr.html" name="lsqr" init="L">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — least-squares method</purpose>
                </ref>
                <ref target="ref/minres.html" name="minres" init="M">
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Solve system of linear equations — minimum residual method</purpose>
                </ref>
                <ref target="ref/symmlq.html" name="symmlq" init="S">
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Solve system of linear equations — symmetric LQ method</purpose>
                </ref>
                <ref target="ref/gmres.html" name="gmres" init="G">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — generalized minimum residual method</purpose>
                </ref>
                <ref target="ref/bicg.html" name="bicg" init="B">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — biconjugate gradients method</purpose>
                </ref>
                <ref target="ref/bicgstab.html" name="bicgstab" init="B">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — stabilized biconjugate gradients method</purpose>
                </ref>
                <ref target="ref/bicgstabl.html" name="bicgstabl" init="B">
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Solve system of linear equations — stabilized biconjugate gradients (l) method</purpose>
                </ref>
                <ref target="ref/cgs.html" name="cgs" init="C">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — conjugate gradients squared method</purpose>
                </ref>
                <ref target="ref/qmr.html" name="qmr" init="Q">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — quasi-minimal residual method</purpose>
                </ref>
                <ref target="ref/tfqmr.html" name="tfqmr" init="T">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Solve system of linear equations — transpose-free quasi-minimal residual method</purpose>
                </ref>
                <ref target="ref/equilibrate.html" name="equilibrate" init="E">
                    <purpose>Matrix scaling for improved conditioning</purpose>
                </ref>
                <ref target="ref/ichol.html" name="ichol" init="I">
                    <purpose>Incomplete Cholesky factorization</purpose>
                </ref>
                <ref target="ref/ilu.html" name="ilu" init="I">
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Incomplete LU factorization</purpose>
                </ref>
                <ref target="ref/eigs.html" name="eigs" init="E">
                    <ext name="distributedarrays" value="limited"/>
                    <purpose>Subset of eigenvalues and eigenvectors</purpose>
                </ref>
                <ref target="ref/svds.html" name="svds" init="S">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Subset of singular values and vectors</purpose>
                </ref>
                <ref target="ref/normest.html" name="normest" init="N">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <purpose>2-norm estimate</purpose>
                </ref>
                <ref target="ref/condest.html" name="condest" init="C">
                    <purpose>1-norm condition number estimate</purpose>
                </ref>
                <ref target="ref/sprank.html" name="sprank" init="S">
                    <purpose>Structural rank</purpose>
                </ref>
                <ref target="ref/etree.html" name="etree" init="E">
                    <purpose>Elimination tree</purpose>
                </ref>
                <ref target="ref/symbfact.html" name="symbfact" init="S">
                    <purpose>Symbolic factorization analysis</purpose>
                </ref>
                <ref target="ref/spaugment.html" name="spaugment" init="S">
                    <purpose>Form least-squares augmented system</purpose>
                </ref>
                <ref target="ref/dmperm.html" name="dmperm" init="D">
                    <purpose>Dulmage-Mendelsohn decomposition</purpose>
                </ref>
                <ref target="ref/etreeplot.html" name="etreeplot" init="E">
                    <purpose>Plot elimination tree</purpose>
                </ref>
                <ref target="ref/treelayout.html" name="treelayout" init="T">
                    <purpose>Lay out tree or forest</purpose>
                </ref>
                <ref target="ref/treeplot.html" name="treeplot" init="T">
                    <purpose>Plot picture of tree</purpose>
                </ref>
                <ref target="ref/gplot.html" name="gplot" init="G">
                    <purpose>Plot nodes and edges in adjacency matrix</purpose>
                </ref>
                <ref target="ref/unmesh.html" name="unmesh" init="U">
                    <purpose>Convert edge matrix to coordinate and Laplacian matrices</purpose>
                </ref>
            </cat>
            <cat target="graph-and-network-algorithms.html">
                <title>Graph and Network Algorithms</title>
                <ref target="ref/graph.html" name="graph" init="G">
                    <purpose>Graph with undirected edges</purpose>
                </ref>
                <ref target="ref/digraph.html" name="digraph" init="D">
                    <purpose>Graph with directed edges</purpose>
                </ref>
                <ref target="ref/graph.addnode.html" name="addnode" init="A">
                    <purpose>Add new node to graph</purpose>
                </ref>
                <ref target="ref/graph.rmnode.html" name="rmnode" init="R">
                    <purpose>Remove node from graph</purpose>
                </ref>
                <ref target="ref/graph.addedge.html" name="addedge" init="A">
                    <purpose>Add new edge to graph</purpose>
                </ref>
                <ref target="ref/graph.rmedge.html" name="rmedge" init="R">
                    <purpose>Remove edge from graph</purpose>
                </ref>
                <ref target="ref/digraph.flipedge.html" name="flipedge" init="F">
                    <purpose>Reverse edge directions</purpose>
                </ref>
                <ref target="ref/graph.numnodes.html" name="numnodes" init="N">
                    <purpose>Number of nodes in graph</purpose>
                </ref>
                <ref target="ref/graph.numedges.html" name="numedges" init="N">
                    <purpose>Number of edges in graph</purpose>
                </ref>
                <ref target="ref/graph.findnode.html" name="findnode" init="F">
                    <purpose>Locate node in graph</purpose>
                </ref>
                <ref target="ref/graph.findedge.html" name="findedge" init="F">
                    <purpose>Locate edge in graph</purpose>
                </ref>
                <ref target="ref/graph.edgecount.html" name="edgecount" init="E">
                    <purpose>Number of edges between two nodes</purpose>
                </ref>
                <ref target="ref/graph.reordernodes.html" name="reordernodes" init="R">
                    <purpose>Reorder graph nodes</purpose>
                </ref>
                <ref target="ref/graph.subgraph.html" name="subgraph" init="S">
                    <purpose>Extract subgraph</purpose>
                </ref>
                <ref target="ref/graph.centrality.html" name="centrality" init="C">
                    <purpose>Measure node importance</purpose>
                </ref>
                <ref target="ref/graph.conncomp.html" name="conncomp" init="C">
                    <purpose>Connected graph components</purpose>
                </ref>
                <ref target="ref/graph.biconncomp.html" name="biconncomp" init="B">
                    <purpose>Biconnected graph components</purpose>
                </ref>
                <ref target="ref/digraph.condensation.html" name="condensation" init="C">
                    <purpose>Graph condensation</purpose>
                </ref>
                <ref target="ref/graph.bctree.html" name="bctree" init="B">
                    <purpose>Block-cut tree graph</purpose>
                </ref>
                <ref target="ref/digraph.toposort.html" name="toposort" init="T">
                    <purpose>Topological order of directed acyclic graph</purpose>
                </ref>
                <ref target="ref/digraph.isdag.html" name="isdag" init="I">
                    <purpose>Determine if graph is acyclic</purpose>
                </ref>
                <ref target="ref/digraph.transreduction.html" name="transreduction" init="T">
                    <purpose>Transitive reduction</purpose>
                </ref>
                <ref target="ref/digraph.transclosure.html" name="transclosure" init="T">
                    <purpose>Transitive closure</purpose>
                </ref>
                <ref target="ref/graph.isisomorphic.html" name="isisomorphic" init="I">
                    <purpose>Determine whether two graphs are isomorphic</purpose>
                </ref>
                <ref target="ref/graph.isomorphism.html" name="isomorphism" init="I">
                    <purpose>Compute isomorphism between two graphs</purpose>
                </ref>
                <ref target="ref/graph.ismultigraph.html" name="ismultigraph" init="I">
                    <purpose>Determine whether graph has multiple edges</purpose>
                </ref>
                <ref target="ref/graph.simplify.html" name="simplify" init="S">
                    <purpose>Reduce multigraph to simple graph</purpose>
                </ref>
                <ref target="ref/graph.bfsearch.html" name="bfsearch" init="B">
                    <purpose>Breadth-first graph search</purpose>
                </ref>
                <ref target="ref/graph.dfsearch.html" name="dfsearch" init="D">
                    <purpose>Depth-first graph search</purpose>
                </ref>
                <ref target="ref/graph.shortestpath.html" name="shortestpath" init="S">
                    <purpose>Shortest path between two single nodes</purpose>
                </ref>
                <ref target="ref/graph.shortestpathtree.html" name="shortestpathtree" init="S">
                    <purpose>Shortest path tree from node</purpose>
                </ref>
                <ref target="ref/graph.distances.html" name="distances" init="D">
                    <purpose>Shortest path distances of all node pairs</purpose>
                </ref>
                <ref target="ref/graph.maxflow.html" name="maxflow" init="M">
                    <purpose>Maximum flow in graph</purpose>
                </ref>
                <ref target="ref/graph.minspantree.html" name="minspantree" init="M">
                    <purpose>Minimum spanning tree of graph</purpose>
                </ref>
                <ref target="ref/graph.adjacency.html" name="adjacency" init="A">
                    <purpose>Graph adjacency matrix</purpose>
                </ref>
                <ref target="ref/graph.incidence.html" name="incidence" init="I">
                    <purpose>Graph incidence matrix</purpose>
                </ref>
                <ref target="ref/graph.laplacian.html" name="laplacian" init="L">
                    <purpose>Graph Laplacian matrix</purpose>
                </ref>
                <ref target="ref/graph.degree.html" name="degree" init="D">
                    <purpose>Degree of graph nodes</purpose>
                </ref>
                <ref target="ref/graph.neighbors.html" name="neighbors" init="N">
                    <purpose>Neighbors of graph node</purpose>
                </ref>
                <ref target="ref/graph.nearest.html" name="nearest" init="N">
                    <purpose>Nearest neighbors within radius</purpose>
                </ref>
                <ref target="ref/digraph.indegree.html" name="indegree" init="I">
                    <purpose>In-degree of nodes</purpose>
                </ref>
                <ref target="ref/digraph.outdegree.html" name="outdegree" init="O">
                    <purpose>Out-degree of nodes</purpose>
                </ref>
                <ref target="ref/digraph.predecessors.html" name="predecessors" init="P">
                    <purpose>Node predecessors</purpose>
                </ref>
                <ref target="ref/digraph.successors.html" name="successors" init="S">
                    <purpose>Node successors</purpose>
                </ref>
                <ref target="ref/digraph.inedges.html" name="inedges" init="I">
                    <purpose>Incoming edges to node</purpose>
                </ref>
                <ref target="ref/graph.outedges.html" name="outedges" init="O">
                    <purpose>Outgoing edges from node</purpose>
                </ref>
                <ref target="ref/graph.plot.html" name="plot" init="P">
                    <purpose>Plot graph nodes and edges</purpose>
                </ref>
                <ref target="ref/matlab.graphics.chart.primitive.graphplot.labeledge.html" name="labeledge" init="L">
                    <purpose>Label graph edges</purpose>
                </ref>
                <ref target="ref/matlab.graphics.chart.primitive.graphplot.labelnode.html" name="labelnode" init="L">
                    <purpose>Label graph nodes</purpose>
                </ref>
                <ref target="ref/matlab.graphics.chart.primitive.graphplot.layout.html" name="layout" init="L">
                    <purpose>Change layout of graph plot</purpose>
                </ref>
                <ref target="ref/matlab.graphics.chart.primitive.graphplot.highlight.html" name="highlight" init="H">
                    <purpose>Highlight nodes and edges in plotted graph</purpose>
                </ref>
                <ref target="ref/matlab.graphics.chart.primitive.graphplot.html" name="GraphPlot" init="G">
                    <purpose>Graph plot for directed and undirected graphs</purpose>
                </ref>
            </cat>
            <cat target="computational-geometry.html">
                <title>Computational Geometry</title>
                <cat target="triangulation-representation.html">
                    <title>Triangulation Representation</title>
                    <ref target="ref/triangulation.html" name="triangulation" init="T">
                        <purpose>Triangulation in 2-D or 3-D</purpose>
                    </ref>
                    <ref target="ref/triangulation.barycentrictocartesian.html" name="barycentricToCartesian" init="B">
                        <purpose>Convert coordinates from barycentric to Cartesian</purpose>
                    </ref>
                    <ref target="ref/triangulation.cartesiantobarycentric.html" name="cartesianToBarycentric" init="C">
                        <purpose>Convert coordinates from Cartesian to barycentric</purpose>
                    </ref>
                    <ref target="ref/triangulation.circumcenter.html" name="circumcenter" init="C">
                        <purpose>Circumcenter of triangle or tetrahedron</purpose>
                    </ref>
                    <ref target="ref/triangulation.edgeattachments.html" name="edgeAttachments" init="E">
                        <purpose>Triangles or tetrahedra attached to specified edge</purpose>
                    </ref>
                    <ref target="ref/triangulation.edges.html" name="edges" init="E">
                        <purpose>Triangulation edges</purpose>
                    </ref>
                    <ref target="ref/triangulation.facenormal.html" name="faceNormal" init="F">
                        <purpose>Triangulation unit normal vectors</purpose>
                    </ref>
                    <ref target="ref/triangulation.featureedges.html" name="featureEdges" init="F">
                        <purpose>Handle sharp edges of triangulation</purpose>
                    </ref>
                    <ref target="ref/triangulation.freeboundary.html" name="freeBoundary" init="F">
                        <purpose>Free boundary facets</purpose>
                    </ref>
                    <ref target="ref/triangulation.incenter.html" name="incenter" init="I">
                        <purpose>Incenter of triangulation elements</purpose>
                    </ref>
                    <ref target="ref/triangulation.isconnected.html" name="isConnected" init="I">
                        <purpose>Test if two vertices are connected by an edge</purpose>
                    </ref>
                    <ref target="ref/triangulation.nearestneighbor.html" name="nearestNeighbor" init="N">
                        <purpose>Closest vertex</purpose>
                    </ref>
                    <ref target="ref/triangulation.neighbors.html" name="neighbors" init="N">
                        <purpose>Triangle or tetrahedron neighbors</purpose>
                    </ref>
                    <ref target="ref/triangulation.pointlocation.html" name="pointLocation" init="P">
                        <purpose>Triangle or tetrahedron enclosing point</purpose>
                    </ref>
                    <ref target="ref/triangulation.size.html" name="size" init="S">
                        <purpose>Size of triangulation connectivity list</purpose>
                    </ref>
                    <ref target="ref/triangulation.vertexattachments.html" name="vertexAttachments" init="V">
                        <purpose>Triangles or tetrahedra attached to vertex</purpose>
                    </ref>
                    <ref target="ref/triangulation.vertexnormal.html" name="vertexNormal" init="V">
                        <purpose>Triangulation vertex normal</purpose>
                    </ref>
                    <ref target="ref/boundaryshape.html" name="boundaryshape" init="B">
                        <purpose>Create polyshape from 2-D triangulation</purpose>
                    </ref>
                    <ref target="ref/stlread.html" name="stlread" init="S">
                        <purpose>Create triangulation from STL file</purpose>
                    </ref>
                    <ref target="ref/stlwrite.html" name="stlwrite" init="S">
                        <purpose>Create STL file from triangulation</purpose>
                    </ref>
                    <ref target="ref/tetramesh.html" name="tetramesh" init="T">
                        <purpose>Tetrahedron mesh plot</purpose>
                    </ref>
                    <ref target="ref/trimesh.html" name="trimesh" init="T">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Triangular mesh plot</purpose>
                    </ref>
                    <ref target="ref/triplot.html" name="triplot" init="T">
                        <purpose>2-D triangular plot</purpose>
                    </ref>
                    <ref target="ref/trisurf.html" name="trisurf" init="T">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Triangular surface plot</purpose>
                    </ref>
                    <ref target="ref/trirep.html" name="TriRep" init="T" unlisted="y">
                        <purpose>(Not recommended) Triangulation representation</purpose>
                    </ref>
                    <ref target="ref/trirep-class.html" name="TriRep" init="T" unlisted="y">
                        <purpose>(Not recommended) Triangulation representation</purpose>
                    </ref>
                    <ref target="ref/trirep.barytocart.html" name="baryToCart" init="B" unlisted="y">
                        <purpose>(Not recommended) Convert point coordinates from barycentric to Cartesian</purpose>
                    </ref>
                    <ref target="ref/trirep.carttobary.html" name="cartToBary" init="C" unlisted="y">
                        <purpose>(Not recommended) Convert point coordinates from Cartesian to barycentric</purpose>
                    </ref>
                    <ref target="ref/trirep.circumcenters.html" name="circumcenters" init="C" unlisted="y">
                        <purpose>(Not recommended) Circumcenters of specified simplices</purpose>
                    </ref>
                    <ref target="ref/trirep.edgeattachments.html" name="edgeAttachments" init="E" unlisted="y">
                        <purpose>(Not recommended) Simplices attached to specified edges</purpose>
                    </ref>
                    <ref target="ref/trirep.edges.html" name="edges" init="E" unlisted="y">
                        <purpose>(Not recommended) Triangulation edges</purpose>
                    </ref>
                    <ref target="ref/trirep.facenormals.html" name="faceNormals" init="F" unlisted="y">
                        <purpose>(Not recommended) Unit normals to specified triangles</purpose>
                    </ref>
                    <ref target="ref/trirep.featureedges.html" name="featureEdges" init="F" unlisted="y">
                        <purpose>(Not recommended) Sharp edges of surface triangulation</purpose>
                    </ref>
                    <ref target="ref/trirep.freeboundary.html" name="freeBoundary" init="F" unlisted="y">
                        <purpose>(Not recommended) Facets referenced by only one simplex</purpose>
                    </ref>
                    <ref target="ref/trirep.incenters.html" name="incenters" init="I" unlisted="y">
                        <purpose>(Not recommended) Incenters of specified simplices</purpose>
                    </ref>
                    <ref target="ref/trirep.isedge.html" name="isEdge" init="I" unlisted="y">
                        <purpose>(Not recommended) Test if vertices are joined by edge</purpose>
                    </ref>
                    <ref target="ref/trirep.neighbors.html" name="neighbors" init="N" unlisted="y">
                        <purpose>(Not recommended) Simplex neighbor information</purpose>
                    </ref>
                    <ref target="ref/trirep.size.html" name="size" init="S" unlisted="y">
                        <purpose>(Not recommended) Size of triangulation matrix</purpose>
                    </ref>
                    <ref target="ref/trirep.vertexattachments.html" name="vertexAttachments" init="V" unlisted="y">
                        <purpose>(Not recommended) Return simplices attached to specified vertices</purpose>
                    </ref>
                </cat>
                <cat target="delaunay-triangulation.html">
                    <title>Delaunay Triangulation</title>
                    <ref target="ref/delaunay.html" name="delaunay" init="D">
                        <purpose>Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/delaunayn.html" name="delaunayn" init="D">
                        <purpose>N-D Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/delaunaytriangulation.html" name="delaunayTriangulation" init="D">
                        <purpose>Delaunay triangulation in 2-D and 3-D</purpose>
                    </ref>
                    <ref target="ref/delaunaytriangulation.convexhull.html" name="convexHull" init="C">
                        <purpose>Convex hull of Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/delaunaytriangulation.isinterior.html" name="isInterior" init="I">
                        <purpose>Query interior points of Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/delaunaytriangulation.voronoidiagram.html" name="voronoiDiagram" init="V">
                        <purpose>Voronoi diagram of Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/triangulation.barycentrictocartesian.html" name="barycentricToCartesian" init="B">
                        <purpose>Convert coordinates from barycentric to Cartesian</purpose>
                    </ref>
                    <ref target="ref/triangulation.cartesiantobarycentric.html" name="cartesianToBarycentric" init="C">
                        <purpose>Convert coordinates from Cartesian to barycentric</purpose>
                    </ref>
                    <ref target="ref/triangulation.circumcenter.html" name="circumcenter" init="C">
                        <purpose>Circumcenter of triangle or tetrahedron</purpose>
                    </ref>
                    <ref target="ref/triangulation.edgeattachments.html" name="edgeAttachments" init="E">
                        <purpose>Triangles or tetrahedra attached to specified edge</purpose>
                    </ref>
                    <ref target="ref/triangulation.edges.html" name="edges" init="E">
                        <purpose>Triangulation edges</purpose>
                    </ref>
                    <ref target="ref/triangulation.facenormal.html" name="faceNormal" init="F">
                        <purpose>Triangulation unit normal vectors</purpose>
                    </ref>
                    <ref target="ref/triangulation.featureedges.html" name="featureEdges" init="F">
                        <purpose>Handle sharp edges of triangulation</purpose>
                    </ref>
                    <ref target="ref/triangulation.freeboundary.html" name="freeBoundary" init="F">
                        <purpose>Free boundary facets</purpose>
                    </ref>
                    <ref target="ref/triangulation.incenter.html" name="incenter" init="I">
                        <purpose>Incenter of triangulation elements</purpose>
                    </ref>
                    <ref target="ref/triangulation.isconnected.html" name="isConnected" init="I">
                        <purpose>Test if two vertices are connected by an edge</purpose>
                    </ref>
                    <ref target="ref/triangulation.nearestneighbor.html" name="nearestNeighbor" init="N">
                        <purpose>Closest vertex</purpose>
                    </ref>
                    <ref target="ref/triangulation.neighbors.html" name="neighbors" init="N">
                        <purpose>Triangle or tetrahedron neighbors</purpose>
                    </ref>
                    <ref target="ref/triangulation.pointlocation.html" name="pointLocation" init="P">
                        <purpose>Triangle or tetrahedron enclosing point</purpose>
                    </ref>
                    <ref target="ref/triangulation.size.html" name="size" init="S">
                        <purpose>Size of triangulation connectivity list</purpose>
                    </ref>
                    <ref target="ref/triangulation.vertexattachments.html" name="vertexAttachments" init="V">
                        <purpose>Triangles or tetrahedra attached to vertex</purpose>
                    </ref>
                    <ref target="ref/triangulation.vertexnormal.html" name="vertexNormal" init="V">
                        <purpose>Triangulation vertex normal</purpose>
                    </ref>
                    <ref target="ref/boundaryshape.html" name="boundaryshape" init="B">
                        <purpose>Create polyshape from 2-D triangulation</purpose>
                    </ref>
                    <ref target="ref/stlwrite.html" name="stlwrite" init="S">
                        <purpose>Create STL file from triangulation</purpose>
                    </ref>
                    <ref target="ref/tetramesh.html" name="tetramesh" init="T">
                        <purpose>Tetrahedron mesh plot</purpose>
                    </ref>
                    <ref target="ref/trimesh.html" name="trimesh" init="T">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Triangular mesh plot</purpose>
                    </ref>
                    <ref target="ref/triplot.html" name="triplot" init="T">
                        <purpose>2-D triangular plot</purpose>
                    </ref>
                    <ref target="ref/trisurf.html" name="trisurf" init="T">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Triangular surface plot</purpose>
                    </ref>
                    <ref target="ref/delaunaytri.html" name="DelaunayTri" init="D" unlisted="y">
                        <purpose>(Not recommended) Construct Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/delaunaytri-class.html" name="DelaunayTri" init="D" unlisted="y">
                        <purpose>(Not recommended) Delaunay triangulation in 2-D and 3-D</purpose>
                    </ref>
                    <ref target="ref/delaunaytri.inoutstatus.html" name="inOutStatus" init="I" unlisted="y">
                        <purpose>(Not recommended) Status of triangles in 2-D constrained Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/delaunaytri.nearestneighbor.html" name="nearestNeighbor" init="N" unlisted="y">
                        <purpose>(Not recommended) Point closest to specified location</purpose>
                    </ref>
                    <ref target="ref/delaunaytri.pointlocation.html" name="pointLocation" init="P" unlisted="y">
                        <purpose>(Not recommended) Simplex containing specified location</purpose>
                    </ref>
                    <ref target="ref/delaunaytri.convexhull.html" name="convexHull" init="C" unlisted="y">
                        <purpose>(Not recommended) Convex hull</purpose>
                    </ref>
                    <ref target="ref/delaunaytri.voronoidiagram.html" name="voronoiDiagram" init="V" unlisted="y">
                        <purpose>(Not recommended) Voronoi diagram</purpose>
                    </ref>
                </cat>
                <cat target="spatial-search.html">
                    <title>Spatial Search</title>
                    <ref target="ref/triangulation.html" name="triangulation" init="T">
                        <purpose>Triangulation in 2-D or 3-D</purpose>
                    </ref>
                    <ref target="ref/delaunaytriangulation.html" name="delaunayTriangulation" init="D">
                        <purpose>Delaunay triangulation in 2-D and 3-D</purpose>
                    </ref>
                    <ref target="ref/dsearchn.html" name="dsearchn" init="D">
                        <purpose>Nearest point search</purpose>
                    </ref>
                    <ref target="ref/tsearchn.html" name="tsearchn" init="T">
                        <purpose>N-D closest simplex search</purpose>
                    </ref>
                    <ref target="ref/delaunay.html" name="delaunay" init="D">
                        <purpose>Delaunay triangulation</purpose>
                    </ref>
                    <ref target="ref/delaunayn.html" name="delaunayn" init="D">
                        <purpose>N-D Delaunay triangulation</purpose>
                    </ref>
                </cat>
                <cat target="2-d-and-3-d-bounding-regions.html">
                    <title>Bounding Regions</title>
                    <ref target="ref/boundary.html" name="boundary" init="B">
                        <purpose>Boundary of a set of points in 2-D or 3-D</purpose>
                    </ref>
                    <ref target="ref/convhull.html" name="convhull" init="C">
                        <ext name="codegen" value="limited"/>
                        <purpose>Convex hull</purpose>
                    </ref>
                    <ref target="ref/convhulln.html" name="convhulln" init="C">
                        <purpose>N-D convex hull</purpose>
                    </ref>
                    <ref target="ref/alphashape.html" name="alphaShape" init="A">
                        <purpose>Polygons and polyhedra from points in 2-D and 3-D</purpose>
                    </ref>
                    <ref target="ref/alphashape.alphaspectrum.html" name="alphaSpectrum" init="A">
                        <purpose>Alpha values giving distinct alpha shapes</purpose>
                    </ref>
                    <ref target="ref/alphashape.criticalalpha.html" name="criticalAlpha" init="C">
                        <purpose>Alpha radius defining critical transition in shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.numregions.html" name="numRegions" init="N">
                        <purpose>Number of regions in alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.inshape.html" name="inShape" init="I">
                        <purpose>Determine if point is inside alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.alphatriangulation.html" name="alphaTriangulation" init="A">
                        <purpose>Triangulation that fills alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.boundaryfacets.html" name="boundaryFacets" init="B">
                        <purpose>Boundary facets of alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.perimeter.html" name="perimeter" init="P">
                        <purpose>Perimeter of 2-D alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.area.html" name="area" init="A">
                        <purpose>Area of 2-D alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.surfacearea.html" name="surfaceArea" init="S">
                        <purpose>Surface area of 3-D alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.volume.html" name="volume" init="V">
                        <purpose>Volume of 3-D alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.plot.html" name="plot" init="P">
                        <purpose>Plot alpha shape</purpose>
                    </ref>
                    <ref target="ref/alphashape.nearestneighbor.html" name="nearestNeighbor" init="N">
                        <purpose>Determine nearest alpha shape boundary point</purpose>
                    </ref>
                </cat>
                <cat target="voronoi-diagram.html">
                    <title>Voronoi Diagram</title>
                    <ref target="ref/voronoi.html" name="voronoi" init="V">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Voronoi diagram</purpose>
                    </ref>
                    <ref target="ref/voronoin.html" name="voronoin" init="V">
                        <purpose>N-D Voronoi diagram</purpose>
                    </ref>
                    <ref target="ref/patch.html" name="patch" init="P">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot one or more filled polygonal regions</purpose>
                    </ref>
                </cat>
                <cat target="elementary-polygons.html">
                    <title>Elementary Polygons</title>
                    <ref target="ref/boundaryshape.html" name="boundaryshape" init="B">
                        <purpose>Create polyshape from 2-D triangulation</purpose>
                    </ref>
                    <ref target="ref/inpolygon.html" name="inpolygon" init="I">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Points located inside or on edge of polygonal region</purpose>
                    </ref>
                    <ref target="ref/nsidedpoly.html" name="nsidedpoly" init="N">
                        <purpose>Regular polygon</purpose>
                    </ref>
                    <ref target="ref/polyarea.html" name="polyarea" init="P">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Area of polygon</purpose>
                    </ref>
                    <ref target="ref/polyshape.polybuffer.html" name="polybuffer" init="P">
                        <purpose>Create buffer around points, lines, or polyshape objects</purpose>
                    </ref>
                    <ref target="ref/rectint.html" name="rectint" init="R">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Rectangle intersection area</purpose>
                    </ref>
                    <ref target="ref/polyshape.html" name="polyshape" init="P">
                        <purpose>2-D polygons</purpose>
                    </ref>
                    <ref target="ref/polyshape.addboundary.html" name="addboundary" init="A">
                        <purpose>Add polyshape boundary</purpose>
                    </ref>
                    <ref target="ref/polyshape.polybuffer.html" name="polybuffer" init="P">
                        <purpose>Create buffer around points, lines, or polyshape objects</purpose>
                    </ref>
                    <ref target="ref/polyshape.rmboundary.html" name="rmboundary" init="R">
                        <purpose>Remove polyshape boundary</purpose>
                    </ref>
                    <ref target="ref/polyshape.rmholes.html" name="rmholes" init="R">
                        <purpose>Remove holes in polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.rmslivers.html" name="rmslivers" init="R">
                        <purpose>Remove polyshape boundary outliers</purpose>
                    </ref>
                    <ref target="ref/polyshape.rotate.html" name="rotate" init="R">
                        <purpose>Rotate polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.scale.html" name="scale" init="S">
                        <purpose>Scale polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.simplify.html" name="simplify" init="S">
                        <purpose>Simplify polyshape boundaries</purpose>
                    </ref>
                    <ref target="ref/polyshape.sortboundaries.html" name="sortboundaries" init="S">
                        <purpose>Sort polyshape boundaries</purpose>
                    </ref>
                    <ref target="ref/polyshape.sortregions.html" name="sortregions" init="S">
                        <purpose>Sort polyshape regions</purpose>
                    </ref>
                    <ref target="ref/polyshape.translate.html" name="translate" init="T">
                        <purpose>Translate polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.boundary.html" name="boundary" init="B">
                        <purpose>Vertex coordinates of polyshape boundary</purpose>
                    </ref>
                    <ref target="ref/polyshape.holes.html" name="holes" init="H">
                        <purpose>Convert polyshape hole boundaries to array of polyshape objects</purpose>
                    </ref>
                    <ref target="ref/polyshape.ishole.html" name="ishole" init="I">
                        <purpose>Determine if polyshape boundary is a hole</purpose>
                    </ref>
                    <ref target="ref/polyshape.isinterior.html" name="isinterior" init="I">
                        <purpose>Query points inside polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.issimplified.html" name="issimplified" init="I">
                        <purpose>Determine if polyshape is well-defined</purpose>
                    </ref>
                    <ref target="ref/polyshape.nearestvertex.html" name="nearestvertex" init="N">
                        <purpose>Query nearest polyshape vertex</purpose>
                    </ref>
                    <ref target="ref/polyshape.numboundaries.html" name="numboundaries" init="N">
                        <purpose>Number of polyshape boundaries</purpose>
                    </ref>
                    <ref target="ref/polyshape.numsides.html" name="numsides" init="N">
                        <purpose>Number of polyshape sides</purpose>
                    </ref>
                    <ref target="ref/polyshape.overlaps.html" name="overlaps" init="O">
                        <purpose>Determine whether polyshape objects overlap</purpose>
                    </ref>
                    <ref target="ref/polyshape.plot.html" name="plot" init="P">
                        <purpose>Plot polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.regions.html" name="regions" init="R">
                        <purpose>Access polyshape regions</purpose>
                    </ref>
                    <ref target="ref/polyshape.area.html" name="area" init="A">
                        <purpose>Area of polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.boundingbox.html" name="boundingbox" init="B">
                        <purpose>Bounding box of polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.centroid.html" name="centroid" init="C">
                        <purpose>Centroid of polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.convhull.html" name="convhull" init="C">
                        <purpose>Convex hull of polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.turningdist.html" name="turningdist" init="T">
                        <purpose>Compute turning distance between polyshape objects</purpose>
                    </ref>
                    <ref target="ref/polyshape.triangulation.html" name="triangulation" init="T">
                        <purpose>Triangulate polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.perimeter.html" name="perimeter" init="P">
                        <purpose>Perimeter of polyshape</purpose>
                    </ref>
                    <ref target="ref/polyshape.intersect.html" name="intersect" init="I">
                        <purpose>Intersection of polyshape objects</purpose>
                    </ref>
                    <ref target="ref/polyshape.subtract.html" name="subtract" init="S">
                        <purpose>Difference of two polyshape objects</purpose>
                    </ref>
                    <ref target="ref/polyshape.union.html" name="union" init="U">
                        <purpose>Union of polyshape objects</purpose>
                    </ref>
                    <ref target="ref/polyshape.xor.html" name="xor" init="X">
                        <purpose>Exclusive OR of two polyshape objects</purpose>
                    </ref>
                </cat>
            </cat>
        </cat>
        <cat target="graphics.html">
            <title>Graphics</title>
            <cat target="2-and-3d-plots.html">
                <title>2-D and 3-D Plots</title>
                <cat target="line-plots.html">
                    <title>Line Plots</title>
                    <ref target="ref/plot.html" name="plot" init="P">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>2-D line plot</purpose>
                    </ref>
                    <ref target="ref/plot3.html" name="plot3" init="P">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>3-D point or line plot</purpose>
                    </ref>
                    <ref target="ref/stairs.html" name="stairs" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Stairstep graph</purpose>
                    </ref>
                    <ref target="ref/errorbar.html" name="errorbar" init="E">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Line plot with error bars</purpose>
                    </ref>
                    <ref target="ref/area.html" name="area" init="A">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Filled area 2-D plot</purpose>
                    </ref>
                    <ref target="ref/stackedplot.html" name="stackedplot" init="S">
                        <purpose>Stacked plot of several variables with common x-axis</purpose>
                    </ref>
                    <ref target="ref/loglog.html" name="loglog" init="L">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Log-log scale plot</purpose>
                    </ref>
                    <ref target="ref/semilogx.html" name="semilogx" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Semilog plot (x-axis has log scale)</purpose>
                    </ref>
                    <ref target="ref/semilogy.html" name="semilogy" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Semilog plot (y-axis has log scale)</purpose>
                    </ref>
                    <ref target="ref/fplot.html" name="fplot" init="F">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot expression or function</purpose>
                    </ref>
                    <ref target="ref/fimplicit.html" name="fimplicit" init="F">
                        <purpose>Plot implicit function</purpose>
                    </ref>
                    <ref target="ref/fplot3.html" name="fplot3" init="F">
                        <purpose>3-D parametric curve plotter</purpose>
                    </ref>
                    <ref target="ref/ezplot.html" name="ezplot" init="E" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>(Not recommended) Easy-to-use function plotter</purpose>
                    </ref>
                    <ref target="ref/ezplot3.html" name="ezplot3" init="E" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>(Not recommended) Easy-to-use 3-D parametric curve plotter</purpose>
                    </ref>
                    <ref target="ref/linespec.html" name="LineSpec (Line Specification)" init="L">
                        <purpose>Line specification</purpose>
                    </ref>
                    <ref target="ref/colorspec.html" name="ColorSpec (Color Specification)" init="C">
                        <purpose>Color specification</purpose>
                    </ref>
                </cat>
                <cat target="pie-charts-bar-plots-and-histograms.html">
                    <title>Data Distribution Plots</title>
                    <ref target="ref/matlab.graphics.chart.primitive.histogram.html" name="histogram" init="H">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Histogram plot</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chart.primitive.histogram2.html" name="histogram2" init="H">
                        <ext name="tall" value="limited"/>
                        <purpose>Bivariate histogram plot</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chart.primitive.histogram.morebins.html" name="morebins" init="M">
                        <purpose>Increase number of histogram bins</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chart.primitive.histogram.fewerbins.html" name="fewerbins" init="F">
                        <purpose>Decrease number of histogram bins</purpose>
                    </ref>
                    <ref target="ref/histcounts.html" name="histcounts" init="H">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Histogram bin counts</purpose>
                    </ref>
                    <ref target="ref/histcounts2.html" name="histcounts2" init="H">
                        <ext name="codegen" value="limited"/>
                        <purpose>Bivariate histogram bin counts</purpose>
                    </ref>
                    <ref target="ref/boxchart.html" name="boxchart" init="B">
                        <purpose>Create box chart (box plot)</purpose>
                    </ref>
                    <ref target="ref/scatter.html" name="scatter" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Scatter plot</purpose>
                    </ref>
                    <ref target="ref/scatter3.html" name="scatter3" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>3-D scatter plot</purpose>
                    </ref>
                    <ref target="ref/binscatter.html" name="binscatter" init="B">
                        <ext name="tall" value="yes"/>
                        <purpose>Binned scatter plot</purpose>
                    </ref>
                    <ref target="ref/scatterhistogram.html" name="scatterhistogram" init="S">
                        <purpose>Create scatter plot with histograms</purpose>
                    </ref>
                    <ref target="ref/spy.html" name="spy" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Visualize sparsity pattern of matrix</purpose>
                    </ref>
                    <ref target="ref/plotmatrix.html" name="plotmatrix" init="P">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Scatter plot matrix</purpose>
                    </ref>
                    <ref target="ref/parallelplot.html" name="parallelplot" init="P">
                        <purpose>Create parallel coordinates plot</purpose>
                    </ref>
                    <ref target="ref/pie.html" name="pie" init="P">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Pie chart</purpose>
                    </ref>
                    <ref target="ref/pie3.html" name="pie3" init="P">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>3-D pie chart</purpose>
                    </ref>
                    <ref target="ref/heatmap.html" name="heatmap" init="H">
                        <purpose>Create heatmap chart</purpose>
                    </ref>
                    <ref target="ref/sortx.html" name="sortx" init="S">
                        <purpose>Sort elements in heatmap row</purpose>
                    </ref>
                    <ref target="ref/sorty.html" name="sorty" init="S">
                        <purpose>Sort elements in heatmap column</purpose>
                    </ref>
                    <ref target="ref/wordcloud.html" name="wordcloud" init="W">
                        <ext name="tall" value="limited"/>
                        <purpose>Create word cloud chart from text data</purpose>
                    </ref>
                    <ref target="ref/hist.html" name="hist" init="H" unlisted="y">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Histogram plot (not recommended; use histogram)</purpose>
                    </ref>
                    <ref target="ref/histc.html" name="histc" init="H" unlisted="y">
                        <ext name="codegen" value="limited"/>
                        <purpose>Histogram bin counts (not recommended; use histcounts)</purpose>
                    </ref>
                    <ref target="ref/rose.html" name="rose" init="R" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Angle histogram plot</purpose>
                    </ref>
                </cat>
                <cat target="stem-and-stair-plots.html">
                    <title>Discrete Data Plots</title>
                    <ref target="ref/bar.html" name="bar" init="B">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Bar graph</purpose>
                    </ref>
                    <ref target="ref/barh.html" name="barh" init="B">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Horizontal bar graph</purpose>
                    </ref>
                    <ref target="ref/bar3.html" name="bar3" init="B">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot 3-D bar graph</purpose>
                    </ref>
                    <ref target="ref/bar3h.html" name="bar3h" init="B">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot horizontal 3-D bar graph</purpose>
                    </ref>
                    <ref target="ref/pareto.html" name="pareto" init="P">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Pareto chart</purpose>
                    </ref>
                    <ref target="ref/stem.html" name="stem" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot discrete sequence data</purpose>
                    </ref>
                    <ref target="ref/stem3.html" name="stem3" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot 3-D discrete sequence data</purpose>
                    </ref>
                    <ref target="ref/scatter.html" name="scatter" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="tall" value="limited"/>
                        <purpose>Scatter plot</purpose>
                    </ref>
                    <ref target="ref/scatter3.html" name="scatter3" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>3-D scatter plot</purpose>
                    </ref>
                    <ref target="ref/stairs.html" name="stairs" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Stairstep graph</purpose>
                    </ref>
                </cat>
                <cat target="geographic-plots.html">
                    <title>Geographic Plots</title>
                    <ref target="ref/geoplot.html" name="geoplot" init="G">
                        <purpose>Plot line in geographic coordinates</purpose>
                    </ref>
                    <ref target="ref/geoscatter.html" name="geoscatter" init="G">
                        <purpose>Scatter chart in geographic coordinates</purpose>
                    </ref>
                    <ref target="ref/geobubble.html" name="geobubble" init="G">
                        <purpose>Visualize data values at specific geographic locations</purpose>
                    </ref>
                    <ref target="ref/geodensityplot.html" name="geodensityplot" init="G">
                        <purpose>Geographic density plot</purpose>
                    </ref>
                    <ref target="ref/geobasemap.html" name="geobasemap" init="G">
                        <purpose>Set or query basemap</purpose>
                    </ref>
                    <ref target="ref/geolimits.html" name="geolimits" init="G">
                        <purpose>Set or query geographic limits</purpose>
                    </ref>
                    <ref target="ref/geoaxes.html" name="geoaxes" init="G">
                        <purpose>Create geographic axes</purpose>
                    </ref>
                    <ref target="ref/geotickformat.html" name="geotickformat" init="G">
                        <purpose>Set or query geographic tick label format</purpose>
                    </ref>
                </cat>
                <cat target="polar-plots.html">
                    <title>Polar Plots</title>
                    <ref target="ref/polarplot.html" name="polarplot" init="P">
                        <purpose>Plot line in polar coordinates</purpose>
                    </ref>
                    <ref target="ref/polarscatter.html" name="polarscatter" init="P">
                        <purpose>Scatter chart in polar coordinates</purpose>
                    </ref>
                    <ref target="ref/polarhistogram.html" name="polarhistogram" init="P">
                        <purpose>Histogram chart in polar coordinates</purpose>
                    </ref>
                    <ref target="ref/compass.html" name="compass" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot arrows emanating from origin</purpose>
                    </ref>
                    <ref target="ref/ezpolar.html" name="ezpolar" init="E">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Easy-to-use polar coordinate plotter</purpose>
                    </ref>
                    <ref target="ref/rlim.html" name="rlim" init="R">
                        <purpose>Set or query r-axis limits for polar axes</purpose>
                    </ref>
                    <ref target="ref/thetalim.html" name="thetalim" init="T">
                        <purpose>Set or query theta-axis limits for polar axes</purpose>
                    </ref>
                    <ref target="ref/rticks.html" name="rticks" init="R">
                        <purpose>Set or query r-axis tick values</purpose>
                    </ref>
                    <ref target="ref/thetaticks.html" name="thetaticks" init="T">
                        <purpose>Set or query theta-axis tick values</purpose>
                    </ref>
                    <ref target="ref/rticklabels.html" name="rticklabels" init="R">
                        <purpose>Set or query r-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/thetaticklabels.html" name="thetaticklabels" init="T">
                        <purpose>Set or query theta-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/rtickformat.html" name="rtickformat" init="R">
                        <purpose>Specify r-axis tick label format</purpose>
                    </ref>
                    <ref target="ref/thetatickformat.html" name="thetatickformat" init="T">
                        <purpose>Specify theta-axis tick label format</purpose>
                    </ref>
                    <ref target="ref/rtickangle.html" name="rtickangle" init="R">
                        <purpose>Rotate r-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/polaraxes.html" name="polaraxes" init="P">
                        <purpose>Create polar axes</purpose>
                    </ref>
                    <ref target="ref/rose.html" name="rose" init="R" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Angle histogram plot</purpose>
                    </ref>
                    <ref target="ref/polar.html" name="polar" init="P" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>(Not recommended) Polar coordinate plot</purpose>
                    </ref>
                </cat>
                <cat target="contour-plots-1.html">
                    <title>Contour Plots</title>
                    <ref target="ref/contour.html" name="contour" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Contour plot of matrix</purpose>
                    </ref>
                    <ref target="ref/contourf.html" name="contourf" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Filled 2-D contour plot</purpose>
                    </ref>
                    <ref target="ref/contourc.html" name="contourc" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Low-level contour plot computation</purpose>
                    </ref>
                    <ref target="ref/contour3.html" name="contour3" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>3-D contour plot</purpose>
                    </ref>
                    <ref target="ref/contourslice.html" name="contourslice" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Draw contours in volume slice planes</purpose>
                    </ref>
                    <ref target="ref/clabel.html" name="clabel" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Label contour plot elevation</purpose>
                    </ref>
                    <ref target="ref/fcontour.html" name="fcontour" init="F">
                        <purpose>Plot contours</purpose>
                    </ref>
                    <ref target="ref/ezcontour.html" name="ezcontour" init="E" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>(Not recommended) Easy-to-use contour plotter</purpose>
                    </ref>
                    <ref target="ref/ezcontourf.html" name="ezcontourf" init="E" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>(Not recommended) Easy-to-use filled contour plotter</purpose>
                    </ref>
                </cat>
                <cat target="vector-fields.html">
                    <title>Vector Fields</title>
                    <ref target="ref/feather.html" name="feather" init="F">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot velocity vectors</purpose>
                    </ref>
                    <ref target="ref/quiver.html" name="quiver" init="Q">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Quiver or velocity plot</purpose>
                    </ref>
                    <ref target="ref/compass.html" name="compass" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot arrows emanating from origin</purpose>
                    </ref>
                    <ref target="ref/quiver3.html" name="quiver3" init="Q">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>3-D quiver or velocity plot</purpose>
                    </ref>
                    <ref target="ref/streamslice.html" name="streamslice" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot streamlines in slice planes</purpose>
                    </ref>
                    <ref target="ref/streamline.html" name="streamline" init="S">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Plot streamlines from 2-D or 3-D vector data</purpose>
                    </ref>
                </cat>
                <cat target="surfaces-polygons-and-volumes.html">
                    <title>Surfaces, Volumes, and Polygons</title>
                    <cat target="surface-and-mesh-plots-1.html">
                        <title>Surface and Mesh Plots</title>
                        <ref target="ref/surf.html" name="surf" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Surface plot</purpose>
                        </ref>
                        <ref target="ref/surfc.html" name="surfc" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Contour plot under surface plot</purpose>
                        </ref>
                        <ref target="ref/surface.html" name="surface" init="S">
                            <purpose>Primitive surface plot</purpose>
                        </ref>
                        <ref target="ref/surfl.html" name="surfl" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Surface plot with colormap-based lighting</purpose>
                        </ref>
                        <ref target="ref/surfnorm.html" name="surfnorm" init="S">
                            <purpose>Surface normals</purpose>
                        </ref>
                        <ref target="ref/mesh.html" name="mesh" init="M">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Mesh surface plot</purpose>
                        </ref>
                        <ref target="ref/meshc.html" name="meshc" init="M">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Contour plot under mesh surface plot</purpose>
                        </ref>
                        <ref target="ref/meshz.html" name="meshz" init="M">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Mesh surface plot with curtain</purpose>
                        </ref>
                        <ref target="ref/hidden.html" name="hidden" init="H">
                            <purpose>Remove hidden lines from mesh plot</purpose>
                        </ref>
                        <ref target="ref/fsurf.html" name="fsurf" init="F">
                            <purpose>Plot 3-D surface</purpose>
                        </ref>
                        <ref target="ref/fmesh.html" name="fmesh" init="F">
                            <purpose>Plot 3-D mesh</purpose>
                        </ref>
                        <ref target="ref/fimplicit3.html" name="fimplicit3" init="F">
                            <purpose>Plot 3-D implicit function</purpose>
                        </ref>
                        <ref target="ref/waterfall.html" name="waterfall" init="W">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Waterfall plot</purpose>
                        </ref>
                        <ref target="ref/ribbon.html" name="ribbon" init="R">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Ribbon plot</purpose>
                        </ref>
                        <ref target="ref/contour3.html" name="contour3" init="C">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>3-D contour plot</purpose>
                        </ref>
                        <ref target="ref/peaks.html" name="peaks" init="P">
                            <purpose>Example function of two variables</purpose>
                        </ref>
                        <ref target="ref/cylinder.html" name="cylinder" init="C">
                            <purpose>Create cylinder</purpose>
                        </ref>
                        <ref target="ref/ellipsoid.html" name="ellipsoid" init="E">
                            <purpose>Generate ellipsoid</purpose>
                        </ref>
                        <ref target="ref/sphere.html" name="sphere" init="S">
                            <purpose>Create sphere</purpose>
                        </ref>
                        <ref target="ref/pcolor.html" name="pcolor" init="P">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Pseudocolor plot</purpose>
                        </ref>
                        <ref target="ref/surf2patch.html" name="surf2patch" init="S">
                            <purpose>Convert surface data to patch data</purpose>
                        </ref>
                        <ref target="ref/ezsurf.html" name="ezsurf" init="E" unlisted="y">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>(Not recommended) Easy-to-use 3-D colored surface plotter</purpose>
                        </ref>
                        <ref target="ref/ezsurfc.html" name="ezsurfc" init="E" unlisted="y">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>(Not recommended) Easy-to-use combination surface/contour plotter</purpose>
                        </ref>
                        <ref target="ref/ezmesh.html" name="ezmesh" init="E" unlisted="y">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>(Not recommended) Easy-to-use 3-D mesh plotter</purpose>
                        </ref>
                        <ref target="ref/ezmeshc.html" name="ezmeshc" init="E" unlisted="y">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>(Not recommended) Easy-to-use combination mesh/contour plotter</purpose>
                        </ref>
                    </cat>
                    <cat target="volume-visualization.html">
                        <title>Volume Visualization</title>
                        <ref target="ref/contourslice.html" name="contourslice" init="C">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Draw contours in volume slice planes</purpose>
                        </ref>
                        <ref target="ref/flow.html" name="flow" init="F">
                            <purpose>Simple function of three variables</purpose>
                        </ref>
                        <ref target="ref/isocaps.html" name="isocaps" init="I">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Compute isosurface end-cap geometry</purpose>
                        </ref>
                        <ref target="ref/isocolors.html" name="isocolors" init="I">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Calculate isosurface and patch colors</purpose>
                        </ref>
                        <ref target="ref/isonormals.html" name="isonormals" init="I">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Compute normals of isosurface vertices</purpose>
                        </ref>
                        <ref target="ref/isosurface.html" name="isosurface" init="I">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Extract isosurface data from volume data</purpose>
                        </ref>
                        <ref target="ref/reducepatch.html" name="reducepatch" init="R">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Reduce number of patch faces</purpose>
                        </ref>
                        <ref target="ref/reducevolume.html" name="reducevolume" init="R">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Reduce number of elements in volume data set</purpose>
                        </ref>
                        <ref target="ref/shrinkfaces.html" name="shrinkfaces" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Reduce size of patch faces</purpose>
                        </ref>
                        <ref target="ref/slice.html" name="slice" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Volume slice planes</purpose>
                        </ref>
                        <ref target="ref/smooth3.html" name="smooth3" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Smooth 3-D data</purpose>
                        </ref>
                        <ref target="ref/subvolume.html" name="subvolume" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Extract subset of volume data set</purpose>
                        </ref>
                        <ref target="ref/volumebounds.html" name="volumebounds" init="V">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Coordinate and color limits for volume data</purpose>
                        </ref>
                        <ref target="ref/coneplot.html" name="coneplot" init="C">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Plot velocity vectors as cones in 3-D vector field</purpose>
                        </ref>
                        <ref target="ref/curl.html" name="curl" init="C">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Compute curl and angular velocity of vector field</purpose>
                        </ref>
                        <ref target="ref/divergence.html" name="divergence" init="D">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Compute divergence of vector field</purpose>
                        </ref>
                        <ref target="ref/interpstreamspeed.html" name="interpstreamspeed" init="I">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Interpolate stream-line vertices from flow speed</purpose>
                        </ref>
                        <ref target="ref/stream2.html" name="stream2" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Compute 2-D streamline data</purpose>
                        </ref>
                        <ref target="ref/stream3.html" name="stream3" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Compute 3-D streamline data</purpose>
                        </ref>
                        <ref target="ref/streamline.html" name="streamline" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Plot streamlines from 2-D or 3-D vector data</purpose>
                        </ref>
                        <ref target="ref/streamparticles.html" name="streamparticles" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Plot stream particles</purpose>
                        </ref>
                        <ref target="ref/streamribbon.html" name="streamribbon" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>3-D stream ribbon plot from vector volume data</purpose>
                        </ref>
                        <ref target="ref/streamslice.html" name="streamslice" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Plot streamlines in slice planes</purpose>
                        </ref>
                        <ref target="ref/streamtube.html" name="streamtube" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Create 3-D stream tube plot</purpose>
                        </ref>
                    </cat>
                    <cat target="geometry.html">
                        <title>Polygons</title>
                        <ref target="ref/fill.html" name="fill" init="F">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Filled 2-D polygons</purpose>
                        </ref>
                        <ref target="ref/fill3.html" name="fill3" init="F">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Filled 3-D polygons</purpose>
                        </ref>
                        <ref target="ref/patch.html" name="patch" init="P">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <purpose>Plot one or more filled polygonal regions</purpose>
                        </ref>
                        <ref target="ref/surf2patch.html" name="surf2patch" init="S">
                            <purpose>Convert surface data to patch data</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="animation-1.html">
                    <title>Animation</title>
                    <ref target="ref/movie.html" name="movie" init="M">
                        <purpose>Play recorded movie frames</purpose>
                    </ref>
                    <ref target="ref/getframe.html" name="getframe" init="G">
                        <purpose>Capture axes or figure as movie frame</purpose>
                    </ref>
                    <ref target="ref/frame2im.html" name="frame2im" init="F">
                        <purpose>Return image data associated with movie frame</purpose>
                    </ref>
                    <ref target="ref/im2frame.html" name="im2frame" init="I">
                        <purpose>Convert image to movie frame</purpose>
                    </ref>
                    <ref target="ref/animatedline.html" name="animatedline" init="A">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Create animated line</purpose>
                    </ref>
                    <ref target="ref/addpoints.html" name="addpoints" init="A">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Add points to animated line</purpose>
                    </ref>
                    <ref target="ref/getpoints.html" name="getpoints" init="G">
                        <purpose>Return points that define animated line</purpose>
                    </ref>
                    <ref target="ref/clearpoints.html" name="clearpoints" init="C">
                        <purpose>Clear points from animated line</purpose>
                    </ref>
                    <ref target="ref/comet.html" name="comet" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>2-D comet plot</purpose>
                    </ref>
                    <ref target="ref/comet3.html" name="comet3" init="C">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>3-D comet plot</purpose>
                    </ref>
                    <ref target="ref/drawnow.html" name="drawnow" init="D">
                        <purpose>Update figures and process callbacks</purpose>
                    </ref>
                    <ref target="ref/refreshdata.html" name="refreshdata" init="R">
                        <purpose>Refresh charted data</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="formatting-and-annotation.html">
                <title>Formatting and Annotation</title>
                <cat target="titles-and-labels.html">
                    <title>Labels and Annotations</title>
                    <ref target="ref/title.html" name="title" init="T">
                        <purpose>Add title</purpose>
                    </ref>
                    <ref target="ref/sgtitle.html" name="sgtitle" init="S">
                        <purpose>Add title to subplot grid</purpose>
                    </ref>
                    <ref target="ref/xlabel.html" name="xlabel" init="X">
                        <purpose>Label x-axis</purpose>
                    </ref>
                    <ref target="ref/ylabel.html" name="ylabel" init="Y">
                        <purpose>Label y-axis</purpose>
                    </ref>
                    <ref target="ref/zlabel.html" name="zlabel" init="Z">
                        <purpose>Label z-axis</purpose>
                    </ref>
                    <ref target="ref/legend.html" name="legend" init="L">
                        <purpose>Add legend to axes</purpose>
                    </ref>
                    <ref target="ref/text.html" name="text" init="T">
                        <purpose>Add text descriptions to data points</purpose>
                    </ref>
                    <ref target="ref/gtext.html" name="gtext" init="G">
                        <purpose>Add text to figure using mouse</purpose>
                    </ref>
                    <ref target="ref/xline.html" name="xline" init="X">
                        <purpose>Vertical line with constant x-value</purpose>
                    </ref>
                    <ref target="ref/yline.html" name="yline" init="Y">
                        <purpose>Horizontal line with constant y-value</purpose>
                    </ref>
                    <ref target="ref/annotation.html" name="annotation" init="A">
                        <purpose>Create annotations</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.datatip.datatip.html" name="datatip" init="D">
                        <purpose>Create data tip</purpose>
                    </ref>
                    <ref target="ref/line.html" name="line" init="L">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>Create primitive line</purpose>
                    </ref>
                    <ref target="ref/rectangle.html" name="rectangle" init="R">
                        <purpose>Create rectangle with sharp or curved corners</purpose>
                    </ref>
                    <ref target="ref/texlabel.html" name="texlabel" init="T">
                        <purpose>Format text with TeX characters</purpose>
                    </ref>
                    <ref target="ref/ginput.html" name="ginput" init="G">
                        <purpose>Identify axes coordinates</purpose>
                    </ref>
                </cat>
                <cat target="axes.html">
                    <title>Axes Appearance</title>
                    <ref target="ref/xlim.html" name="xlim" init="X">
                        <purpose>Set or query x-axis limits</purpose>
                    </ref>
                    <ref target="ref/ylim.html" name="ylim" init="Y">
                        <purpose>Set or query y-axis limits</purpose>
                    </ref>
                    <ref target="ref/zlim.html" name="zlim" init="Z">
                        <purpose>Set or query z-axis limits</purpose>
                    </ref>
                    <ref target="ref/axis.html" name="axis" init="A">
                        <purpose>Set axis limits and aspect ratios</purpose>
                    </ref>
                    <ref target="ref/box.html" name="box" init="B">
                        <purpose>Display axes outline</purpose>
                    </ref>
                    <ref target="ref/daspect.html" name="daspect" init="D">
                        <purpose>Control data unit length along each axis</purpose>
                    </ref>
                    <ref target="ref/pbaspect.html" name="pbaspect" init="P">
                        <purpose>Control relative lengths of each axis</purpose>
                    </ref>
                    <ref target="ref/grid.html" name="grid" init="G">
                        <purpose>Display or hide axes grid lines</purpose>
                    </ref>
                    <ref target="ref/xticks.html" name="xticks" init="X">
                        <purpose>Set or query x-axis tick values</purpose>
                    </ref>
                    <ref target="ref/yticks.html" name="yticks" init="Y">
                        <purpose>Set or query y-axis tick values</purpose>
                    </ref>
                    <ref target="ref/zticks.html" name="zticks" init="Z">
                        <purpose>Set or query z-axis tick values</purpose>
                    </ref>
                    <ref target="ref/xticklabels.html" name="xticklabels" init="X">
                        <purpose>Set or query x-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/yticklabels.html" name="yticklabels" init="Y">
                        <purpose>Set or query y-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/zticklabels.html" name="zticklabels" init="Z">
                        <purpose>Set or query z-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/xtickformat.html" name="xtickformat" init="X">
                        <purpose>Specify x-axis tick label format</purpose>
                    </ref>
                    <ref target="ref/ytickformat.html" name="ytickformat" init="Y">
                        <purpose>Specify y-axis tick label format</purpose>
                    </ref>
                    <ref target="ref/ztickformat.html" name="ztickformat" init="Z">
                        <purpose>Specify z-axis tick label format</purpose>
                    </ref>
                    <ref target="ref/xtickangle.html" name="xtickangle" init="X">
                        <purpose>Rotate x-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/ytickangle.html" name="ytickangle" init="Y">
                        <purpose>Rotate y-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/ztickangle.html" name="ztickangle" init="Z">
                        <purpose>Rotate z-axis tick labels</purpose>
                    </ref>
                    <ref target="ref/datetick.html" name="datetick" init="D">
                        <purpose>Date formatted tick labels</purpose>
                    </ref>
                    <ref target="ref/ruler2num.html" name="ruler2num" init="R">
                        <purpose>Convert data from specific ruler to numeric data</purpose>
                    </ref>
                    <ref target="ref/num2ruler.html" name="num2ruler" init="N">
                        <purpose>Convert numeric data for use with specific ruler</purpose>
                    </ref>
                    <ref target="ref/hold.html" name="hold" init="H">
                        <purpose>Retain current plot when adding new plots</purpose>
                    </ref>
                    <ref target="ref/yyaxis.html" name="yyaxis" init="Y">
                        <purpose>Create chart with two y-axes</purpose>
                    </ref>
                    <ref target="ref/legend.html" name="legend" init="L">
                        <purpose>Add legend to axes</purpose>
                    </ref>
                    <ref target="ref/colororder.html" name="colororder" init="C">
                        <purpose>Set color order for visualizing multiple data series</purpose>
                    </ref>
                    <ref target="ref/tiledlayout.html" name="tiledlayout" init="T">
                        <purpose>Create tiled chart layout</purpose>
                    </ref>
                    <ref target="ref/nexttile.html" name="nexttile" init="N">
                        <purpose>Create axes in tiled chart layout</purpose>
                    </ref>
                    <ref target="ref/subplot.html" name="subplot" init="S">
                        <purpose>Create axes in tiled positions</purpose>
                    </ref>
                    <ref target="ref/cla.html" name="cla" init="C">
                        <purpose>Clear axes</purpose>
                    </ref>
                    <ref target="ref/axes.html" name="axes" init="A">
                        <purpose>Create Cartesian axes</purpose>
                    </ref>
                    <ref target="ref/figure.html" name="figure" init="F">
                        <purpose>Create figure window</purpose>
                    </ref>
                    <ref target="ref/plotyy.html" name="plotyy" init="P" unlisted="y">
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <purpose>(Not recommended) Create graph with two y-axes</purpose>
                    </ref>
                </cat>
                <cat target="colors-1.html">
                    <title>Colormaps</title>
                    <ref target="ref/colormap.html" name="colormap" init="C">
                        <purpose>View and set current colormap</purpose>
                    </ref>
                    <ref target="ref/colorbar.html" name="colorbar" init="C">
                        <purpose>Colorbar showing color scale</purpose>
                    </ref>
                    <ref target="ref/rgbplot.html" name="rgbplot" init="R">
                        <purpose>Plot colormap</purpose>
                    </ref>
                    <ref target="ref/brighten.html" name="brighten" init="B">
                        <purpose>Brighten or darken colormap</purpose>
                    </ref>
                    <ref target="ref/contrast.html" name="contrast" init="C">
                        <purpose>Create grayscale colormap to enhance image contrast</purpose>
                    </ref>
                    <ref target="ref/caxis.html" name="caxis" init="C">
                        <purpose>Set colormap limits</purpose>
                    </ref>
                    <ref target="ref/spinmap.html" name="spinmap" init="S">
                        <purpose>Rotate colormap colors</purpose>
                    </ref>
                    <ref target="ref/hsv2rgb.html" name="hsv2rgb" init="H">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Convert HSV colors to RGB</purpose>
                    </ref>
                    <ref target="ref/rgb2hsv.html" name="rgb2hsv" init="R">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Convert RGB colors to HSV</purpose>
                    </ref>
                    <ref target="ref/parula.html" name="parula" init="P">
                        <purpose>Parula colormap array</purpose>
                    </ref>
                    <ref target="ref/jet.html" name="jet" init="J">
                        <purpose>Jet colormap array</purpose>
                    </ref>
                    <ref target="ref/hsv.html" name="hsv" init="H">
                        <purpose>HSV colormap array</purpose>
                    </ref>
                    <ref target="ref/hot.html" name="hot" init="H">
                        <purpose>Hot colormap array</purpose>
                    </ref>
                    <ref target="ref/cool.html" name="cool" init="C">
                        <purpose>Cool colormap array</purpose>
                    </ref>
                    <ref target="ref/spring.html" name="spring" init="S">
                        <purpose>Spring colormap array</purpose>
                    </ref>
                    <ref target="ref/summer.html" name="summer" init="S">
                        <purpose>Summer colormap array</purpose>
                    </ref>
                    <ref target="ref/autumn.html" name="autumn" init="A">
                        <purpose>Autumn colormap array</purpose>
                    </ref>
                    <ref target="ref/winter.html" name="winter" init="W">
                        <purpose>Winter colormap array</purpose>
                    </ref>
                    <ref target="ref/gray.html" name="gray" init="G">
                        <purpose>Gray colormap array</purpose>
                    </ref>
                    <ref target="ref/bone.html" name="bone" init="B">
                        <purpose>Bone colormap array</purpose>
                    </ref>
                    <ref target="ref/copper.html" name="copper" init="C">
                        <purpose>Copper colormap array</purpose>
                    </ref>
                    <ref target="ref/pink.html" name="pink" init="P">
                        <purpose>Pink colormap array</purpose>
                    </ref>
                    <ref target="ref/lines.html" name="lines" init="L">
                        <purpose>Lines colormap array</purpose>
                    </ref>
                    <ref target="ref/colorcube.html" name="colorcube" init="C">
                        <purpose>Colorcube colormap array</purpose>
                    </ref>
                    <ref target="ref/prism.html" name="prism" init="P">
                        <purpose>Prism colormap array</purpose>
                    </ref>
                    <ref target="ref/flag.html" name="flag" init="F">
                        <purpose>Flag colormap array</purpose>
                    </ref>
                    <ref target="ref/graymon.html" name="graymon" init="G" unlisted="y">
                        <purpose>Set default figure properties for grayscale monitors</purpose>
                    </ref>
                    <ref target="ref/colordef.html" name="colordef" init="C" unlisted="y">
                        <purpose>Set default property values to display different color schemes</purpose>
                    </ref>
                    <ref target="ref/whitebg.html" name="whitebg" init="W" unlisted="y">
                        <purpose>Change axes background color</purpose>
                    </ref>
                </cat>
                <cat target="camera-views-and-lighting.html">
                    <title>3-D Scene Control</title>
                    <cat target="views.html">
                        <title>Camera Views</title>
                        <ref target="ref/view.html" name="view" init="V">
                            <purpose>Camera line of sight</purpose>
                        </ref>
                        <ref target="ref/rotate.html" name="rotate" init="R">
                            <purpose>Rotate object about specified origin and direction</purpose>
                        </ref>
                        <ref target="ref/makehgtform.html" name="makehgtform" init="M">
                            <purpose>Create 4-by-4 transform matrix</purpose>
                        </ref>
                        <ref target="ref/viewmtx.html" name="viewmtx" init="V">
                            <purpose>View transformation matrices</purpose>
                        </ref>
                        <ref target="ref/cameratoolbar.html" name="cameratoolbar" init="C">
                            <purpose>Control camera toolbar programmatically</purpose>
                        </ref>
                        <ref target="ref/campan.html" name="campan" init="C">
                            <purpose>Rotate camera target around camera position</purpose>
                        </ref>
                        <ref target="ref/camzoom.html" name="camzoom" init="C">
                            <purpose>Zoom in and out on scene</purpose>
                        </ref>
                        <ref target="ref/camdolly.html" name="camdolly" init="C">
                            <purpose>Move camera position and target</purpose>
                        </ref>
                        <ref target="ref/camlookat.html" name="camlookat" init="C">
                            <purpose>Position camera to view object or group of objects</purpose>
                        </ref>
                        <ref target="ref/camorbit.html" name="camorbit" init="C">
                            <purpose>Rotate camera position around camera target</purpose>
                        </ref>
                        <ref target="ref/campos.html" name="campos" init="C">
                            <purpose>Set or query camera position</purpose>
                        </ref>
                        <ref target="ref/camproj.html" name="camproj" init="C">
                            <purpose>Set or query projection type</purpose>
                        </ref>
                        <ref target="ref/camroll.html" name="camroll" init="C">
                            <purpose>Rotate camera about view axis</purpose>
                        </ref>
                        <ref target="ref/camtarget.html" name="camtarget" init="C">
                            <purpose>Set or query location of camera target</purpose>
                        </ref>
                        <ref target="ref/camup.html" name="camup" init="C">
                            <purpose>Set or query camera up vector</purpose>
                        </ref>
                        <ref target="ref/camva.html" name="camva" init="C">
                            <purpose>Set or query camera view angle</purpose>
                        </ref>
                    </cat>
                    <cat target="lighting-and-transparency.html">
                        <title>Lighting, Transparency, and Shading</title>
                        <ref target="ref/camlight.html" name="camlight" init="C">
                            <purpose>Create or move light object in camera coordinates</purpose>
                        </ref>
                        <ref target="ref/light.html" name="light" init="L">
                            <purpose>Create light</purpose>
                        </ref>
                        <ref target="ref/lightangle.html" name="lightangle" init="L">
                            <purpose>Create or position light object in spherical coordinates</purpose>
                        </ref>
                        <ref target="ref/lighting.html" name="lighting" init="L">
                            <purpose>Specify lighting algorithm</purpose>
                        </ref>
                        <ref target="ref/shading.html" name="shading" init="S">
                            <purpose>Set color shading properties</purpose>
                        </ref>
                        <ref target="ref/diffuse.html" name="diffuse" init="D">
                            <purpose>Calculate diffuse reflectance</purpose>
                        </ref>
                        <ref target="ref/material.html" name="material" init="M">
                            <purpose>Control reflectance properties of surfaces and patches</purpose>
                        </ref>
                        <ref target="ref/specular.html" name="specular" init="S">
                            <purpose>Calculate specular reflectance</purpose>
                        </ref>
                        <ref target="ref/alim.html" name="alim" init="A">
                            <purpose>Set or query axes alpha limits</purpose>
                        </ref>
                        <ref target="ref/alpha.html" name="alpha" init="A">
                            <purpose>Add transparency to objects in axes</purpose>
                        </ref>
                        <ref target="ref/alphamap.html" name="alphamap" init="A">
                            <purpose>Specify figure alphamap (transparency)</purpose>
                        </ref>
                    </cat>
                </cat>
            </cat>
            <cat target="images_btfntr_-1.html">
                <title>Images</title>
                <ref target="ref/imshow.html" name="imshow" init="I">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Display image</purpose>
                </ref>
                <ref target="ref/image.html" name="image" init="I">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Display image from array</purpose>
                </ref>
                <ref target="ref/imagesc.html" name="imagesc" init="I">
                    <ext name="distributedarrays" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Display image with scaled colors</purpose>
                </ref>
                <ref target="ref/imread.html" name="imread" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpucodegen" value="limited"/>
                    <purpose>Read image from graphics file</purpose>
                </ref>
                <ref target="ref/imresize.html" name="imresize" init="I">
                    <ext name="codegen" value="limited"/>
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Resize image</purpose>
                </ref>
                <ref target="ref/imtile.html" name="imtile" init="I">
                    <purpose>Combine multiple image frames into one rectangular tiled image</purpose>
                </ref>
                <ref target="ref/imwrite.html" name="imwrite" init="I">
                    <ext name="gpuarrays" value="limited"/>
                    <purpose>Write image to graphics file</purpose>
                </ref>
                <ref target="ref/imfinfo.html" name="imfinfo" init="I">
                    <purpose>Information about graphics file</purpose>
                </ref>
                <ref target="ref/imformats.html" name="imformats" init="I">
                    <purpose>Manage image file format registry</purpose>
                </ref>
                <ref target="ref/frame2im.html" name="frame2im" init="F">
                    <purpose>Return image data associated with movie frame</purpose>
                </ref>
                <ref target="ref/im2frame.html" name="im2frame" init="I">
                    <purpose>Convert image to movie frame</purpose>
                </ref>
                <ref target="ref/im2java.html" name="im2java" init="I">
                    <purpose>Convert image to Java image</purpose>
                </ref>
                <ref target="ref/im2double.html" name="im2double" init="I">
                    <ext name="codegen" value="yes"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <ext name="tall" value="yes"/>
                    <purpose>Convert image to double precision</purpose>
                </ref>
                <ref target="ref/ind2rgb.html" name="ind2rgb" init="I">
                    <ext name="codegen" value="yes"/>
                    <purpose>Convert indexed image to RGB image</purpose>
                </ref>
                <ref target="ref/rgb2gray.html" name="rgb2gray" init="R">
                    <ext name="codegen" value="limited"/>
                    <ext name="distributedarrays" value="yes"/>
                    <ext name="gpuarrays" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Convert RGB image or colormap to grayscale</purpose>
                </ref>
                <ref target="ref/rgb2ind.html" name="rgb2ind" init="R">
                    <purpose>Convert RGB image to indexed image</purpose>
                </ref>
                <ref target="ref/getrangefromclass.html" name="getrangefromclass" init="G">
                    <ext name="codegen" value="yes"/>
                    <ext name="gpucodegen" value="yes"/>
                    <purpose>Default display range of image based on its class</purpose>
                </ref>
                <ref target="ref/imapprox.html" name="imapprox" init="I">
                    <purpose>Approximate indexed image by reducing number of colors</purpose>
                </ref>
                <ref target="ref/dither.html" name="dither" init="D">
                    <purpose>Convert image, increasing apparent color resolution by dithering</purpose>
                </ref>
                <ref target="ref/cmpermute.html" name="cmpermute" init="C">
                    <purpose>Rearrange colors in colormap</purpose>
                </ref>
                <ref target="ref/cmunique.html" name="cmunique" init="C">
                    <purpose>Eliminate duplicate colors in colormap; convert grayscale or truecolor image to indexed image</purpose>
                </ref>
            </cat>
            <cat target="printing-and-exporting.html">
                <title>Printing and Saving</title>
                <ref target="ref/exportgraphics.html" name="exportgraphics" init="E">
                    <purpose>Save plot or graphics content to file</purpose>
                </ref>
                <ref target="ref/copygraphics.html" name="copygraphics" init="C">
                    <purpose>Copy plot or graphics content to clipboard</purpose>
                </ref>
                <ref target="ref/saveas.html" name="saveas" init="S">
                    <purpose>Save figure to specific file format</purpose>
                </ref>
                <ref target="ref/getframe.html" name="getframe" init="G">
                    <purpose>Capture axes or figure as movie frame</purpose>
                </ref>
                <ref target="ref/hgexport.html" name="hgexport" init="H">
                    <purpose>Export figure</purpose>
                </ref>
                <ref target="ref/print.html" name="print" init="P">
                    <purpose>Print figure or save to specific file format</purpose>
                </ref>
                <ref target="ref/orient.html" name="orient" init="O">
                    <purpose>Paper orientation for printing or saving</purpose>
                </ref>
                <ref target="ref/printopt.html" name="printopt" init="P">
                    <purpose>Configure printer defaults</purpose>
                </ref>
                <ref target="ref/openfig.html" name="openfig" init="O">
                    <purpose>Open figure saved in FIG-file</purpose>
                </ref>
                <ref target="ref/savefig.html" name="savefig" init="S">
                    <purpose>Save figure and contents to FIG-file</purpose>
                </ref>
                <ref target="ref/hgsave.html" name="hgsave" init="H" unlisted="y">
                    <purpose>Save graphics object hierarchy to file</purpose>
                </ref>
                <ref target="ref/hgload.html" name="hgload" init="H" unlisted="y">
                    <purpose>Load graphics object hierarchy from file</purpose>
                </ref>
                <ref target="ref/pagesetupdlg.html" name="pagesetupdlg" init="P" unlisted="y">
                    <purpose>Page setup dialog box</purpose>
                </ref>
            </cat>
            <cat target="graphics-objects.html">
                <title>Graphics Objects</title>
                <cat target="graphics-object-properties.html">
                    <title>Graphics Object Properties</title>
                    <ref target="ref/get.html" name="get" init="G">
                        <purpose>Query graphics object properties</purpose>
                    </ref>
                    <ref target="ref/set.html" name="set" init="S">
                        <purpose>Set graphics object properties</purpose>
                    </ref>
                    <ref target="ref/reset.html" name="reset" init="R">
                        <purpose>Reset graphics object properties to their defaults</purpose>
                    </ref>
                </cat>
                <cat target="graphics-object-identification.html">
                    <title>Graphics Object Identification</title>
                    <ref target="ref/gca.html" name="gca" init="G">
                        <purpose>Current axes or chart</purpose>
                    </ref>
                    <ref target="ref/gcf.html" name="gcf" init="G">
                        <purpose>Current figure handle</purpose>
                    </ref>
                    <ref target="ref/gcbf.html" name="gcbf" init="G">
                        <purpose>Handle of figure containing object whose callback is executing</purpose>
                    </ref>
                    <ref target="ref/gcbo.html" name="gcbo" init="G">
                        <purpose>Handle of object whose callback is executing</purpose>
                    </ref>
                    <ref target="ref/gco.html" name="gco" init="G">
                        <purpose>Handle of current object</purpose>
                    </ref>
                    <ref target="ref/groot.html" name="groot" init="G">
                        <purpose>Graphics root object</purpose>
                    </ref>
                    <ref target="ref/ancestor.html" name="ancestor" init="A">
                        <purpose>Ancestor of graphics object</purpose>
                    </ref>
                    <ref target="ref/allchild.html" name="allchild" init="A">
                        <purpose>Find all children of specified objects</purpose>
                    </ref>
                    <ref target="ref/findall.html" name="findall" init="F">
                        <purpose>Find all graphics objects</purpose>
                    </ref>
                    <ref target="ref/findobj.html" name="findobj" init="F">
                        <purpose>Locate graphics objects with specific properties</purpose>
                    </ref>
                    <ref target="ref/findfigs.html" name="findfigs" init="F">
                        <purpose>Find visible offscreen figures</purpose>
                    </ref>
                    <ref target="ref/gobjects.html" name="gobjects" init="G">
                        <purpose>Initialize array for graphics objects</purpose>
                    </ref>
                    <ref target="ref/isgraphics.html" name="isgraphics" init="I">
                        <purpose>True for valid graphics object handles</purpose>
                    </ref>
                    <ref target="ref/ishandle.html" name="ishandle" init="I">
                        <purpose>Test for valid graphics or Java object handle</purpose>
                    </ref>
                    <ref target="ref/copyobj.html" name="copyobj" init="C">
                        <purpose>Copy graphics objects and their descendants</purpose>
                    </ref>
                    <ref target="ref/delete.html" name="delete" init="D">
                        <purpose>Delete files or objects</purpose>
                    </ref>
                    <ref target="ref/ishghandle.html" name="ishghandle" init="I" unlisted="y">
                        <purpose>True for graphics object handles</purpose>
                    </ref>
                </cat>
                <cat target="graphics-objects-programming.html">
                    <title>Graphics Object Programming</title>
                    <ref target="ref/gobjects.html" name="gobjects" init="G">
                        <purpose>Initialize array for graphics objects</purpose>
                    </ref>
                    <ref target="ref/isgraphics.html" name="isgraphics" init="I">
                        <purpose>True for valid graphics object handles</purpose>
                    </ref>
                    <ref target="ref/isempty.html" name="isempty" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="tall" value="yes"/>
                        <purpose>Determine whether array is empty</purpose>
                    </ref>
                    <ref target="ref/isequal.html" name="isequal" init="I">
                        <ext name="codegen" value="yes"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <ext name="gpucodegen" value="yes"/>
                        <purpose>Determine array equality</purpose>
                    </ref>
                    <ref target="ref/isa.html" name="isa" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Determine if input has specified data type</purpose>
                    </ref>
                    <ref target="ref/clf.html" name="clf" init="C">
                        <purpose>Clear current figure window</purpose>
                    </ref>
                    <ref target="ref/cla.html" name="cla" init="C">
                        <purpose>Clear axes</purpose>
                    </ref>
                    <ref target="ref/close.html" name="close" init="C">
                        <purpose>Remove specified figure</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.graphics-class.html" name="matlab.graphics.Graphics" init="M" unlisted="y">
                        <purpose>Common base class for graphics objects</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.graphicsplaceholder-class.html" name="matlab.graphics.GraphicsPlaceholder" init="M" unlisted="y">
                        <purpose>Default graphics object</purpose>
                    </ref>
                </cat>
                <cat target="interactive-control-and-callbacks.html">
                    <title>Interactive Control and Callbacks</title>
                    <ref target="ref/uicontextmenu.html" name="uicontextmenu" init="U">
                        <purpose>Create context menu component</purpose>
                    </ref>
                    <ref target="ref/uimenu.html" name="uimenu" init="U">
                        <purpose>Create menu or menu items</purpose>
                    </ref>
                    <ref target="ref/dragrect.html" name="dragrect" init="D">
                        <purpose>Drag rectangles with mouse</purpose>
                    </ref>
                    <ref target="ref/rbbox.html" name="rbbox" init="R">
                        <purpose>Create rubberband box for area selection</purpose>
                    </ref>
                    <ref target="ref/refresh.html" name="refresh" init="R">
                        <purpose>Redraw current figure</purpose>
                    </ref>
                    <ref target="ref/shg.html" name="shg" init="S">
                        <purpose>Show most recent graph window</purpose>
                    </ref>
                </cat>
                <cat target="object-containers.html">
                    <title>Object Containers</title>
                    <ref target="ref/hggroup.html" name="hggroup" init="H">
                        <purpose>Create group object</purpose>
                    </ref>
                    <ref target="ref/hgtransform.html" name="hgtransform" init="H">
                        <purpose>Create transform object</purpose>
                    </ref>
                    <ref target="ref/makehgtform.html" name="makehgtform" init="M">
                        <purpose>Create 4-by-4 transform matrix</purpose>
                    </ref>
                    <ref target="ref/eye.html" name="eye" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="limited"/>
                        <ext name="gpuarrays" value="limited"/>
                        <ext name="gpucodegen" value="limited"/>
                        <purpose>Identity matrix</purpose>
                    </ref>
                </cat>
                <cat target="specifying-target-for-graphics-output.html">
                    <title>Specifying Target for Graphics Output</title>
                    <ref target="ref/hold.html" name="hold" init="H">
                        <purpose>Retain current plot when adding new plots</purpose>
                    </ref>
                    <ref target="ref/ishold.html" name="ishold" init="I">
                        <purpose>Current hold state</purpose>
                    </ref>
                    <ref target="ref/newplot.html" name="newplot" init="N">
                        <purpose>Determine where to draw graphics objects</purpose>
                    </ref>
                    <ref target="ref/clf.html" name="clf" init="C">
                        <purpose>Clear current figure window</purpose>
                    </ref>
                    <ref target="ref/cla.html" name="cla" init="C">
                        <purpose>Clear axes</purpose>
                    </ref>
                </cat>
                <cat target="developing-chart-classes.html">
                    <title>Developing Chart Classes</title>
                    <ref target="ref/matlab.graphics.chartcontainer.chartcontainer-class.html" name="matlab.graphics.chartcontainer.ChartContainer" init="M">
                        <purpose>Base class for developing chart objects</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.mixin.legend-class.html" name="matlab.graphics.chartcontainer.mixin.Legend" init="M">
                        <purpose>Add legend support to chart container subclass</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.mixin.colorbar-class.html" name="matlab.graphics.chartcontainer.mixin.Colorbar" init="M">
                        <purpose>Add colorbar support to chart container subclass</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.chartcontainer.setup.html" name="setup" init="S">
                        <purpose>Set up instance of chart container subclass</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.chartcontainer.update.html" name="update" init="U">
                        <purpose>Update instance of chart container subclass after setting properties</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.chartcontainer.getaxes.html" name="getAxes" init="G">
                        <purpose>Get axes for chart container subclass</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.chartcontainer.getlayout.html" name="getLayout" init="G">
                        <purpose>Get tiled chart layout for chart container subclass</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.mixin.legend.getlegend.html" name="getLegend" init="G">
                        <purpose>Get legend object for legend mixin subclass</purpose>
                    </ref>
                    <ref target="ref/matlab.graphics.chartcontainer.mixin.colorbar.getcolorbar.html" name="getColorbar" init="G">
                        <purpose>Get colorbar object for colorbar mixin subclass</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="graphics-performance.html">
                <title>Graphics Performance</title>
                <ref target="ref/drawnow.html" name="drawnow" init="D">
                    <purpose>Update figures and process callbacks</purpose>
                </ref>
                <ref target="ref/rendererinfo.html" name="rendererinfo" init="R">
                    <purpose>Graphics renderer information</purpose>
                </ref>
                <ref target="ref/opengl.html" name="opengl" init="O">
                    <purpose>Control OpenGL rendering</purpose>
                </ref>
            </cat>
        </cat>
        <cat target="programming-and-data-types.html">
            <title>Programming</title>
            <cat target="scripts.html">
                <title>Scripts</title>
                <ref target="ref/edit.html" name="edit" init="E">
                    <purpose>Edit or create file</purpose>
                </ref>
                <ref target="ref/input.html" name="input" init="I">
                    <purpose>Request user input</purpose>
                </ref>
                <ref target="ref/publish.html" name="publish" init="P">
                    <purpose>Generate view of MATLAB file in specified format</purpose>
                </ref>
                <ref target="ref/grabcode.html" name="grabcode" init="G">
                    <purpose>Extract MATLAB code from file published to HTML</purpose>
                </ref>
                <ref target="ref/snapnow.html" name="snapnow" init="S">
                    <purpose>Take snapshot of image for inclusion in published document</purpose>
                </ref>
                <ref target="ref/notebook.html" name="notebook" init="N" unlisted="y">
                    <purpose>(Removed) Open MATLAB Notebook in Microsoft Word software (on Microsoft Windows platforms)</purpose>
                </ref>
            </cat>
            <cat target="functions.html">
                <title>Functions</title>
                <cat target="function-basics.html">
                    <title>Function Basics</title>
                    <ref target="ref/function.html" name="function" init="F">
                        <purpose>Declare function name, inputs, and outputs</purpose>
                    </ref>
                </cat>
                <cat target="input-and-output-arguments.html">
                    <title>Input and Output Arguments</title>
                    <ref target="ref/nargin.html" name="nargin" init="N">
                        <ext name="codegen" value="limited"/>
                        <purpose>Number of function input arguments</purpose>
                    </ref>
                    <ref target="ref/nargout.html" name="nargout" init="N">
                        <ext name="codegen" value="limited"/>
                        <purpose>Number of function output arguments</purpose>
                    </ref>
                    <ref target="ref/varargin.html" name="varargin" init="V">
                        <ext name="codegen" value="limited"/>
                        <purpose>Variable-length input argument list</purpose>
                    </ref>
                    <ref target="ref/varargout.html" name="varargout" init="V">
                        <ext name="codegen" value="limited"/>
                        <purpose>Variable-length output argument list</purpose>
                    </ref>
                    <ref target="ref/narginchk.html" name="narginchk" init="N">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate number of input arguments</purpose>
                    </ref>
                    <ref target="ref/nargoutchk.html" name="nargoutchk" init="N">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate number of output arguments</purpose>
                    </ref>
                    <ref target="ref/validateattributes.html" name="validateattributes" init="V">
                        <ext name="codegen" value="limited"/>
                        <ext name="distributedarrays" value="yes"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Check validity of array</purpose>
                    </ref>
                    <ref target="ref/validatestring.html" name="validatestring" init="V">
                        <ext name="codegen" value="limited"/>
                        <purpose>Check validity of text</purpose>
                    </ref>
                    <ref target="ref/inputparser.html" name="inputParser" init="I">
                        <purpose>Input parser for functions</purpose>
                    </ref>
                    <ref target="ref/inputname.html" name="inputname" init="I">
                        <purpose>Variable name of function input</purpose>
                    </ref>
                    <ref target="ref/mfilename.html" name="mfilename" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>File name of currently running code</purpose>
                    </ref>
                    <ref target="ref/arguments.html" name="arguments" init="A">
                        <purpose>Declare function argument validation</purpose>
                    </ref>
                    <ref target="ref/namedargs2cell.html" name="namedargs2cell" init="N">
                        <purpose>Convert structure containing name-value pairs to cell array</purpose>
                    </ref>
                    <ref target="ref/mustbefinite.html" name="mustBeFinite" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is finite or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbegreaterthan.html" name="mustBeGreaterThan" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is greater than another value or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbegreaterthanorequal.html" name="mustBeGreaterThanOrEqual" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is greater than or equal to another value or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbeinteger.html" name="mustBeInteger" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is integer or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbelessthan.html" name="mustBeLessThan" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is less than another value or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbelessthanorequal.html" name="mustBeLessThanOrEqual" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is less than or equal to another value or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbemember.html" name="mustBeMember" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is member of specified set</purpose>
                    </ref>
                    <ref target="ref/mustbenegative.html" name="mustBeNegative" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is negative or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbenonempty.html" name="mustBeNonempty" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is nonempty or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbenonnan.html" name="mustBeNonNan" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is nonNaN</purpose>
                    </ref>
                    <ref target="ref/mustbenonnegative.html" name="mustBeNonnegative" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is nonnegative or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbenonpositive.html" name="mustBeNonpositive" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is nonpositive or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbenonsparse.html" name="mustBeNonsparse" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is nonsparse or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbenonzero.html" name="mustBeNonzero" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is nonzero or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbenumeric.html" name="mustBeNumeric" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is numeric or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbenumericorlogical.html" name="mustBeNumericOrLogical" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is numeric or logical or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbepositive.html" name="mustBePositive" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is positive or issue error</purpose>
                    </ref>
                    <ref target="ref/mustbereal.html" name="mustBeReal" init="M">
                        <ext name="codegen" value="yes"/>
                        <purpose>Validate that value is real or issue error</purpose>
                    </ref>
                    <ref target="ref/inputparser.addrequired.html" name="addRequired" init="A" unlisted="y">
                        <purpose>Add required, positional argument into input parser scheme</purpose>
                    </ref>
                    <ref target="ref/inputparser.addoptional.html" name="addOptional" init="A" unlisted="y">
                        <purpose>Add optional, positional argument into input parser scheme</purpose>
                    </ref>
                    <ref target="ref/inputparser.addparameter.html" name="addParameter" init="A" unlisted="y">
                        <purpose>Add optional name-value pair argument into input parser scheme</purpose>
                    </ref>
                    <ref target="ref/inputparser.addparamvalue.html" name="addParamValue" init="A" unlisted="y">
                        <purpose>(Not recommended) Add optional name-value pair argument into input parser scheme</purpose>
                    </ref>
                    <ref target="ref/inputparser.parse.html" name="parse" init="P" unlisted="y">
                        <purpose>Parse function inputs</purpose>
                    </ref>
                    <ref target="ref/nargchk.html" name="nargchk" init="N" unlisted="y">
                        <purpose>Validate number of input arguments</purpose>
                    </ref>
                </cat>
                <cat target="scope-variables-and-generate-names.html">
                    <title>Scope Variables and Generate Names</title>
                    <ref target="ref/persistent.html" name="persistent" init="P">
                        <ext name="codegen" value="limited"/>
                        <purpose>Define persistent variable</purpose>
                    </ref>
                    <ref target="ref/assignin.html" name="assignin" init="A">
                        <purpose>Assign value to variable in specified workspace</purpose>
                    </ref>
                    <ref target="ref/global.html" name="global" init="G">
                        <purpose>Declare variables as global</purpose>
                    </ref>
                    <ref target="ref/mlock.html" name="mlock" init="M">
                        <purpose>Prevent clearing function or script from memory</purpose>
                    </ref>
                    <ref target="ref/munlock.html" name="munlock" init="M">
                        <purpose>Allow clearing function or script from memory</purpose>
                    </ref>
                    <ref target="ref/mislocked.html" name="mislocked" init="M">
                        <purpose>Determine if function or script is locked in memory</purpose>
                    </ref>
                    <ref target="ref/isvarname.html" name="isvarname" init="I">
                        <purpose>Determine if input is valid variable name</purpose>
                    </ref>
                    <ref target="ref/matlab.lang.makeuniquestrings.html" name="matlab.lang.makeUniqueStrings" init="M">
                        <purpose>Construct unique strings from input strings</purpose>
                    </ref>
                    <ref target="ref/matlab.lang.makevalidname.html" name="matlab.lang.makeValidName" init="M">
                        <purpose>Construct valid MATLAB identifiers from input strings</purpose>
                    </ref>
                    <ref target="ref/namelengthmax.html" name="namelengthmax" init="N">
                        <purpose>Maximum identifier length</purpose>
                    </ref>
                    <ref target="ref/genvarname.html" name="genvarname" init="G" unlisted="y">
                        <purpose>Construct valid variable name from string</purpose>
                    </ref>
                </cat>
                <cat target="error-handling.html">
                    <title>Error Handling</title>
                    <ref target="ref/try.html" name="try, catch" init="T">
                        <purpose>Execute statements and catch resulting errors</purpose>
                    </ref>
                    <ref target="ref/error.html" name="error" init="E">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Throw error and display message</purpose>
                    </ref>
                    <ref target="ref/warning.html" name="warning" init="W">
                        <purpose>Display warning message</purpose>
                    </ref>
                    <ref target="ref/lastwarn.html" name="lastwarn" init="L">
                        <purpose>Last warning message</purpose>
                    </ref>
                    <ref target="ref/assert.html" name="assert" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Throw error if condition false</purpose>
                    </ref>
                    <ref target="ref/oncleanup.html" name="onCleanup" init="O">
                        <ext name="codegen" value="limited"/>
                        <purpose>Cleanup tasks upon function completion</purpose>
                    </ref>
                    <ref target="ref/lasterr.html" name="lasterr" init="L" unlisted="y">
                        <purpose>Last error message</purpose>
                    </ref>
                    <ref target="ref/lasterror.html" name="lasterror" init="L" unlisted="y">
                        <purpose>Last error message and related information</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="live-scripts-and-functions.html">
                <title>Live Scripts and Functions</title>
            </cat>
            <cat target="object-oriented-programming.html">
                <title>Classes</title>
                <cat target="object-oriented-design-with-matlab.html">
                    <title>Object-Oriented Design with MATLAB</title>
                </cat>
                <cat target="class-syntax-guide.html">
                    <title>Class Syntax Guide</title>
                    <ref target="ref/class.html" name="class" init="C">
                        <ext name="codegen" value="yes"/>
                        <purpose>Class of object</purpose>
                    </ref>
                    <ref target="ref/isobject.html" name="isobject" init="I">
                        <ext name="codegen" value="yes"/>
                        <purpose>Determine if input is MATLAB object</purpose>
                    </ref>
                    <ref target="ref/enumeration.html" name="enumeration" init="E">
                        <ext name="codegen" value="yes"/>
                        <purpose>Class enumeration members and names</purpose>
                    </ref>
                    <ref target="ref/events.html" name="events" init="E">
                        <purpose>Event names</purpose>
                    </ref>
                    <ref target="ref/methods.html" name="methods" init="M">
                        <purpose>Class method names</purpose>
                    </ref>
                    <ref target="ref/properties.html" name="properties" init="P">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Class property names</purpose>
                    </ref>
                    <ref target="ref/superclasses.html" name="superclasses" init="S">
                        <purpose>Names of superclasses</purpose>
                    </ref>
                </cat>
                <cat target="sample-classes.html">
                    <title>Sample Class Implementations</title>
                    <ref target="ref/classdef.html" name="classdef" init="C">
                        <purpose>Class definition keywords</purpose>
                    </ref>
                </cat>
                <cat target="object-oriented-programming-in-matlab.html">
                    <title>Class Definition</title>
                    <cat target="class-definition-and-organization.html">
                        <title>Class File Organization</title>
                        <ref target="ref/classdef.html" name="classdef" init="C">
                            <purpose>Class definition keywords</purpose>
                        </ref>
                        <ref target="ref/import.html" name="import" init="I">
                            <purpose>Add package, class, or functions to current import list</purpose>
                        </ref>
                    </cat>
                    <cat target="properties-storing-data-and-state.html">
                        <title>Properties</title>
                        <ref target="ref/properties.html" name="properties" init="P">
                            <ext name="distributedarrays" value="yes"/>
                            <purpose>Class property names</purpose>
                        </ref>
                        <ref target="ref/isprop.html" name="isprop" init="I">
                            <purpose>True if property exists</purpose>
                        </ref>
                        <ref target="ref/mustbefinite.html" name="mustBeFinite" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is finite or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbegreaterthan.html" name="mustBeGreaterThan" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is greater than another value or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbegreaterthanorequal.html" name="mustBeGreaterThanOrEqual" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is greater than or equal to another value or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbeinteger.html" name="mustBeInteger" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is integer or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbelessthan.html" name="mustBeLessThan" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is less than another value or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbelessthanorequal.html" name="mustBeLessThanOrEqual" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is less than or equal to another value or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbemember.html" name="mustBeMember" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is member of specified set</purpose>
                        </ref>
                        <ref target="ref/mustbenegative.html" name="mustBeNegative" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is negative or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbenonempty.html" name="mustBeNonempty" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is nonempty or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbenonnan.html" name="mustBeNonNan" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is nonNaN</purpose>
                        </ref>
                        <ref target="ref/mustbenonnegative.html" name="mustBeNonnegative" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is nonnegative or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbenonpositive.html" name="mustBeNonpositive" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is nonpositive or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbenonsparse.html" name="mustBeNonsparse" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is nonsparse or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbenonzero.html" name="mustBeNonzero" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is nonzero or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbenumeric.html" name="mustBeNumeric" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is numeric or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbenumericorlogical.html" name="mustBeNumericOrLogical" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is numeric or logical or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbepositive.html" name="mustBePositive" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is positive or issue error</purpose>
                        </ref>
                        <ref target="ref/mustbereal.html" name="mustBeReal" init="M">
                            <ext name="codegen" value="yes"/>
                            <purpose>Validate that value is real or issue error</purpose>
                        </ref>
                        <ref target="ref/dynamicprops-class.html" name="dynamicprops" init="D">
                            <purpose>Superclass for classes that support dynamic properties</purpose>
                        </ref>
                        <ref target="ref/meta.dynamicproperty-class.html" name="meta.DynamicProperty" init="M">
                            <purpose>Describe dynamic property of MATLAB object</purpose>
                        </ref>
                        <ref target="ref/event.dynamicpropertyevent-class.html" name="event.DynamicPropertyEvent" init="E">
                            <purpose>Event data for dynamic property events</purpose>
                        </ref>
                        <ref target="ref/meta.property-class.html" name="meta.property" init="M">
                            <purpose>Describe property of MATLAB class</purpose>
                        </ref>
                        <ref target="ref/meta.validation-class.html" name="meta.Validation" init="M">
                            <purpose>Describes property validation</purpose>
                        </ref>
                        <ref target="ref/meta.fixeddimension-class.html" name="meta.FixedDimension" init="M">
                            <purpose>Fixed dimension in property size specification</purpose>
                        </ref>
                        <ref target="ref/meta.unrestricteddimension-class.html" name="meta.UnrestrictedDimension" init="M">
                            <purpose>Unrestricted dimension in property size specification</purpose>
                        </ref>
                        <ref target="ref/meta.arraydimension-class.html" name="meta.ArrayDimension" init="M">
                            <purpose>Size information for property validation</purpose>
                        </ref>
                        <ref target="ref/matlab.lang.onoffswitchstate-class.html" name="matlab.lang.OnOffSwitchState" init="M">
                            <purpose>Represent on and off states with logical values</purpose>
                        </ref>
                        <ref target="ref/dynamicprops.addprop.html" name="addprop" init="A" unlisted="y">
                            <purpose>Add dynamic property</purpose>
                        </ref>
                    </cat>
                    <cat target="methods-defining-operations.html">
                        <title>Methods</title>
                        <ref target="ref/methods.html" name="methods" init="M">
                            <purpose>Class method names</purpose>
                        </ref>
                        <ref target="ref/ismethod.html" name="ismethod" init="I">
                            <ext name="codegen" value="yes"/>
                            <purpose>Determine if object has specified method</purpose>
                        </ref>
                        <ref target="ref/meta.method-class.html" name="meta.method" init="M">
                            <purpose>Information about class method</purpose>
                        </ref>
                    </cat>
                    <cat target="handle-classes.html">
                        <title>Handle Classes</title>
                        <ref target="ref/isequal.html" name="isequal" init="I">
                            <ext name="codegen" value="yes"/>
                            <ext name="distributedarrays" value="yes"/>
                            <ext name="gpuarrays" value="yes"/>
                            <ext name="gpucodegen" value="yes"/>
                            <purpose>Determine array equality</purpose>
                        </ref>
                        <ref target="ref/eq.html" name="eq" init="E">
                            <ext name="codegen" value="limited"/>
                            <ext name="distributedarrays" value="yes"/>
                            <ext name="gpuarrays" value="yes"/>
                            <ext name="tall" value="yes"/>
                            <purpose>Determine equality</purpose>
                        </ref>
                        <ref target="ref/handle-class.html" name="handle" init="H">
                            <purpose>Superclass of all handle classes</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.setget-class.html" name="matlab.mixin.SetGet" init="M">
                            <purpose>Provide handle classes with set and get methods</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.setgetexactnames-class.html" name="matlab.mixin.SetGetExactNames" init="M">
                            <purpose>Require exact name match for set and get methods</purpose>
                        </ref>
                        <ref target="ref/dynamicprops-class.html" name="dynamicprops" init="D">
                            <purpose>Superclass for classes that support dynamic properties</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.copyable-class.html" name="matlab.mixin.Copyable" init="M">
                            <purpose>Superclass providing copy functionality for handle objects</purpose>
                        </ref>
                        <ref target="ref/handle.addlistener.html" name="addlistener" init="A">
                            <purpose>Create event listener bound to event source</purpose>
                        </ref>
                        <ref target="ref/handle.listener.html" name="listener" init="L">
                            <purpose>Create event listener without binding to event source</purpose>
                        </ref>
                        <ref target="ref/handle.notify.html" name="notify" init="N">
                            <purpose>Notify listeners that event is occurring</purpose>
                        </ref>
                        <ref target="ref/handle.delete.html" name="delete" init="D">
                            <purpose>Delete handle object</purpose>
                        </ref>
                        <ref target="ref/handle.findobj.html" name="findobj" init="F">
                            <purpose>Find handle objects</purpose>
                        </ref>
                        <ref target="ref/handle.findprop.html" name="findprop" init="F">
                            <purpose>Find meta.property object</purpose>
                        </ref>
                        <ref target="ref/handle.isvalid.html" name="isvalid" init="I">
                            <purpose>Determine valid handles</purpose>
                        </ref>
                        <ref target="ref/handle.relationaloperators.html" name="relationaloperators" init="R">
                            <purpose>Determine equality or sort handle objects</purpose>
                        </ref>
                        <ref target="ref/hgsetget.html" name="hgsetget" init="H" unlisted="y">
                            <purpose>Abstract class used to derive handle class with set and get methods</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.copyable.copy.html" name="copy" init="C" unlisted="y">
                            <purpose>Copy array of handle objects</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.copyable.copyelement.html" name="copyElement" init="C" unlisted="y">
                            <purpose>Copy scalar MATLAB object</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.setget.set.html" name="set" init="S" unlisted="y">
                            <purpose>Assign specified property-name/property-value pairs</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.setget.get.html" name="get" init="G" unlisted="y">
                            <purpose>Query specified property values</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.setget.setdisp.html" name="setdisp" init="S" unlisted="y">
                            <purpose>Customize set method display</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.setget.getdisp.html" name="getdisp" init="G" unlisted="y">
                            <purpose>Customize get method display</purpose>
                        </ref>
                    </cat>
                    <cat target="events-sending-and-responding-to-messages.html">
                        <title>Events</title>
                        <ref target="ref/events.html" name="events" init="E">
                            <purpose>Event names</purpose>
                        </ref>
                        <ref target="ref/handle.notify.html" name="notify" init="N">
                            <purpose>Notify listeners that event is occurring</purpose>
                        </ref>
                        <ref target="ref/handle.addlistener.html" name="addlistener" init="A">
                            <purpose>Create event listener bound to event source</purpose>
                        </ref>
                        <ref target="ref/handle.listener.html" name="listener" init="L">
                            <purpose>Create event listener without binding to event source</purpose>
                        </ref>
                        <ref target="ref/event.haslistener.html" name="event.hasListener" init="E">
                            <purpose>Determine if listeners exist for event</purpose>
                        </ref>
                        <ref target="ref/event.eventdata-class.html" name="event.EventData" init="E">
                            <purpose>Base class for event data</purpose>
                        </ref>
                        <ref target="ref/event.classinstanceevent-class.html" name="event.ClassInstanceEvent" init="E">
                            <purpose>Event data for InstanceCreated and InstanceDestroyed events</purpose>
                        </ref>
                        <ref target="ref/event.listener-class.html" name="event.listener" init="E">
                            <purpose>Class defining listener objects</purpose>
                        </ref>
                        <ref target="ref/event.propertyevent-class.html" name="event.PropertyEvent" init="E">
                            <purpose>Data for property events</purpose>
                        </ref>
                        <ref target="ref/event.proplistener.html" name="event.proplistener" init="E">
                            <purpose>Define listener object for property events</purpose>
                        </ref>
                    </cat>
                    <cat target="building-class-hierarchies.html">
                        <title>Class Hierarchies</title>
                        <cat target="subclass-definition.html">
                            <title>Subclass Definition</title>
                            <ref target="ref/superclasses.html" name="superclasses" init="S">
                                <purpose>Names of superclasses</purpose>
                            </ref>
                            <ref target="ref/matlab.mixin.heterogeneous-class.html" name="matlab.mixin.Heterogeneous" init="M">
                                <purpose>Superclass for heterogeneous array formation</purpose>
                            </ref>
                            <ref target="ref/matlab.mixin.heterogeneous.cat.html" name="cat" init="C" unlisted="y">
                                <purpose>Concatenation for heterogeneous arrays</purpose>
                            </ref>
                            <ref target="ref/matlab.mixin.heterogeneous.getdefaultscalarelement.html" name="matlab.mixin.Heterogeneous.getDefaultScalarElement" init="M" unlisted="y">
                                <purpose>Return default object for heterogeneous array operations</purpose>
                            </ref>
                            <ref target="ref/matlab.mixin.heterogeneous.horzcat.html" name="horzcat" init="H" unlisted="y">
                                <purpose>Horizontal concatenation for heterogeneous arrays</purpose>
                            </ref>
                            <ref target="ref/matlab.mixin.heterogeneous.vertcat.html" name="vertcat" init="V" unlisted="y">
                                <purpose>Vertical concatenation for heterogeneous arrays</purpose>
                            </ref>
                        </cat>
                        <cat target="subclass-applications.html">
                            <title>Subclass Applications</title>
                        </cat>
                    </cat>
                    <cat target="enumeration-classes.html">
                        <title>Enumerations</title>
                        <ref target="ref/enumeration.html" name="enumeration" init="E">
                            <ext name="codegen" value="yes"/>
                            <purpose>Class enumeration members and names</purpose>
                        </ref>
                        <ref target="ref/isenum.html" name="isenum" init="I">
                            <ext name="codegen" value="yes"/>
                            <purpose>Determine if variable is enumeration</purpose>
                        </ref>
                        <ref target="ref/meta.enumeratedvalue-class.html" name="meta.EnumeratedValue" init="M">
                            <purpose>Describe enumeration member of MATLAB class</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="matlab-class-customization.html">
                    <title>Class Customization</title>
                    <cat target="methods-that-control-object-behavior.html">
                        <title>Methods That Control Specific Behaviors</title>
                    </cat>
                    <cat target="customize-object-indexing.html">
                        <title>Object Indexing</title>
                        <ref target="ref/numargumentsfromsubscript.html" name="numArgumentsFromSubscript" init="N">
                            <purpose>Number of arguments for customized indexing methods</purpose>
                        </ref>
                        <ref target="ref/subsref.html" name="subsref" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <ext name="tall" value="limited"/>
                            <purpose>Subscripted reference</purpose>
                        </ref>
                        <ref target="ref/subsasgn.html" name="subsasgn" init="S">
                            <ext name="distributedarrays" value="limited"/>
                            <ext name="gpuarrays" value="limited"/>
                            <ext name="tall" value="limited"/>
                            <purpose>Redefine subscripted assignment</purpose>
                        </ref>
                        <ref target="ref/subsindex.html" name="subsindex" init="S">
                            <ext name="distributedarrays" value="yes"/>
                            <ext name="gpuarrays" value="yes"/>
                            <ext name="gpucodegen" value="yes"/>
                            <purpose>Convert object to array index</purpose>
                        </ref>
                        <ref target="ref/substruct.html" name="substruct" init="S">
                            <purpose>Create structure argument for subsasgn or subsref</purpose>
                        </ref>
                        <ref target="ref/builtin.html" name="builtin" init="B">
                            <ext name="codegen" value="yes"/>
                            <purpose>Execute built-in function from overloaded method</purpose>
                        </ref>
                    </cat>
                    <cat target="object-arrays.html">
                        <title>Object Arrays</title>
                        <ref target="ref/empty.html" name="empty" init="E">
                            <purpose>Create empty array of specified class</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.heterogeneous-class.html" name="matlab.mixin.Heterogeneous" init="M">
                            <purpose>Superclass for heterogeneous array formation</purpose>
                        </ref>
                    </cat>
                    <cat target="custom-object-display.html">
                        <title>Customize Object Display for Classes</title>
                        <ref target="ref/display.html" name="display" init="D">
                            <purpose>Show information about variable or result of expression</purpose>
                        </ref>
                        <ref target="ref/details.html" name="details" init="D">
                            <purpose>Display array details</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay-class.html" name="matlab.mixin.CustomDisplay" init="M">
                            <purpose>Interface for customizing object display</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.util.propertygroup-class.html" name="matlab.mixin.util.PropertyGroup" init="M">
                            <purpose>Custom property list for object display</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.convertdimensionstostring.html" name="matlab.mixin.CustomDisplay.convertDimensionsToString" init="M" unlisted="y">
                            <purpose>Return array dimensions as text</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.displayemptyobject.html" name="displayEmptyObject" init="D" unlisted="y">
                            <purpose>Display for empty object arrays</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.displaynonscalarobject.html" name="displayNonScalarObject" init="D" unlisted="y">
                            <purpose>Display format for non-scalar objects</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.displaypropertygroups.html" name="matlab.mixin.CustomDisplay.displayPropertyGroups" init="M" unlisted="y">
                            <purpose>Display titles and property groups as defined</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.displayscalarhandletodeletedobject.html" name="displayScalarHandleToDeletedObject" init="D" unlisted="y">
                            <purpose>Display format for deleted scalar handles</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.displayscalarobject.html" name="displayScalarObject" init="D" unlisted="y">
                            <purpose>Display format for scalar objects</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getclassnameforheader.html" name="matlab.mixin.CustomDisplay.getClassNameForHeader" init="M" unlisted="y">
                            <purpose>Return class name for display</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getdeletedhandletext.html" name="matlab.mixin.CustomDisplay.getDeletedHandleText" init="M" unlisted="y">
                            <purpose>Returns text for handle to deleted object display</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getdetailedfooter.html" name="matlab.mixin.CustomDisplay.getDetailedFooter" init="M" unlisted="y">
                            <purpose>Returns default detailed footer for object display</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getdetailedheader.html" name="matlab.mixin.CustomDisplay.getDetailedHeader" init="M" unlisted="y">
                            <purpose>Returns default detailed header for object display</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getfooter.html" name="getFooter" init="G" unlisted="y">
                            <purpose>Build and return display footer text</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.gethandletext.html" name="matlab.mixin.CustomDisplay.getHandleText" init="M" unlisted="y">
                            <purpose>Return text 'handle' with link to documentation</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getheader.html" name="getHeader" init="G" unlisted="y">
                            <purpose>Build and return display header text</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getpropertygroups.html" name="getPropertyGroups" init="G" unlisted="y">
                            <purpose>Construct array of property groups</purpose>
                        </ref>
                        <ref target="ref/matlab.mixin.customdisplay.getsimpleheader.html" name="matlab.mixin.CustomDisplay.getSimpleHeader" init="M" unlisted="y">
                            <purpose>Return simple header for object display</purpose>
                        </ref>
                    </cat>
                    <cat target="save-and-load.html">
                        <title>Object Save and Load</title>
                        <ref target="ref/saveobj.html" name="saveobj" init="S">
                            <purpose>Modify save process for object</purpose>
                        </ref>
                        <ref target="ref/loadobj.html" name="loadobj" init="L">
                            <purpose>Customize load process for objects</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="matlab-class-editing.html">
                    <title>Class Modifications and Updates</title>
                    <ref target="ref/edit.html" name="edit" init="E">
                        <purpose>Edit or create file</purpose>
                    </ref>
                </cat>
                <cat target="get-information-about-classes-and-objects.html">
                    <title>Class Introspection and Metadata</title>
                    <ref target="ref/metaclass.html" name="metaclass" init="M">
                        <purpose>Obtain meta.class object</purpose>
                    </ref>
                    <ref target="ref/meta.abstractdetails.html" name="meta.abstractDetails" init="M">
                        <purpose>Find abstract methods and properties</purpose>
                    </ref>
                    <ref target="ref/meta.class.fromname.html" name="meta.class.fromName" init="M">
                        <purpose>Return meta.class object associated with named class</purpose>
                    </ref>
                    <ref target="ref/meta.package.fromname.html" name="meta.package.fromName" init="M">
                        <purpose>Return meta.package object for specified package</purpose>
                    </ref>
                    <ref target="ref/meta.package.getallpackages.html" name="meta.package.getAllPackages" init="M">
                        <purpose>Get all top-level packages</purpose>
                    </ref>
                    <ref target="ref/properties.html" name="properties" init="P">
                        <ext name="distributedarrays" value="yes"/>
                        <purpose>Class property names</purpose>
                    </ref>
                    <ref target="ref/methods.html" name="methods" init="M">
                        <purpose>Class method names</purpose>
                    </ref>
                    <ref target="ref/events.html" name="events" init="E">
                        <purpose>Event names</purpose>
                    </ref>
                    <ref target="ref/superclasses.html" name="superclasses" init="S">
                        <purpose>Names of superclasses</purpose>
                    </ref>
                    <ref target="ref/meta.class-class.html" name="meta.class" init="M">
                        <purpose>Describe MATLAB class</purpose>
                    </ref>
                    <ref target="ref/meta.property-class.html" name="meta.property" init="M">
                        <purpose>Describe property of MATLAB class</purpose>
                    </ref>
                    <ref target="ref/meta.method-class.html" name="meta.method" init="M">
                        <purpose>Information about class method</purpose>
                    </ref>
                    <ref target="ref/meta.event-class.html" name="meta.event" init="M">
                        <purpose>Describe event defined by MATLAB class</purpose>
                    </ref>
                    <ref target="ref/meta.package-class.html" name="meta.package" init="M">
                        <purpose>Describe MATLAB package</purpose>
                    </ref>
                    <ref target="ref/meta.dynamicproperty-class.html" name="meta.DynamicProperty" init="M">
                        <purpose>Describe dynamic property of MATLAB object</purpose>
                    </ref>
                    <ref target="ref/meta.enumeratedvalue-class.html" name="meta.EnumeratedValue" init="M">
                        <purpose>Describe enumeration member of MATLAB class</purpose>
                    </ref>
                    <ref target="ref/meta.metadata-class.html" name="meta.MetaData" init="M">
                        <purpose>Root of the hierarchy of metaclasses</purpose>
                    </ref>
                    <ref target="ref/meta.arraydimension-class.html" name="meta.ArrayDimension" init="M">
                        <purpose>Size information for property validation</purpose>
                    </ref>
                    <ref target="ref/meta.validation-class.html" name="meta.Validation" init="M">
                        <purpose>Describes property validation</purpose>
                    </ref>
                    <ref target="ref/meta.fixeddimension-class.html" name="meta.FixedDimension" init="M">
                        <purpose>Fixed dimension in property size specification</purpose>
                    </ref>
                    <ref target="ref/meta.unrestricteddimension-class.html" name="meta.UnrestrictedDimension" init="M">
                        <purpose>Unrestricted dimension in property size specification</purpose>
                    </ref>
                </cat>
                <cat target="system-objects.html">
                    <title>System Objects</title>
                    <cat target="use-system-objects.html">
                        <title>Use System Objects</title>
                        <ref target="ref/step.html" name="step" init="S">
                            <ext name="codegen" value="limited"/>
                            <purpose>Run System object algorithm</purpose>
                        </ref>
                        <ref target="ref/clone.html" name="clone" init="C">
                            <purpose>Create duplicate System object</purpose>
                        </ref>
                        <ref target="ref/isdone.html" name="isDone" init="I">
                            <ext name="codegen" value="limited"/>
                            <purpose>End-of-data status</purpose>
                        </ref>
                        <ref target="ref/islocked.html" name="isLocked" init="I">
                            <ext name="codegen" value="limited"/>
                            <purpose>Determine if System object is in use</purpose>
                        </ref>
                        <ref target="ref/matlab.system.nargin.html" name="nargin" init="N">
                            <purpose>Number of input arguments for System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.nargout.html" name="nargout" init="N">
                            <purpose>Number of output arguments for System object</purpose>
                        </ref>
                        <ref target="ref/resetsystemobject.html" name="reset" init="R">
                            <ext name="codegen" value="limited"/>
                            <purpose>Reset internal states of System object</purpose>
                        </ref>
                        <ref target="ref/releasesystemobject.html" name="release" init="R">
                            <ext name="codegen" value="limited"/>
                            <purpose>Release resources and allow changes to System object property values and input characteristics</purpose>
                        </ref>
                        <ref target="ref/setup.html" name="setup" init="S">
                            <purpose>One-time set up tasks for System objects</purpose>
                        </ref>
                    </cat>
                    <cat target="create-system-objects.html">
                        <title>Create System Objects</title>
                        <ref target="ref/matlab.system.setupimpl.html" name="setupImpl" init="S">
                            <purpose>Initialize System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.stepimpl.html" name="stepImpl" init="S">
                            <purpose>System output and state update equations</purpose>
                        </ref>
                        <ref target="ref/matlab.system.resetimpl.html" name="resetImpl" init="R">
                            <purpose>Reset System object states</purpose>
                        </ref>
                        <ref target="ref/matlab.system.releaseimpl.html" name="releaseImpl" init="R">
                            <purpose>Release resources</purpose>
                        </ref>
                        <ref target="ref/matlab.system.infoimpl.html" name="infoImpl" init="I">
                            <purpose>Information about System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.mixin.finitesource.isdoneimpl.html" name="isDoneImpl" init="I">
                            <purpose>End-of-data flag</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isinactivepropertyimpl.html" name="isInactivePropertyImpl" init="I">
                            <purpose>Status of inactive property</purpose>
                        </ref>
                        <ref target="ref/matlab.system.istunablepropertydatatypemutableimpl.html" name="isTunablePropertyDataTypeMutableImpl" init="I">
                            <purpose>Set whether tunable properties can change data type</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isdiscretestatespecificationmutableimpl.html" name="isDiscreteStateSpecificationMutableImpl" init="I">
                            <purpose>Control whether discrete states can change data type</purpose>
                        </ref>
                        <ref target="ref/matlab.system.processtunedpropertiesimpl.html" name="processTunedPropertiesImpl" init="P">
                            <purpose>Action when tunable properties change</purpose>
                        </ref>
                        <ref target="ref/matlab.system.setproperties.html" name="setProperties" init="S">
                            <purpose>Set property values using name-value pairs when creating System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.validatepropertiesimpl.html" name="validatePropertiesImpl" init="V">
                            <purpose>Validate property values of System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getpropertygroupsimpl.html" name="getPropertyGroupsImpl" init="G">
                            <purpose>Property groups for System object display</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getnuminputsimpl.html" name="getNumInputsImpl" init="G">
                            <purpose>Number of inputs to the System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getnumoutputsimpl.html" name="getNumOutputsImpl" init="G">
                            <purpose>Number of outputs from System object</purpose>
                        </ref>
                        <ref target="ref/getnuminputs.html" name="getNumInputs" init="G">
                            <ext name="codegen" value="limited"/>
                            <purpose>Number of inputs required to call the System object</purpose>
                        </ref>
                        <ref target="ref/getnumoutputs.html" name="getNumOutputs" init="G">
                            <ext name="codegen" value="limited"/>
                            <purpose>Number of outputs from calling the System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isinputcomplexitymutableimpl.html" name="isInputComplexityMutableImpl" init="I">
                            <purpose>Set whether System object input complexity can change</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isinputdatatypemutableimpl.html" name="isInputDataTypeMutableImpl" init="I">
                            <purpose>Set whether System object input data type can change</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isinputsizemutableimpl.html" name="isInputSizeMutableImpl" init="I">
                            <purpose>Set whether System object input size can change</purpose>
                        </ref>
                        <ref target="ref/matlab.system.nargin.html" name="nargin" init="N">
                            <purpose>Number of input arguments for System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.nargout.html" name="nargout" init="N">
                            <purpose>Number of output arguments for System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.processinputspecificationchangeimpl.html" name="processInputSpecificationChangeImpl" init="P">
                            <purpose>Perform actions when input size, complexity, or data type change</purpose>
                        </ref>
                        <ref target="ref/matlab.system.validateinputsimpl.html" name="validateInputsImpl" init="V">
                            <purpose>Validate inputs to System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.loadobjectimpl.html" name="loadObjectImpl" init="L">
                            <purpose>Load System object from MAT file</purpose>
                        </ref>
                        <ref target="ref/matlab.system.saveobjectimpl.html" name="saveObjectImpl" init="S">
                            <purpose>Save System object in MAT file</purpose>
                        </ref>
                        <ref target="ref/matlab.system-class.html" name="matlab.System" init="M">
                            <purpose>Base class for System objects</purpose>
                        </ref>
                        <ref target="ref/matlab.system.mixin.finitesource-class.html" name="matlab.system.mixin.FiniteSource" init="M">
                            <purpose>Finite source mixin class</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isinputsizelockedimpl.html" name="isInputSizeLockedImpl" init="I" unlisted="y">
                            <purpose>Status of locked input size</purpose>
                        </ref>
                        <ref target="ref/matlab.system.stringset-class.html" name="matlab.system.StringSet" init="M" unlisted="y">
                            <purpose>Set of valid character vector values</purpose>
                        </ref>
                        <ref target="ref/matlab.system.mixin.nondirect-class.html" name="matlab.system.mixin.Nondirect" init="M" unlisted="y">
                            <purpose>Nondirect feedthrough mixin class</purpose>
                        </ref>
                        <ref target="ref/matlab.system.mixin.propagates-class.html" name="matlab.system.mixin.Propagates" init="M" unlisted="y">
                            <purpose>Signal characteristics propagation mixin class</purpose>
                        </ref>
                        <ref target="ref/matlab.system.mixin.customicon-class.html" name="matlab.system.mixin.CustomIcon" init="M" unlisted="y">
                            <purpose>Custom icon mixin class</purpose>
                        </ref>
                        <ref target="ref/matlab.system.mixin.sampletime-class.html" name="matlab.system.mixin.SampleTime" init="M" unlisted="y">
                            <purpose>Control sample time for System objects in Simulink</purpose>
                        </ref>
                        <ref target="ref/matlab.system.constructor.html" name="matlab.System Constructor" init="M" unlisted="y">
                            <purpose>Construct System object with Name,Value pairs or value-only inputs</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getsimulinkfunctionnamesimpl.html" name="getSimulinkFunctionNamesImpl" init="G" unlisted="y">
                            <purpose>Register Simulink function names used in your System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isinputdirectfeedthroughimpl.html" name="isInputDirectFeedthroughImpl" init="I" unlisted="y">
                            <purpose>Direct feedthrough status of input</purpose>
                        </ref>
                        <ref target="ref/matlab.system.outputimpl.html" name="outputImpl" init="O" unlisted="y">
                            <purpose>Output calculation from input or internal state of System object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.updateimpl.html" name="updateImpl" init="U" unlisted="y">
                            <purpose>Update object states based on inputs</purpose>
                        </ref>
                        <ref target="ref/matlab.system.allowmodelreferencediscretesampletimeinheritanceimpl.html" name="allowModelReferenceDiscreteSampleTimeInheritanceImpl" init="A" unlisted="y">
                            <purpose>Model reference sample time inheritance status for discrete sample times</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getdiscretestateimpl.html" name="getDiscreteStateImpl" init="G" unlisted="y">
                            <purpose>Discrete state property values</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getsimulateusingimpl.html" name="getSimulateUsingImpl" init="G" unlisted="y">
                            <purpose>Specify value for Simulate using parameter</purpose>
                        </ref>
                        <ref target="ref/matlab.system.showfisettingsimpl.html" name="showFiSettingsImpl" init="S" unlisted="y">
                            <purpose>Fixed point data type tab visibility for System objects</purpose>
                        </ref>
                        <ref target="ref/matlab.system.showsimulateusingimpl.html" name="showSimulateUsingImpl" init="S" unlisted="y">
                            <purpose>Visibility of Simulate using parameter</purpose>
                        </ref>
                        <ref target="ref/matlab.system.supportsmultipleinstanceimpl.html" name="supportsMultipleInstanceImpl" init="S" unlisted="y">
                            <purpose>Support System object in Simulink For Each subsystem</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getoutputsizeimpl.html" name="getOutputSizeImpl" init="G" unlisted="y">
                            <purpose>Sizes of output ports</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getoutputdatatypeimpl.html" name="getOutputDataTypeImpl" init="G" unlisted="y">
                            <purpose>Data types of output ports</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isoutputcompleximpl.html" name="isOutputComplexImpl" init="I" unlisted="y">
                            <purpose>Complexity of output ports</purpose>
                        </ref>
                        <ref target="ref/matlab.system.isoutputfixedsizeimpl.html" name="isOutputFixedSizeImpl" init="I" unlisted="y">
                            <purpose>Fixed- or variable-size output ports</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getdiscretestatespecificationimpl.html" name="getDiscreteStateSpecificationImpl" init="G" unlisted="y">
                            <purpose>Discrete state size, data type, and complexity</purpose>
                        </ref>
                        <ref target="ref/matlab.system.propagatedinputcomplexity.html" name="propagatedInputComplexity" init="P" unlisted="y">
                            <purpose>Complexity of input during Simulink propagation</purpose>
                        </ref>
                        <ref target="ref/matlab.system.propagatedinputdatatype.html" name="propagatedInputDataType" init="P" unlisted="y">
                            <purpose>Data type of input during Simulink propagation</purpose>
                        </ref>
                        <ref target="ref/matlab.system.propagatedinputfixedsize.html" name="propagatedInputFixedSize" init="P" unlisted="y">
                            <purpose>Fixed-size status of input during Simulink propagation</purpose>
                        </ref>
                        <ref target="ref/matlab.system.propagatedinputsize.html" name="propagatedInputSize" init="P" unlisted="y">
                            <purpose>Size of input during Simulink propagation</purpose>
                        </ref>
                        <ref target="ref/matlab.system.geticonimpl.html" name="getIconImpl" init="G" unlisted="y">
                            <purpose>Name to display as block icon</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getheaderimpl.html" name="getHeaderImpl" init="G" unlisted="y">
                            <purpose>Header for System object display</purpose>
                        </ref>
                        <ref target="ref/matlab.system.display.action-class.html" name="matlab.system.display.Action" init="M" unlisted="y">
                            <purpose>Custom button</purpose>
                        </ref>
                        <ref target="ref/matlab.system.display.header-class.html" name="matlab.system.display.Header" init="M" unlisted="y">
                            <purpose>Header for System objects properties</purpose>
                        </ref>
                        <ref target="ref/matlab.system.display.icon-class.html" name="matlab.system.display.Icon" init="M" unlisted="y">
                            <purpose>Custom icon image</purpose>
                        </ref>
                        <ref target="ref/matlab.system.display.section-class.html" name="matlab.system.display.Section" init="M" unlisted="y">
                            <purpose>Property group section for System objects</purpose>
                        </ref>
                        <ref target="ref/matlab.system.display.sectiongroup-class.html" name="matlab.system.display.SectionGroup" init="M" unlisted="y">
                            <purpose>Section group for System objects</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getinputnamesimpl.html" name="getInputNamesImpl" init="G" unlisted="y">
                            <purpose>Names of MATLAB System block input ports</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getoutputnamesimpl.html" name="getOutputNamesImpl" init="G" unlisted="y">
                            <purpose>Names of MATLAB System block output ports</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getglobalnamesimpl.html" name="getGlobalNamesImpl" init="G" unlisted="y">
                            <purpose>Global variable names for MATLAB System block</purpose>
                        </ref>
                        <ref target="ref/matlab.system.createsampletime.html" name="createSampleTime" init="C" unlisted="y">
                            <purpose>Create sample time specification object</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getsampletime.html" name="getSampleTime" init="G" unlisted="y">
                            <purpose>Query sample time</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getsampletimeimpl.html" name="getSampleTimeImpl" init="G" unlisted="y">
                            <purpose>Specify sample time type, offset time, and sample time</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getcurrenttime.html" name="getCurrentTime" init="G" unlisted="y">
                            <purpose>Current simulation time in MATLAB System block</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getimpulseresponselengthimpl.html" name="getImpulseResponseLengthImpl" init="G" unlisted="y">
                            <purpose>Define length of input effects for dataflow subsystems</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getinputdimensionconstraintimpl.html" name="getInputDimensionConstraintImpl" init="G" unlisted="y">
                            <purpose>Define input dimension constraints for dataflow subsystems</purpose>
                        </ref>
                        <ref target="ref/matlab.system.getoutputdimensionconstraintimpl.html" name="getOutputDimensionConstraintImpl" init="G" unlisted="y">
                            <purpose>Define output dimension constraints for dataflow subsystems</purpose>
                        </ref>
                    </cat>
                </cat>
            </cat>
            <cat target="files-and-folders.html">
                <title>Files and Folders</title>
                <cat target="search-path.html">
                    <title>Search Path</title>
                    <ref target="ref/addpath.html" name="addpath" init="A">
                        <purpose>Add folders to search path</purpose>
                    </ref>
                    <ref target="ref/rmpath.html" name="rmpath" init="R">
                        <purpose>Remove folders from search path</purpose>
                    </ref>
                    <ref target="ref/path.html" name="path" init="P">
                        <purpose>View or change search path</purpose>
                    </ref>
                    <ref target="ref/savepath.html" name="savepath" init="S">
                        <purpose>Save current search path</purpose>
                    </ref>
                    <ref target="ref/userpath.html" name="userpath" init="U">
                        <purpose>View or change default user work folder</purpose>
                    </ref>
                    <ref target="ref/genpath.html" name="genpath" init="G">
                        <purpose>Generate path name</purpose>
                    </ref>
                    <ref target="ref/pathsep.html" name="pathsep" init="P">
                        <purpose>Search path separator for current platform</purpose>
                    </ref>
                    <ref target="ref/pathtool.html" name="pathtool" init="P">
                        <purpose>Open Set Path dialog box to view and change search path</purpose>
                    </ref>
                    <ref target="ref/restoredefaultpath.html" name="restoredefaultpath" init="R">
                        <purpose>Restore search path to factory-installed state</purpose>
                    </ref>
                    <ref target="ref/rehash.html" name="rehash" init="R">
                        <purpose>Refresh function and file system path caches</purpose>
                    </ref>
                    <ref target="ref/path2rc.html" name="path2rc" init="P" unlisted="y">
                        <purpose>Save current search path to pathdef.m file</purpose>
                    </ref>
                </cat>
                <cat target="file-operations.html">
                    <title>File Operations</title>
                    <ref target="ref/dir.html" name="dir" init="D">
                        <purpose>List folder contents</purpose>
                    </ref>
                    <ref target="ref/ls.html" name="ls" init="L">
                        <purpose>List folder contents</purpose>
                    </ref>
                    <ref target="ref/pwd.html" name="pwd" init="P">
                        <purpose>Identify current folder</purpose>
                    </ref>
                    <ref target="ref/fileattrib.html" name="fileattrib" init="F">
                        <purpose>Set or get attributes of file or folder</purpose>
                    </ref>
                    <ref target="ref/exist.html" name="exist" init="E">
                        <purpose>Check existence of variable, script, function, folder, or class</purpose>
                    </ref>
                    <ref target="ref/isfile.html" name="isfile" init="I">
                        <purpose>Determine if input is file</purpose>
                    </ref>
                    <ref target="ref/isfolder.html" name="isfolder" init="I">
                        <purpose>Determine if input is folder</purpose>
                    </ref>
                    <ref target="ref/type.html" name="type" init="T">
                        <purpose>Display contents of file</purpose>
                    </ref>
                    <ref target="ref/visdiff.html" name="visdiff" init="V">
                        <purpose>Compare two files or folders</purpose>
                    </ref>
                    <ref target="ref/what.html" name="what" init="W">
                        <purpose>List MATLAB files in folder</purpose>
                    </ref>
                    <ref target="ref/which.html" name="which" init="W">
                        <purpose>Locate functions and files</purpose>
                    </ref>
                    <ref target="ref/cd.html" name="cd" init="C">
                        <purpose>Change current folder</purpose>
                    </ref>
                    <ref target="ref/copyfile.html" name="copyfile" init="C">
                        <purpose>Copy file or folder</purpose>
                    </ref>
                    <ref target="ref/delete.html" name="delete" init="D">
                        <purpose>Delete files or objects</purpose>
                    </ref>
                    <ref target="ref/recycle.html" name="recycle" init="R">
                        <purpose>Set option to move deleted files to recycle folder</purpose>
                    </ref>
                    <ref target="ref/mkdir.html" name="mkdir" init="M">
                        <purpose>Make new folder</purpose>
                    </ref>
                    <ref target="ref/movefile.html" name="movefile" init="M">
                        <purpose>Move or rename file or folder</purpose>
                    </ref>
                    <ref target="ref/rmdir.html" name="rmdir" init="R">
                        <purpose>Remove folder</purpose>
                    </ref>
                    <ref target="ref/open.html" name="open" init="O">
                        <purpose>Open file in appropriate application</purpose>
                    </ref>
                    <ref target="ref/winopen.html" name="winopen" init="W">
                        <purpose>Open file in appropriate application (Windows)</purpose>
                    </ref>
                    <ref target="ref/isdir.html" name="isdir" init="I" unlisted="y">
                        <purpose>(Not recommended) Determine if input is folder on search path</purpose>
                    </ref>
                </cat>
                <cat target="file-compression.html">
                    <title>File Compression</title>
                    <ref target="ref/zip.html" name="zip" init="Z">
                        <purpose>Compress files into zip file</purpose>
                    </ref>
                    <ref target="ref/unzip.html" name="unzip" init="U">
                        <purpose>Extract contents of zip file</purpose>
                    </ref>
                    <ref target="ref/gzip.html" name="gzip" init="G">
                        <purpose>Compress files into GNU zip files</purpose>
                    </ref>
                    <ref target="ref/gunzip.html" name="gunzip" init="G">
                        <purpose>Extract contents of GNU zip file</purpose>
                    </ref>
                    <ref target="ref/tar.html" name="tar" init="T">
                        <purpose>Compress files into tar file</purpose>
                    </ref>
                    <ref target="ref/untar.html" name="untar" init="U">
                        <purpose>Extract contents of tar file</purpose>
                    </ref>
                </cat>
                <cat target="file-name-construction.html">
                    <title>File Name Construction</title>
                    <ref target="ref/fileparts.html" name="fileparts" init="F">
                        <purpose>Get parts of file name</purpose>
                    </ref>
                    <ref target="ref/fullfile.html" name="fullfile" init="F">
                        <purpose>Build full file name from parts</purpose>
                    </ref>
                    <ref target="ref/filemarker.html" name="filemarker" init="F">
                        <purpose>Character to separate file name from local or nested function name</purpose>
                    </ref>
                    <ref target="ref/filesep.html" name="filesep" init="F">
                        <purpose>File separator for current platform</purpose>
                    </ref>
                    <ref target="ref/tempdir.html" name="tempdir" init="T">
                        <purpose>Name of temporary folder for the system</purpose>
                    </ref>
                    <ref target="ref/tempname.html" name="tempname" init="T">
                        <purpose>Unique name for temporary file</purpose>
                    </ref>
                    <ref target="ref/matlabroot.html" name="matlabroot" init="M">
                        <purpose>MATLAB root folder</purpose>
                    </ref>
                    <ref target="ref/toolboxdir.html" name="toolboxdir" init="T">
                        <purpose>Root folder for specified toolbox</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="function-execution.html">
                <title>Programming Utilities</title>
                <ref target="ref/eval.html" name="eval" init="E">
                    <purpose>Evaluate MATLAB expression</purpose>
                </ref>
                <ref target="ref/evalc.html" name="evalc" init="E">
                    <purpose>Evaluate MATLAB expression and capture results</purpose>
                </ref>
                <ref target="ref/evalin.html" name="evalin" init="E">
                    <purpose>Evaluate MATLAB expression in specified workspace</purpose>
                </ref>
                <ref target="ref/feval.html" name="feval" init="F">
                    <ext name="codegen" value="limited"/>
                    <purpose>Evaluate function</purpose>
                </ref>
                <ref target="ref/run.html" name="run" init="R">
                    <purpose>Run MATLAB script</purpose>
                </ref>
                <ref target="ref/builtin.html" name="builtin" init="B">
                    <ext name="codegen" value="yes"/>
                    <purpose>Execute built-in function from overloaded method</purpose>
                </ref>
                <ref target="ref/pcode.html" name="pcode" init="P">
                    <purpose>Create content-obscured, executable files</purpose>
                </ref>
                <ref target="ref/timer-class.html" name="timer" init="T">
                    <purpose>Create object to schedule execution of MATLAB commands</purpose>
                </ref>
                <ref target="ref/timer.delete.html" name="delete" init="D">
                    <purpose>Remove timer object from memory</purpose>
                </ref>
                <ref target="ref/timer.get.html" name="get" init="G">
                    <purpose>Query property values for timer object</purpose>
                </ref>
                <ref target="ref/timer.isvalid.html" name="isvalid" init="I">
                    <purpose>Determine timer object validity</purpose>
                </ref>
                <ref target="ref/timer.set.html" name="set" init="S">
                    <purpose>Set property values for timer object</purpose>
                </ref>
                <ref target="ref/timer.start.html" name="start" init="S">
                    <purpose>Start timer object</purpose>
                </ref>
                <ref target="ref/timer.startat.html" name="startat" init="S">
                    <purpose>Schedule timer to fire at specified time</purpose>
                </ref>
                <ref target="ref/timer.stop.html" name="stop" init="S">
                    <purpose>Stop timer object</purpose>
                </ref>
                <ref target="ref/timer.timerfind.html" name="timerfind" init="T">
                    <purpose>Find timer object</purpose>
                </ref>
                <ref target="ref/timer.timerfindall.html" name="timerfindall" init="T">
                    <purpose>Find timer object, regardless of visibility</purpose>
                </ref>
                <ref target="ref/timer.wait.html" name="wait" init="W">
                    <purpose>Block command prompt until timer stops running</purpose>
                </ref>
                <ref target="ref/try.html" name="try, catch" init="T">
                    <purpose>Execute statements and catch resulting errors</purpose>
                </ref>
                <ref target="ref/mexception.html" name="MException" init="M">
                    <purpose>Capture error information</purpose>
                </ref>
                <ref target="ref/mexception.addcause.html" name="addCause" init="A">
                    <purpose>Record additional causes of exception</purpose>
                </ref>
                <ref target="ref/mexception.addcorrection.html" name="addCorrection" init="A">
                    <purpose>Provide suggested fix for exception</purpose>
                </ref>
                <ref target="ref/mexception.getreport.html" name="getReport" init="G">
                    <purpose>Get error message for exception</purpose>
                </ref>
                <ref target="ref/mexception.mexception.last.html" name="MException.last" init="M">
                    <purpose>Return last uncaught exception</purpose>
                </ref>
                <ref target="ref/mexception.rethrow.html" name="rethrow" init="R">
                    <purpose>Rethrow previously caught exception</purpose>
                </ref>
                <ref target="ref/mexception.throw.html" name="throw" init="T">
                    <purpose>Throw exception</purpose>
                </ref>
                <ref target="ref/mexception.throwascaller.html" name="throwAsCaller" init="T">
                    <purpose>Throw exception as if occurs within calling function</purpose>
                </ref>
                <ref target="ref/matlab.lang.correction.appendargumentscorrection-class.html" name="matlab.lang.correction.AppendArgumentsCorrection" init="M">
                    <purpose>Correct error by appending missing input arguments</purpose>
                </ref>
                <ref target="ref/matlab.lang.correction.converttofunctionnotationcorrection-class.html" name="matlab.lang.correction.ConvertToFunctionNotationCorrection" init="M">
                    <purpose>Correct error by converting to function notation</purpose>
                </ref>
                <ref target="ref/matlab.lang.correction.replaceidentifiercorrection-class.html" name="matlab.lang.correction.ReplaceIdentifierCorrection" init="M">
                    <purpose>Correct error by replacing identifier in function call</purpose>
                </ref>
                <ref target="ref/maxnumcompthreads.html" name="maxNumCompThreads" init="M" unlisted="y">
                    <purpose>Control maximum number of computational threads</purpose>
                </ref>
                <ref target="ref/rethrow.html" name="rethrow" init="R" unlisted="y">
                    <purpose>Reissue error</purpose>
                </ref>
            </cat>
        </cat>
        <cat target="gui-development.html">
            <title>App Building</title>
            <cat target="app-designer.html">
                <title>Develop Apps Using App Designer</title>
                <ref target="ref/appdesigner.html" name="appdesigner" init="A">
                    <purpose>Open App Designer Start Page or existing app file</purpose>
                </ref>
            </cat>
            <cat target="develop-apps-programmatically.html">
                <title>Develop Apps Programmatically</title>
                <cat target="develop-apps-using-the-uifigure-function.html">
                    <title>uifigure-Based Apps</title>
                    <ref target="ref/uifigure.html" name="uifigure" init="U">
                        <purpose>Create figure for designing apps</purpose>
                    </ref>
                    <ref target="ref/uigridlayout.html" name="uigridlayout" init="U">
                        <purpose>Create grid layout manager</purpose>
                    </ref>
                    <ref target="ref/uipanel.html" name="uipanel" init="U">
                        <purpose>Create panel container</purpose>
                    </ref>
                    <ref target="ref/uitabgroup.html" name="uitabgroup" init="U">
                        <purpose>Create container for tabbed panels</purpose>
                    </ref>
                    <ref target="ref/uitab.html" name="uitab" init="U">
                        <purpose>Create tabbed panel</purpose>
                    </ref>
                    <ref target="ref/uiaxes.html" name="uiaxes" init="U">
                        <purpose>Create UI axes for plots in apps</purpose>
                    </ref>
                    <ref target="ref/axes.html" name="axes" init="A">
                        <purpose>Create Cartesian axes</purpose>
                    </ref>
                    <ref target="ref/geoaxes.html" name="geoaxes" init="G">
                        <purpose>Create geographic axes</purpose>
                    </ref>
                    <ref target="ref/polaraxes.html" name="polaraxes" init="P">
                        <purpose>Create polar axes</purpose>
                    </ref>
                    <ref target="ref/uibutton.html" name="uibutton" init="U">
                        <purpose>Create push button or state button component</purpose>
                    </ref>
                    <ref target="ref/uibuttongroup.html" name="uibuttongroup" init="U">
                        <purpose>Create button group to manage radio buttons and toggle buttons</purpose>
                    </ref>
                    <ref target="ref/uicheckbox.html" name="uicheckbox" init="U">
                        <purpose>Create check box component</purpose>
                    </ref>
                    <ref target="ref/uidatepicker.html" name="uidatepicker" init="U">
                        <purpose>Create date picker component</purpose>
                    </ref>
                    <ref target="ref/uidropdown.html" name="uidropdown" init="U">
                        <purpose>Create drop-down component</purpose>
                    </ref>
                    <ref target="ref/uieditfield.html" name="uieditfield" init="U">
                        <purpose>Create text or numeric edit field component</purpose>
                    </ref>
                    <ref target="ref/uiimage.html" name="uiimage" init="U">
                        <purpose>Create image component</purpose>
                    </ref>
                    <ref target="ref/uilabel.html" name="uilabel" init="U">
                        <purpose>Create label component</purpose>
                    </ref>
                    <ref target="ref/uilistbox.html" name="uilistbox" init="U">
                        <purpose>Create list box component</purpose>
                    </ref>
                    <ref target="ref/uiradiobutton.html" name="uiradiobutton" init="U">
                        <purpose>Create radio button component</purpose>
                    </ref>
                    <ref target="ref/uislider.html" name="uislider" init="U">
                        <purpose>Create slider component</purpose>
                    </ref>
                    <ref target="ref/uispinner.html" name="uispinner" init="U">
                        <purpose>Create spinner component</purpose>
                    </ref>
                    <ref target="ref/uitable.html" name="uitable" init="U">
                        <purpose>Create table user interface component</purpose>
                    </ref>
                    <ref target="ref/uitextarea.html" name="uitextarea" init="U">
                        <purpose>Create text area component</purpose>
                    </ref>
                    <ref target="ref/uitogglebutton.html" name="uitogglebutton" init="U">
                        <purpose>Create toggle button component</purpose>
                    </ref>
                    <ref target="ref/uitree.html" name="uitree" init="U">
                        <purpose>Create tree component</purpose>
                    </ref>
                    <ref target="ref/uitreenode.html" name="uitreenode" init="U">
                        <purpose>Create tree node component</purpose>
                    </ref>
                    <ref target="ref/uicontextmenu.html" name="uicontextmenu" init="U">
                        <purpose>Create context menu component</purpose>
                    </ref>
                    <ref target="ref/uimenu.html" name="uimenu" init="U">
                        <purpose>Create menu or menu items</purpose>
                    </ref>
                    <ref target="ref/uipushtool.html" name="uipushtool" init="U">
                        <purpose>Create push tool in toolbar</purpose>
                    </ref>
                    <ref target="ref/uitoggletool.html" name="uitoggletool" init="U">
                        <purpose>Create toggle tool in toolbar</purpose>
                    </ref>
                    <ref target="ref/uitoolbar.html" name="uitoolbar" init="U">
                        <purpose>Create toolbar in figure</purpose>
                    </ref>
                    <ref target="ref/uigauge.html" name="uigauge" init="U">
                        <purpose>Create gauge component</purpose>
                    </ref>
                    <ref target="ref/uiknob.html" name="uiknob" init="U">
                        <purpose>Create knob component</purpose>
                    </ref>
                    <ref target="ref/uilamp.html" name="uilamp" init="U">
                        <purpose>Create lamp component</purpose>
                    </ref>
                    <ref target="ref/uiswitch.html" name="uiswitch" init="U">
                        <purpose>Create slider switch, rocker switch, or toggle switch component</purpose>
                    </ref>
                    <ref target="ref/uihtml.html" name="uihtml" init="U">
                        <purpose>Create HTML UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.ui.container.tree.expand.html" name="expand" init="E">
                        <purpose>Expand tree node</purpose>
                    </ref>
                    <ref target="ref/matlab.ui.container.tree.collapse.html" name="collapse" init="C">
                        <purpose>Collapse tree node</purpose>
                    </ref>
                    <ref target="ref/matlab.ui.container.treenode.move.html" name="move" init="M">
                        <purpose>Move tree node</purpose>
                    </ref>
                    <ref target="ref/matlab.ui.container.tree.scroll.html" name="scroll" init="S">
                        <purpose>Scroll to location within container, list box, or tree</purpose>
                    </ref>
                    <ref target="ref/matlab.ui.container.contextmenu.open.html" name="open" init="O">
                        <purpose>Open context menu at location within UI figure</purpose>
                    </ref>
                    <ref target="ref/uistyle.html" name="uistyle" init="U">
                        <purpose>Create style for table UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.ui.control.tableappd.addstyle.html" name="addStyle" init="A">
                        <purpose>Add style to table UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.ui.control.tableappd.removestyle.html" name="removeStyle" init="R">
                        <purpose>Remove style from table UI component</purpose>
                    </ref>
                    <ref target="ref/uialert.html" name="uialert" init="U">
                        <purpose>Display alert dialog box</purpose>
                    </ref>
                    <ref target="ref/uiconfirm.html" name="uiconfirm" init="U">
                        <purpose>Create confirmation dialog box</purpose>
                    </ref>
                    <ref target="ref/uiprogressdlg.html" name="uiprogressdlg" init="U">
                        <purpose>Create progress dialog box</purpose>
                    </ref>
                    <ref target="ref/uisetcolor.html" name="uisetcolor" init="U">
                        <purpose>Open color picker</purpose>
                    </ref>
                    <ref target="ref/uigetfile.html" name="uigetfile" init="U">
                        <purpose>Open file selection dialog box</purpose>
                    </ref>
                    <ref target="ref/uiputfile.html" name="uiputfile" init="U">
                        <purpose>Open dialog box for saving files</purpose>
                    </ref>
                    <ref target="ref/uigetdir.html" name="uigetdir" init="U">
                        <purpose>Open folder selection dialog box</purpose>
                    </ref>
                    <ref target="ref/uiopen.html" name="uiopen" init="U">
                        <purpose>Open file selection dialog box and load selected file into workspace</purpose>
                    </ref>
                    <ref target="ref/uisave.html" name="uisave" init="U">
                        <purpose>Open dialog box for saving variables to MAT-file</purpose>
                    </ref>
                </cat>
                <cat target="develop-apps-using-the-figure-function.html">
                    <title>figure-Based Apps</title>
                    <ref target="ref/axes.html" name="axes" init="A">
                        <purpose>Create Cartesian axes</purpose>
                    </ref>
                    <ref target="ref/uicontrol.html" name="uicontrol" init="U">
                        <purpose>Create user interface control</purpose>
                    </ref>
                    <ref target="ref/uitable.html" name="uitable" init="U">
                        <purpose>Create table user interface component</purpose>
                    </ref>
                    <ref target="ref/uipanel.html" name="uipanel" init="U">
                        <purpose>Create panel container</purpose>
                    </ref>
                    <ref target="ref/uibuttongroup.html" name="uibuttongroup" init="U">
                        <purpose>Create button group to manage radio buttons and toggle buttons</purpose>
                    </ref>
                    <ref target="ref/uitab.html" name="uitab" init="U">
                        <purpose>Create tabbed panel</purpose>
                    </ref>
                    <ref target="ref/uitabgroup.html" name="uitabgroup" init="U">
                        <purpose>Create container for tabbed panels</purpose>
                    </ref>
                    <ref target="ref/uimenu.html" name="uimenu" init="U">
                        <purpose>Create menu or menu items</purpose>
                    </ref>
                    <ref target="ref/uicontextmenu.html" name="uicontextmenu" init="U">
                        <purpose>Create context menu component</purpose>
                    </ref>
                    <ref target="ref/uitoolbar.html" name="uitoolbar" init="U">
                        <purpose>Create toolbar in figure</purpose>
                    </ref>
                    <ref target="ref/uipushtool.html" name="uipushtool" init="U">
                        <purpose>Create push tool in toolbar</purpose>
                    </ref>
                    <ref target="ref/uitoggletool.html" name="uitoggletool" init="U">
                        <purpose>Create toggle tool in toolbar</purpose>
                    </ref>
                    <ref target="ref/align.html" name="align" init="A">
                        <purpose>Align UI components and graphics objects</purpose>
                    </ref>
                    <ref target="ref/movegui.html" name="movegui" init="M">
                        <purpose>Move figure to specified location on screen</purpose>
                    </ref>
                    <ref target="ref/getpixelposition.html" name="getpixelposition" init="G">
                        <purpose>Get component position in pixels</purpose>
                    </ref>
                    <ref target="ref/setpixelposition.html" name="setpixelposition" init="S">
                        <purpose>Set component position in pixels</purpose>
                    </ref>
                    <ref target="ref/listfonts.html" name="listfonts" init="L">
                        <purpose>List available system fonts</purpose>
                    </ref>
                    <ref target="ref/textwrap.html" name="textwrap" init="T">
                        <purpose>Wrap text for user interface control</purpose>
                    </ref>
                    <ref target="ref/uistack.html" name="uistack" init="U">
                        <purpose>Reorder visual stacking of UI components</purpose>
                    </ref>
                    <ref target="ref/errordlg.html" name="errordlg" init="E">
                        <purpose>Create error dialog box</purpose>
                    </ref>
                    <ref target="ref/warndlg.html" name="warndlg" init="W">
                        <purpose>Create warning dialog box</purpose>
                    </ref>
                    <ref target="ref/msgbox.html" name="msgbox" init="M">
                        <purpose>Create message dialog box</purpose>
                    </ref>
                    <ref target="ref/helpdlg.html" name="helpdlg" init="H">
                        <purpose>Create help dialog box</purpose>
                    </ref>
                    <ref target="ref/waitbar.html" name="waitbar" init="W">
                        <purpose>Create or update wait bar dialog box</purpose>
                    </ref>
                    <ref target="ref/questdlg.html" name="questdlg" init="Q">
                        <purpose>Create question dialog box</purpose>
                    </ref>
                    <ref target="ref/inputdlg.html" name="inputdlg" init="I">
                        <purpose>Create dialog box to gather user input</purpose>
                    </ref>
                    <ref target="ref/listdlg.html" name="listdlg" init="L">
                        <purpose>Create list selection dialog box</purpose>
                    </ref>
                    <ref target="ref/uisetcolor.html" name="uisetcolor" init="U">
                        <purpose>Open color picker</purpose>
                    </ref>
                    <ref target="ref/uisetfont.html" name="uisetfont" init="U">
                        <purpose>Open font selection dialog box</purpose>
                    </ref>
                    <ref target="ref/export2wsdlg.html" name="export2wsdlg" init="E">
                        <purpose>Create dialog box for exporting variables to workspace</purpose>
                    </ref>
                    <ref target="ref/uigetfile.html" name="uigetfile" init="U">
                        <purpose>Open file selection dialog box</purpose>
                    </ref>
                    <ref target="ref/uiputfile.html" name="uiputfile" init="U">
                        <purpose>Open dialog box for saving files</purpose>
                    </ref>
                    <ref target="ref/uigetdir.html" name="uigetdir" init="U">
                        <purpose>Open folder selection dialog box</purpose>
                    </ref>
                    <ref target="ref/uiopen.html" name="uiopen" init="U">
                        <purpose>Open file selection dialog box and load selected file into workspace</purpose>
                    </ref>
                    <ref target="ref/uisave.html" name="uisave" init="U">
                        <purpose>Open dialog box for saving variables to MAT-file</purpose>
                    </ref>
                    <ref target="ref/printdlg.html" name="printdlg" init="P">
                        <purpose>Open figure Print dialog box</purpose>
                    </ref>
                    <ref target="ref/printpreview.html" name="printpreview" init="P">
                        <purpose>Open figure Print Preview dialog box</purpose>
                    </ref>
                    <ref target="ref/exportsetupdlg.html" name="exportsetupdlg" init="E">
                        <purpose>Open figure Export Setup dialog box</purpose>
                    </ref>
                    <ref target="ref/dialog.html" name="dialog" init="D">
                        <purpose>Create empty modal dialog box</purpose>
                    </ref>
                    <ref target="ref/uigetpref.html" name="uigetpref" init="U">
                        <purpose>Create dialog box that opens according to user preference</purpose>
                    </ref>
                    <ref target="ref/uiwait.html" name="uiwait" init="U">
                        <purpose>Block program execution and wait to resume</purpose>
                    </ref>
                    <ref target="ref/uiresume.html" name="uiresume" init="U">
                        <purpose>Resume execution of blocked program</purpose>
                    </ref>
                    <ref target="ref/waitfor.html" name="waitfor" init="W">
                        <purpose>Block execution and wait for condition</purpose>
                    </ref>
                    <ref target="ref/waitforbuttonpress.html" name="waitforbuttonpress" init="W">
                        <purpose>Wait for click or key press</purpose>
                    </ref>
                    <ref target="ref/closereq.html" name="closereq" init="C">
                        <purpose>Default figure close request function</purpose>
                    </ref>
                    <ref target="ref/getappdata.html" name="getappdata" init="G">
                        <purpose>Retrieve application-defined data</purpose>
                    </ref>
                    <ref target="ref/setappdata.html" name="setappdata" init="S">
                        <purpose>Store application-defined data</purpose>
                    </ref>
                    <ref target="ref/isappdata.html" name="isappdata" init="I">
                        <purpose>True if application-defined data exists</purpose>
                    </ref>
                    <ref target="ref/rmappdata.html" name="rmappdata" init="R">
                        <purpose>Remove application-defined data</purpose>
                    </ref>
                    <ref target="ref/guidata.html" name="guidata" init="G">
                        <purpose>Store or retrieve UI data</purpose>
                    </ref>
                    <ref target="ref/guihandles.html" name="guihandles" init="G">
                        <purpose>Create structure containing all child objects of Figure</purpose>
                    </ref>
                    <ref target="ref/uisetpref.html" name="uisetpref" init="U">
                        <purpose>Manage preferences used in uigetpref</purpose>
                    </ref>
                    <ref target="ref/actxcontrol.html" name="actxcontrol" init="A" unlisted="y">
                        <purpose>(To be removed) Create Microsoft ActiveX control in figure window</purpose>
                    </ref>
                    <ref target="ref/menu.html" name="menu" init="M" unlisted="y">
                        <purpose>(Not recommended) Create multiple-choice dialog box</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="packaging-guis-as-apps.html">
                <title>Package and Share Apps</title>
                <ref target="ref/matlab.apputil.create.html" name="matlab.apputil.create" init="M">
                    <purpose>Create or modify app project file interactively using the Package App dialog box</purpose>
                </ref>
                <ref target="ref/matlab.apputil.package.html" name="matlab.apputil.package" init="M">
                    <purpose>Package app files into a .mlappinstall file</purpose>
                </ref>
                <ref target="ref/matlab.apputil.install.html" name="matlab.apputil.install" init="M">
                    <purpose>Install app from a .mlappinstall file</purpose>
                </ref>
                <ref target="ref/matlab.apputil.run.html" name="matlab.apputil.run" init="M">
                    <purpose>Run app programmatically</purpose>
                </ref>
                <ref target="ref/matlab.apputil.getinstalledappinfo.html" name="matlab.apputil.getInstalledAppInfo" init="M">
                    <purpose>List installed app information</purpose>
                </ref>
                <ref target="ref/matlab.apputil.uninstall.html" name="matlab.apputil.uninstall" init="M">
                    <purpose>Uninstall app</purpose>
                </ref>
            </cat>
            <cat target="migrate-guide-apps.html">
                <title>Migrate GUIDE Apps</title>
                <ref target="ref/guide.html" name="guide" init="G">
                    <purpose>(To be removed) Create or edit UI file in GUIDE</purpose>
                </ref>
            </cat>
        </cat>
        <cat target="software-development.html">
            <title>Software Development Tools</title>
            <cat target="debugging-code.html">
                <title>Debugging and Analysis</title>
                <ref target="ref/dbclear.html" name="dbclear" init="D">
                    <purpose>Remove breakpoints</purpose>
                </ref>
                <ref target="ref/dbcont.html" name="dbcont" init="D">
                    <purpose>Resume execution</purpose>
                </ref>
                <ref target="ref/dbdown.html" name="dbdown" init="D">
                    <purpose>Reverse dbup workspace shift</purpose>
                </ref>
                <ref target="ref/dbquit.html" name="dbquit" init="D">
                    <purpose>Quit debug mode</purpose>
                </ref>
                <ref target="ref/dbstack.html" name="dbstack" init="D">
                    <purpose>Function call stack</purpose>
                </ref>
                <ref target="ref/dbstatus.html" name="dbstatus" init="D">
                    <purpose>List all breakpoints</purpose>
                </ref>
                <ref target="ref/dbstep.html" name="dbstep" init="D">
                    <purpose>Execute next executable line from current breakpoint</purpose>
                </ref>
                <ref target="ref/dbstop.html" name="dbstop" init="D">
                    <purpose>Set breakpoints for debugging</purpose>
                </ref>
                <ref target="ref/dbtype.html" name="dbtype" init="D">
                    <purpose>Display file with line numbers</purpose>
                </ref>
                <ref target="ref/dbup.html" name="dbup" init="D">
                    <purpose>Shift current workspace to workspace of caller in debug mode</purpose>
                </ref>
                <ref target="ref/keyboard.html" name="keyboard" init="K">
                    <purpose>Give control to keyboard</purpose>
                </ref>
                <ref target="ref/echo.html" name="echo" init="E">
                    <purpose>Display statements during function execution</purpose>
                </ref>
                <ref target="ref/checkcode.html" name="checkcode" init="C">
                    <purpose>Check MATLAB code files for possible problems</purpose>
                </ref>
                <ref target="ref/mlintrpt.html" name="mlintrpt" init="M">
                    <purpose>Run checkcode for file or folder</purpose>
                </ref>
                <ref target="ref/codecompatibilityreport.html" name="codeCompatibilityReport" init="C">
                    <purpose>Create code compatibility report</purpose>
                </ref>
                <ref target="ref/codecompatibilityanalysis.analyzecodecompatibility.html" name="analyzeCodeCompatibility" init="A">
                    <purpose>Create code compatibility analysis results</purpose>
                </ref>
                <ref target="ref/codecompatibilityanalysis.html" name="CodeCompatibilityAnalysis" init="C" unlisted="y">
                    <purpose>Code compatibility analysis results</purpose>
                </ref>
                <ref target="ref/mlint.html" name="mlint" init="M" unlisted="y">
                    <purpose>Check MATLAB code files for possible problems</purpose>
                </ref>
            </cat>
            <cat target="performance-and-memory.html">
                <title>Performance and Memory</title>
                <ref target="ref/timeit.html" name="timeit" init="T">
                    <purpose>Measure time required to run function</purpose>
                </ref>
                <ref target="ref/tic.html" name="tic" init="T">
                    <ext name="codegen" value="limited"/>
                    <purpose>Start stopwatch timer</purpose>
                </ref>
                <ref target="ref/toc.html" name="toc" init="T">
                    <ext name="codegen" value="limited"/>
                    <purpose>Read elapsed time from stopwatch</purpose>
                </ref>
                <ref target="ref/cputime.html" name="cputime" init="C">
                    <purpose>Elapsed CPU time</purpose>
                </ref>
                <ref target="ref/profile.html" name="profile" init="P">
                    <purpose>Profile execution time for functions</purpose>
                </ref>
                <ref target="ref/bench.html" name="bench" init="B">
                    <purpose>MATLAB benchmark</purpose>
                </ref>
                <ref target="ref/memory.html" name="memory" init="M">
                    <purpose>Display memory information</purpose>
                </ref>
                <ref target="ref/inmem.html" name="inmem" init="I">
                    <purpose>Names of functions, MEX-files, classes in memory</purpose>
                </ref>
                <ref target="ref/pack.html" name="pack" init="P">
                    <purpose>Consolidate workspace memory</purpose>
                </ref>
                <ref target="ref/memoize.html" name="memoize" init="M">
                    <purpose>Add memoization semantics to function handle</purpose>
                </ref>
                <ref target="ref/memoizedfunction.html" name="MemoizedFunction" init="M">
                    <purpose>Call memoized function and cache results</purpose>
                </ref>
                <ref target="ref/clearallmemoizedcaches.html" name="clearAllMemoizedCaches" init="C">
                    <purpose>Clear caches for all MemoizedFunction objects</purpose>
                </ref>
                <ref target="ref/profsave.html" name="profsave" init="P" unlisted="y">
                    <purpose>Save profile report in HTML format</purpose>
                </ref>
                <ref target="ref/stats.html" name="stats" init="S" unlisted="y">
                    <purpose>Return cached values and statistics for MemoizedFunction object</purpose>
                </ref>
                <ref target="ref/clearcache.html" name="clearCache" init="C" unlisted="y">
                    <purpose>Clear cache for MemoizedFunction object</purpose>
                </ref>
            </cat>
            <cat target="projects.html">
                <title>Projects</title>
                <ref target="ref/currentproject.html" name="currentProject" init="C">
                    <purpose>Get current project</purpose>
                </ref>
                <ref target="ref/openproject.html" name="openProject" init="O">
                    <purpose>Load an existing project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.isloaded.html" name="isLoaded" init="I">
                    <purpose>Determine if project is loaded</purpose>
                </ref>
                <ref target="ref/matlab.project.project.reload.html" name="reload" init="R">
                    <purpose>Reload project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.close.html" name="close" init="C">
                    <purpose>Close project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.export.html" name="export" init="E">
                    <purpose>Export project to archive</purpose>
                </ref>
                <ref target="ref/matlab.project.createproject.html" name="matlab.project.createProject" init="M">
                    <purpose>Create blank project</purpose>
                </ref>
                <ref target="ref/matlab.project.deleteproject.html" name="matlab.project.deleteProject" init="M">
                    <purpose>Stop folder management and delete project definition files</purpose>
                </ref>
                <ref target="ref/matlab.project.loadproject.html" name="matlab.project.loadProject" init="M">
                    <purpose>Load project</purpose>
                </ref>
                <ref target="ref/matlab.project.rootproject.html" name="matlab.project.rootProject" init="M">
                    <purpose>Get root project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addfile.html" name="addFile" init="A">
                    <purpose>Add file or folder to project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addfolderincludingchildfiles.html" name="addFolderIncludingChildFiles" init="A">
                    <purpose>Add folder and child files to project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removefile.html" name="removeFile" init="R">
                    <purpose>Remove file from project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addpath.html" name="addPath" init="A">
                    <purpose>Add folder to project path</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removepath.html" name="removePath" init="R">
                    <purpose>Remove folder from project path</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addreference.html" name="addReference" init="A">
                    <purpose>Add referenced project to project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removereference.html" name="removeReference" init="R">
                    <purpose>Remove project reference</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addstartupfile.html" name="addStartupFile" init="A">
                    <purpose>Add startup file to project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addshutdownfile.html" name="addShutdownFile" init="A">
                    <purpose>Add shutdown file to project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removestartupfile.html" name="removeStartupFile" init="R">
                    <purpose>Remove startup file from project startup list</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removeshutdownfile.html" name="removeShutdownFile" init="R">
                    <purpose>Remove shutdown file from project shutdown list</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addshortcut.html" name="addShortcut" init="A">
                    <purpose>Add shortcut to project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removeshortcut.html" name="removeShortcut" init="R">
                    <purpose>Remove shortcut from project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.addlabel.html" name="addLabel" init="A">
                    <purpose>Attach label to project file</purpose>
                </ref>
                <ref target="ref/matlab.project.project.createlabel.html" name="createLabel" init="C">
                    <purpose>Create project label</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removelabel.html" name="removeLabel" init="R">
                    <purpose>Remove label from project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.findlabel.html" name="findLabel" init="F">
                    <purpose>Get project file label</purpose>
                </ref>
                <ref target="ref/matlab.project.project.createcategory.html" name="createCategory" init="C">
                    <purpose>Create category of project labels</purpose>
                </ref>
                <ref target="ref/matlab.project.project.findcategory.html" name="findCategory" init="F">
                    <purpose>Find project category of labels</purpose>
                </ref>
                <ref target="ref/matlab.project.project.removecategory.html" name="removeCategory" init="R">
                    <purpose>Remove project category of labels</purpose>
                </ref>
                <ref target="ref/matlab.project.project.findfile.html" name="findFile" init="F">
                    <purpose>Find project file by name</purpose>
                </ref>
                <ref target="ref/matlab.project.project.listmodifiedfiles.html" name="listModifiedFiles" init="L">
                    <purpose>List modified files in project</purpose>
                </ref>
                <ref target="ref/matlab.project.project.listrequiredfiles.html" name="listRequiredFiles" init="L">
                    <purpose>Get project file dependencies</purpose>
                </ref>
                <ref target="ref/matlab.project.project.refreshsourcecontrol.html" name="refreshSourceControl" init="R">
                    <purpose>Update source control status of project files</purpose>
                </ref>
                <ref target="ref/matlab.project.project.runchecks.html" name="runChecks" init="R">
                    <purpose>Run all project checks</purpose>
                </ref>
                <ref target="ref/matlab.project.project.updatedependencies.html" name="updateDependencies" init="U">
                    <purpose>Update project dependencies</purpose>
                </ref>
                <ref target="ref/matlab.project.project.html" name="matlab.project.Project" init="M">
                    <purpose>Project object</purpose>
                </ref>
            </cat>
            <cat target="source-control.html">
                <title>Source Control Integration</title>
                <ref target="ref/checkin.html" name="checkin" init="C" unlisted="y">
                    <purpose>(Has been removed) Check files into source control system (UNIX platforms)</purpose>
                </ref>
                <ref target="ref/checkout.html" name="checkout" init="C" unlisted="y">
                    <purpose>(Has been removed) Check files out of source control system (UNIX platforms)</purpose>
                </ref>
                <ref target="ref/cmopts.html" name="cmopts" init="C" unlisted="y">
                    <purpose>(Has been removed) Name of source control system</purpose>
                </ref>
                <ref target="ref/customverctrl.html" name="customverctrl" init="C" unlisted="y">
                    <purpose>(Has been removed) Allow custom source control system (UNIX platforms)</purpose>
                </ref>
                <ref target="ref/undocheckout.html" name="undocheckout" init="U" unlisted="y">
                    <purpose>(Has been removed) Undo previous checkout from source control system (UNIX platforms)</purpose>
                </ref>
                <ref target="ref/verctrl.html" name="verctrl" init="V" unlisted="y">
                    <purpose>(Has been removed) Source control actions (Windows platforms)</purpose>
                </ref>
            </cat>
            <cat target="matlab-unit-test-framework.html">
                <title>Testing Frameworks</title>
                <cat target="script-based-unit-tests.html">
                    <title>Script-Based Unit Tests</title>
                    <ref target="ref/assert.html" name="assert" init="A">
                        <ext name="codegen" value="limited"/>
                        <ext name="gpuarrays" value="yes"/>
                        <purpose>Throw error if condition false</purpose>
                    </ref>
                    <ref target="ref/runtests.html" name="runtests" init="R">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Run set of tests</purpose>
                    </ref>
                    <ref target="ref/testsuite.html" name="testsuite" init="T">
                        <purpose>Create suite of tests</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testresult-class.html" name="TestResult" init="T">
                        <purpose>Result of running test suite</purpose>
                    </ref>
                </cat>
                <cat target="function-based-unit-tests.html">
                    <title>Function-Based Unit Tests</title>
                    <ref target="ref/functiontests.html" name="functiontests" init="F">
                        <purpose>Create array of tests from handles to local functions</purpose>
                    </ref>
                    <ref target="ref/runtests.html" name="runtests" init="R">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Run set of tests</purpose>
                    </ref>
                    <ref target="ref/testsuite.html" name="testsuite" init="T">
                        <purpose>Create suite of tests</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.run.html" name="run" init="R">
                        <purpose>Run TestSuite array using TestRunner object configured for text output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.test-class.html" name="Test" init="T">
                        <purpose>Specification of single test method</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.functiontestcase-class.html" name="FunctionTestCase" init="F">
                        <purpose>TestCase used for function-based tests</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testresult-class.html" name="TestResult" init="T">
                        <purpose>Result of running test suite</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.applyfixture.html" name="applyFixture" init="A" unlisted="y">
                        <purpose>Use fixture with TestCase</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.log.html" name="log" init="L" unlisted="y">
                        <purpose>Record diagnostic information during test execution</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.onfailure.html" name="onFailure" init="O" unlisted="y">
                        <purpose>Dynamically add diagnostics for test failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.addplugin.html" name="addPlugin" init="A" unlisted="y">
                        <purpose>Add plugin to TestRunner object</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.runinparallel.html" name="runInParallel" init="R" unlisted="y">
                        <purpose>Run all tests in TestSuite array in parallel</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.withnoplugins.html" name="matlab.unittest.TestRunner.withNoPlugins" init="M" unlisted="y">
                        <purpose>Create simplest runner possible</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.withtextoutput.html" name="matlab.unittest.TestRunner.withTextOutput" init="M" unlisted="y">
                        <purpose>Create TestRunner object for command window output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromclass.html" name="matlab.unittest.TestSuite.fromClass" init="M" unlisted="y">
                        <purpose>Create suite from TestCase class</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromfile.html" name="matlab.unittest.TestSuite.fromFile" init="M" unlisted="y">
                        <purpose>Create TestSuite array from test file</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromfolder.html" name="matlab.unittest.TestSuite.fromFolder" init="M" unlisted="y">
                        <purpose>Create TestSuite array from all tests in folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromname.html" name="matlab.unittest.TestSuite.fromName" init="M" unlisted="y">
                        <purpose>Create Test object from name of test element</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.selectif.html" name="selectIf" init="S" unlisted="y">
                        <purpose>Select test suite elements that satisfy conditions</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.sortbyfixtures.html" name="sortByFixtures" init="S" unlisted="y">
                        <purpose>Reorder test suite based on shared fixtures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.eventually-class.html" name="matlab.unittest.constraints.Eventually" init="M" unlisted="y">
                        <purpose>Poll for value to asynchronously satisfy constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hasfield-class.html" name="matlab.unittest.constraints.HasField" init="M" unlisted="y">
                        <purpose>Constraint specifying structure containing particular field</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isanything-class.html" name="matlab.unittest.constraints.IsAnything" init="M" unlisted="y">
                        <purpose>Constraint specifying any value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isequalto-class.html" name="matlab.unittest.constraints.IsEqualTo" init="M" unlisted="y">
                        <purpose>General constraint to compare for equality</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfalse-class.html" name="matlab.unittest.constraints.IsFalse" init="M" unlisted="y">
                        <purpose>Constraint specifying false value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfile-class.html" name="matlab.unittest.constraints.IsFile" init="M" unlisted="y">
                        <purpose>Constraint specifying value points to file</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfolder-class.html" name="matlab.unittest.constraints.IsFolder" init="M" unlisted="y">
                        <purpose>Constraint specifying value points to folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issamesetas-class.html" name="matlab.unittest.constraints.IsSameSetAs" init="M" unlisted="y">
                        <purpose>Constraint specifying set contains same elements as another set</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issamehandleas-class.html" name="matlab.unittest.constraints.IsSameHandleAs" init="M" unlisted="y">
                        <purpose>Constraint specifying handle instance same as another</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isscalar-class.html" name="matlab.unittest.constraints.IsScalar" init="M" unlisted="y">
                        <purpose>Constraint specifying scalar value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.istrue-class.html" name="matlab.unittest.constraints.IsTrue" init="M" unlisted="y">
                        <purpose>Constraint specifying true value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.returnstrue-class.html" name="matlab.unittest.constraints.ReturnsTrue" init="M" unlisted="y">
                        <purpose>Constraint specifying function handle that returns true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issuesnowarnings-class.html" name="matlab.unittest.constraints.IssuesNoWarnings" init="M" unlisted="y">
                        <purpose>Constraint specifying function that issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issueswarnings-class.html" name="matlab.unittest.constraints.IssuesWarnings" init="M" unlisted="y">
                        <purpose>Constraint specifying function that issues expected warning profile</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.throws-class.html" name="matlab.unittest.constraints.Throws" init="M" unlisted="y">
                        <purpose>Constraint specifying function handle that throws MException</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isgreaterthan-class.html" name="matlab.unittest.constraints.IsGreaterThan" init="M" unlisted="y">
                        <purpose>Constraint specifying value greater than another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isgreaterthanorequalto-class.html" name="matlab.unittest.constraints.IsGreaterThanOrEqualTo" init="M" unlisted="y">
                        <purpose>Constraint specifying value greater than or equal to another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.islessthan-class.html" name="matlab.unittest.constraints.IsLessThan" init="M" unlisted="y">
                        <purpose>Constraint specifying value less than another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.islessthanorequalto-class.html" name="matlab.unittest.constraints.IsLessThanOrEqualTo" init="M" unlisted="y">
                        <purpose>Constraint specifying value less than or equal to another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.haselementcount-class.html" name="matlab.unittest.constraints.HasElementCount" init="M" unlisted="y">
                        <purpose>Constraint specifying expected number of elements</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.haslength-class.html" name="matlab.unittest.constraints.HasLength" init="M" unlisted="y">
                        <purpose>Constraint specifying expected length of array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hassize-class.html" name="matlab.unittest.constraints.HasSize" init="M" unlisted="y">
                        <purpose>Constraint specifying expected size of array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isempty-class.html" name="matlab.unittest.constraints.IsEmpty" init="M" unlisted="y">
                        <purpose>Constraint specifying empty value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isinstanceof-class.html" name="matlab.unittest.constraints.IsInstanceOf" init="M" unlisted="y">
                        <purpose>Constraint specifying inclusion in given class hierarchy</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isofclass-class.html" name="matlab.unittest.constraints.IsOfClass" init="M" unlisted="y">
                        <purpose>Constraint specifying class type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.containssubstring-class.html" name="matlab.unittest.constraints.ContainsSubstring" init="M" unlisted="y">
                        <purpose>Constraint specifying string containing substring</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.endswithsubstring-class.html" name="matlab.unittest.constraints.EndsWithSubstring" init="M" unlisted="y">
                        <purpose>Constraint specifying string ending with substring</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issubstringof-class.html" name="matlab.unittest.constraints.IsSubstringOf" init="M" unlisted="y">
                        <purpose>Constraint specifying substring of another string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.matches-class.html" name="matlab.unittest.constraints.Matches" init="M" unlisted="y">
                        <purpose>Constraint specifying string matches regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.startswithsubstring-class.html" name="matlab.unittest.constraints.StartsWithSubstring" init="M" unlisted="y">
                        <purpose>Constraint specifying string starting with substring</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hasinf-class.html" name="matlab.unittest.constraints.HasInf" init="M" unlisted="y">
                        <purpose>Constraint specifying array containing any infinite value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hasnan-class.html" name="matlab.unittest.constraints.HasNaN" init="M" unlisted="y">
                        <purpose>Constraint specifying array containing NaN value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfinite-class.html" name="matlab.unittest.constraints.IsFinite" init="M" unlisted="y">
                        <purpose>Constraint specifying finite value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isreal-class.html" name="matlab.unittest.constraints.IsReal" init="M" unlisted="y">
                        <purpose>Constraint specifying real valued array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issparse-class.html" name="matlab.unittest.constraints.IsSparse" init="M" unlisted="y">
                        <purpose>Constraint specifying sparse array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.anycellof-class.html" name="matlab.unittest.constraints.AnyCellOf" init="M" unlisted="y">
                        <purpose>Test if any element of cell array meets constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.anyelementof-class.html" name="matlab.unittest.constraints.AnyElementOf" init="M" unlisted="y">
                        <purpose>Test if any element of array meets constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.everycellof-class.html" name="matlab.unittest.constraints.EveryCellOf" init="M" unlisted="y">
                        <purpose>Test if all elements of cell array meet constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.everyelementof-class.html" name="matlab.unittest.constraints.EveryElementOf" init="M" unlisted="y">
                        <purpose>Test if all elements of array meet constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.absolutetolerance-class.html" name="matlab.unittest.constraints.AbsoluteTolerance" init="M" unlisted="y">
                        <purpose>Absolute numeric tolerance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.relativetolerance-class.html" name="matlab.unittest.constraints.RelativeTolerance" init="M" unlisted="y">
                        <purpose>Relative numeric tolerance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.cellcomparator-class.html" name="matlab.unittest.constraints.CellComparator" init="M" unlisted="y">
                        <purpose>Comparator for cell arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.logicalcomparator-class.html" name="matlab.unittest.constraints.LogicalComparator" init="M" unlisted="y">
                        <purpose>Comparator for two logical values</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.numericcomparator-class.html" name="matlab.unittest.constraints.NumericComparator" init="M" unlisted="y">
                        <purpose>Comparator for numeric data types</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.objectcomparator-class.html" name="matlab.unittest.constraints.ObjectComparator" init="M" unlisted="y">
                        <purpose>Comparator for MATLAB or Java objects</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.publicpropertycomparator-class.html" name="matlab.unittest.constraints.PublicPropertyComparator" init="M" unlisted="y">
                        <purpose>Comparator for public properties of MATLAB objects</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.stringcomparator-class.html" name="matlab.unittest.constraints.StringComparator" init="M" unlisted="y">
                        <purpose>Comparator for two strings, character arrays, or cell arrays of character arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.structcomparator-class.html" name="matlab.unittest.constraints.StructComparator" init="M" unlisted="y">
                        <purpose>Comparator for MATLAB structure arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.displaydiagnostic-class.html" name="matlab.unittest.diagnostics.DisplayDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic using a value's displayed output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.functionhandlediagnostic-class.html" name="matlab.unittest.diagnostics.FunctionHandleDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic using a function's displayed output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.frameworkdiagnostic-class.html" name="matlab.unittest.diagnostics.FrameworkDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic provided by testing framework</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.stringdiagnostic-class.html" name="matlab.unittest.diagnostics.StringDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic using string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.loggeddiagnosticeventdata-class.html" name="matlab.unittest.diagnostics.LoggedDiagnosticEventData" init="M" unlisted="y">
                        <purpose>Event data for DiagnosticLogged event listeners</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertionfailedexception-class.html" name="matlab.unittest.qualifications.AssertionFailedException" init="M" unlisted="y">
                        <purpose>Exception used for assertion failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumptionfailedexception-class.html" name="matlab.unittest.qualifications.AssumptionFailedException" init="M" unlisted="y">
                        <purpose>Exception used for assumption failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.exceptioneventdata-class.html" name="matlab.unittest.qualifications.ExceptionEventData" init="M" unlisted="y">
                        <purpose>Event data for ExceptionThrown event listeners</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertionfailedexception-class.html" name="matlab.unittest.qualifications.FatalAssertionFailedException" init="M" unlisted="y">
                        <purpose>Exception used for fatal assertion failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.qualificationeventdata-class.html" name="matlab.unittest.qualifications.QualificationEventData" init="M" unlisted="y">
                        <purpose>Event data for qualification event listeners</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable-class.html" name="matlab.unittest.qualifications.Assertable" init="M" unlisted="y">
                        <purpose>Qualification to validate preconditions of a test</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertclass.html" name="assertClass" init="A" unlisted="y">
                        <purpose>Assert exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertempty.html" name="assertEmpty" init="A" unlisted="y">
                        <purpose>Assert value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertequal.html" name="assertEqual" init="A" unlisted="y">
                        <purpose>Assert value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.asserterror.html" name="assertError" init="A" unlisted="y">
                        <purpose>Assert function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertfail.html" name="assertFail" init="A" unlisted="y">
                        <purpose>Produce unconditional assertion failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertfalse.html" name="assertFalse" init="A" unlisted="y">
                        <purpose>Assert value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertgreaterthan.html" name="assertGreaterThan" init="A" unlisted="y">
                        <purpose>Assert value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertgreaterthanorequal.html" name="assertGreaterThanOrEqual" init="A" unlisted="y">
                        <purpose>Assert value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertinstanceof.html" name="assertInstanceOf" init="A" unlisted="y">
                        <purpose>Assert value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertlength.html" name="assertLength" init="A" unlisted="y">
                        <purpose>Assert value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertlessthan.html" name="assertLessThan" init="A" unlisted="y">
                        <purpose>Assert value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertlessthanorequal.html" name="assertLessThanOrEqual" init="A" unlisted="y">
                        <purpose>Assert value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertmatches.html" name="assertMatches" init="A" unlisted="y">
                        <purpose>Assert string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnotempty.html" name="assertNotEmpty" init="A" unlisted="y">
                        <purpose>Assert value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnotequal.html" name="assertNotEqual" init="A" unlisted="y">
                        <purpose>Assert value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnotsamehandle.html" name="assertNotSameHandle" init="A" unlisted="y">
                        <purpose>Assert value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnumelements.html" name="assertNumElements" init="A" unlisted="y">
                        <purpose>Assert value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertreturnstrue.html" name="assertReturnsTrue" init="A" unlisted="y">
                        <purpose>Assert function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertsamehandle.html" name="assertSameHandle" init="A" unlisted="y">
                        <purpose>Assert two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertsize.html" name="assertSize" init="A" unlisted="y">
                        <purpose>Assert value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertsubstring.html" name="assertSubstring" init="A" unlisted="y">
                        <purpose>Assert string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertthat.html" name="assertThat" init="A" unlisted="y">
                        <purpose>Assert that value meets specified constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.asserttrue.html" name="assertTrue" init="A" unlisted="y">
                        <purpose>Assert value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertwarning.html" name="assertWarning" init="A" unlisted="y">
                        <purpose>Assert function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertwarningfree.html" name="assertWarningFree" init="A" unlisted="y">
                        <purpose>Assert function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable-class.html" name="matlab.unittest.qualifications.Assumable" init="M" unlisted="y">
                        <purpose>Qualification to filter test content</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeclass.html" name="assumeClass" init="A" unlisted="y">
                        <purpose>Assume exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeempty.html" name="assumeEmpty" init="A" unlisted="y">
                        <purpose>Assume value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeequal.html" name="assumeEqual" init="A" unlisted="y">
                        <purpose>Assume value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeerror.html" name="assumeError" init="A" unlisted="y">
                        <purpose>Assume function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumefail.html" name="assumeFail" init="A" unlisted="y">
                        <purpose>Produce unconditional assumption failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumefalse.html" name="assumeFalse" init="A" unlisted="y">
                        <purpose>Assume value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumegreaterthan.html" name="assumeGreaterThan" init="A" unlisted="y">
                        <purpose>Assume value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumegreaterthanorequal.html" name="assumeGreaterThanOrEqual" init="A" unlisted="y">
                        <purpose>Assume value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeinstanceof.html" name="assumeInstanceOf" init="A" unlisted="y">
                        <purpose>Assume value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumelength.html" name="assumeLength" init="A" unlisted="y">
                        <purpose>Assume value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumelessthan.html" name="assumeLessThan" init="A" unlisted="y">
                        <purpose>Assume value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumelessthanorequal.html" name="assumeLessThanOrEqual" init="A" unlisted="y">
                        <purpose>Assume value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumematches.html" name="assumeMatches" init="A" unlisted="y">
                        <purpose>Assume string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenotempty.html" name="assumeNotEmpty" init="A" unlisted="y">
                        <purpose>Assume value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenotequal.html" name="assumeNotEqual" init="A" unlisted="y">
                        <purpose>Assume value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenotsamehandle.html" name="assumeNotSameHandle" init="A" unlisted="y">
                        <purpose>Assume value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenumelements.html" name="assumeNumElements" init="A" unlisted="y">
                        <purpose>Assume value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumereturnstrue.html" name="assumeReturnsTrue" init="A" unlisted="y">
                        <purpose>Assume function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumesamehandle.html" name="assumeSameHandle" init="A" unlisted="y">
                        <purpose>Assume two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumesize.html" name="assumeSize" init="A" unlisted="y">
                        <purpose>Assume value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumesubstring.html" name="assumeSubstring" init="A" unlisted="y">
                        <purpose>Assume string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumethat.html" name="assumeThat" init="A" unlisted="y">
                        <purpose>Assume value meets specified constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumetrue.html" name="assumeTrue" init="A" unlisted="y">
                        <purpose>Assume value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumewarning.html" name="assumeWarning" init="A" unlisted="y">
                        <purpose>Assume function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumewarningfree.html" name="assumeWarningFree" init="A" unlisted="y">
                        <purpose>Assume function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable-class.html" name="matlab.unittest.qualifications.FatalAssertable" init="M" unlisted="y">
                        <purpose>Qualification to abort test execution</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertclass.html" name="fatalAssertClass" init="F" unlisted="y">
                        <purpose>Fatally assert exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertempty.html" name="fatalAssertEmpty" init="F" unlisted="y">
                        <purpose>Fatally assert value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertequal.html" name="fatalAssertEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalasserterror.html" name="fatalAssertError" init="F" unlisted="y">
                        <purpose>Fatally assert function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertfail.html" name="fatalAssertFail" init="F" unlisted="y">
                        <purpose>Produce unconditional fatal assertion failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertfalse.html" name="fatalAssertFalse" init="F" unlisted="y">
                        <purpose>Fatally assert value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertgreaterthan.html" name="fatalAssertGreaterThan" init="F" unlisted="y">
                        <purpose>Fatally assert value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertgreaterthanorequal.html" name="fatalAssertGreaterThanOrEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertinstanceof.html" name="fatalAssertInstanceOf" init="F" unlisted="y">
                        <purpose>Fatally assert value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertlength.html" name="fatalAssertLength" init="F" unlisted="y">
                        <purpose>Fatally assert value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertlessthan.html" name="fatalAssertLessThan" init="F" unlisted="y">
                        <purpose>Fatally assert value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertlessthanorequal.html" name="fatalAssertLessThanOrEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertmatches.html" name="fatalAssertMatches" init="F" unlisted="y">
                        <purpose>Fatally assert string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnotempty.html" name="fatalAssertNotEmpty" init="F" unlisted="y">
                        <purpose>Fatally assert value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnotequal.html" name="fatalAssertNotEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnotsamehandle.html" name="fatalAssertNotSameHandle" init="F" unlisted="y">
                        <purpose>Fatally assert value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnumelements.html" name="fatalAssertNumElements" init="F" unlisted="y">
                        <purpose>Fatally assert value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertreturnstrue.html" name="fatalAssertReturnsTrue" init="F" unlisted="y">
                        <purpose>Fatally assert function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertsamehandle.html" name="fatalAssertSameHandle" init="F" unlisted="y">
                        <purpose>Fatally assert two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertsize.html" name="fatalAssertSize" init="F" unlisted="y">
                        <purpose>Fatally assert value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertsubstring.html" name="fatalAssertSubstring" init="F" unlisted="y">
                        <purpose>Fatally assert string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertthat.html" name="fatalAssertThat" init="F" unlisted="y">
                        <purpose>Fatally assert value meets specified constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalasserttrue.html" name="fatalAssertTrue" init="F" unlisted="y">
                        <purpose>Fatally assert value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertwarning.html" name="fatalAssertWarning" init="F" unlisted="y">
                        <purpose>Fatally assert function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertwarningfree.html" name="fatalAssertWarningFree" init="F" unlisted="y">
                        <purpose>Fatally assert function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable-class.html" name="matlab.unittest.qualifications.Verifiable" init="M" unlisted="y">
                        <purpose>Qualification to produce soft failure conditions</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyclass.html" name="verifyClass" init="V" unlisted="y">
                        <purpose>Verify exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyempty.html" name="verifyEmpty" init="V" unlisted="y">
                        <purpose>Verify value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyequal.html" name="verifyEqual" init="V" unlisted="y">
                        <purpose>Verify value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyerror.html" name="verifyError" init="V" unlisted="y">
                        <purpose>Verify function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyfail.html" name="verifyFail" init="V" unlisted="y">
                        <purpose>Produce unconditional verification failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyfalse.html" name="verifyFalse" init="V" unlisted="y">
                        <purpose>Verify value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifygreaterthan.html" name="verifyGreaterThan" init="V" unlisted="y">
                        <purpose>Verify value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifygreaterthanorequal.html" name="verifyGreaterThanOrEqual" init="V" unlisted="y">
                        <purpose>Verify value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyinstanceof.html" name="verifyInstanceOf" init="V" unlisted="y">
                        <purpose>Verify value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifylength.html" name="verifyLength" init="V" unlisted="y">
                        <purpose>Verify value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifylessthan.html" name="verifyLessThan" init="V" unlisted="y">
                        <purpose>Verify value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifylessthanorequal.html" name="verifyLessThanOrEqual" init="V" unlisted="y">
                        <purpose>Verify value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifymatches.html" name="verifyMatches" init="V" unlisted="y">
                        <purpose>Verify string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynotempty.html" name="verifyNotEmpty" init="V" unlisted="y">
                        <purpose>Verify value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynotequal.html" name="verifyNotEqual" init="V" unlisted="y">
                        <purpose>Verify value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynotsamehandle.html" name="verifyNotSameHandle" init="V" unlisted="y">
                        <purpose>Verify value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynumelements.html" name="verifyNumElements" init="V" unlisted="y">
                        <purpose>Verify value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyreturnstrue.html" name="verifyReturnsTrue" init="V" unlisted="y">
                        <purpose>Verify function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifysamehandle.html" name="verifySameHandle" init="V" unlisted="y">
                        <purpose>Verify two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifysize.html" name="verifySize" init="V" unlisted="y">
                        <purpose>Verify value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifysubstring.html" name="verifySubstring" init="V" unlisted="y">
                        <purpose>Verify string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifythat.html" name="verifyThat" init="V" unlisted="y">
                        <purpose>Verify value meets given constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifytrue.html" name="verifyTrue" init="V" unlisted="y">
                        <purpose>Verify value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifywarning.html" name="verifyWarning" init="V" unlisted="y">
                        <purpose>Verify function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifywarningfree.html" name="verifyWarningFree" init="V" unlisted="y">
                        <purpose>Verify function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hasbasefolder-class.html" name="matlab.unittest.selectors.HasBaseFolder" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hasname-class.html" name="matlab.unittest.selectors.HasName" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by name</purpose>
                    </ref>
                </cat>
                <cat target="class-based-unit-tests.html">
                    <title>Class-Based Unit Tests</title>
                    <ref target="ref/runtests.html" name="runtests" init="R">
                        <ext name="parallelautosupport" value="limited"/>
                        <purpose>Run set of tests</purpose>
                    </ref>
                    <ref target="ref/testsuite.html" name="testsuite" init="T">
                        <purpose>Create suite of tests</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.run.html" name="run" init="R">
                        <purpose>Run TestSuite array using TestRunner object configured for text output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.run.html" name="run" init="R">
                        <purpose>Run all tests in TestSuite array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.run.html" name="run" init="R">
                        <purpose>Run TestCase test</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase-class.html" name="matlab.unittest.TestCase" init="M">
                        <purpose>Superclass of all matlab.unittest test classes</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite-class.html" name="matlab.unittest.TestSuite" init="M">
                        <purpose>Class for grouping tests to run</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.test-class.html" name="matlab.unittest.Test" init="M">
                        <purpose>Specification of single test method</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner-class.html" name="matlab.unittest.TestRunner" init="M">
                        <purpose>Class for running tests in matlab.unittest framework</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testresult-class.html" name="matlab.unittest.TestResult" init="M">
                        <purpose>Result of running test suite</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.failurediagnosticsplugin-class.html" name="matlab.unittest.plugins.FailureDiagnosticsPlugin" init="M" unlisted="y">
                        <purpose>(Not recommended) Plugin to show diagnostics on failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.scope-class.html" name="matlab.unittest.Scope" init="M" unlisted="y">
                        <purpose>Test scope enumeration class</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.verbosity-class.html" name="matlab.unittest.Verbosity" init="M" unlisted="y">
                        <purpose>Verbosity level enumeration class</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.addteardown.html" name="addTeardown" init="A" unlisted="y">
                        <purpose>Dynamically add teardown routine to TestCase instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.applyfixture.html" name="applyFixture" init="A" unlisted="y">
                        <purpose>Use fixture with TestCase</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.forinteractiveuse.html" name="matlab.unittest.TestCase.forInteractiveUse" init="M" unlisted="y">
                        <purpose>Create TestCase for interactive use</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.getsharedtestfixtures.html" name="getSharedTestFixtures" init="G" unlisted="y">
                        <purpose>Provide access to shared test fixtures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.log.html" name="log" init="L" unlisted="y">
                        <purpose>Record diagnostic information during test execution</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testcase.onfailure.html" name="onFailure" init="O" unlisted="y">
                        <purpose>Dynamically add diagnostics for test failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.addplugin.html" name="addPlugin" init="A" unlisted="y">
                        <purpose>Add plugin to TestRunner object</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.runinparallel.html" name="runInParallel" init="R" unlisted="y">
                        <purpose>Run all tests in TestSuite array in parallel</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.withnoplugins.html" name="matlab.unittest.TestRunner.withNoPlugins" init="M" unlisted="y">
                        <purpose>Create simplest runner possible</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testrunner.withtextoutput.html" name="matlab.unittest.TestRunner.withTextOutput" init="M" unlisted="y">
                        <purpose>Create TestRunner object for command window output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromclass.html" name="matlab.unittest.TestSuite.fromClass" init="M" unlisted="y">
                        <purpose>Create suite from TestCase class</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromfile.html" name="matlab.unittest.TestSuite.fromFile" init="M" unlisted="y">
                        <purpose>Create TestSuite array from test file</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromfolder.html" name="matlab.unittest.TestSuite.fromFolder" init="M" unlisted="y">
                        <purpose>Create TestSuite array from all tests in folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.frommethod.html" name="matlab.unittest.TestSuite.fromMethod" init="M" unlisted="y">
                        <purpose>Create TestSuite array from single test method</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromname.html" name="matlab.unittest.TestSuite.fromName" init="M" unlisted="y">
                        <purpose>Create Test object from name of test element</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.frompackage.html" name="matlab.unittest.TestSuite.fromPackage" init="M" unlisted="y">
                        <purpose>Create TestSuite array from all tests in package</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.fromproject.html" name="matlab.unittest.TestSuite.fromProject" init="M" unlisted="y">
                        <purpose>Create test suite array from tests in project</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.selectif.html" name="selectIf" init="S" unlisted="y">
                        <purpose>Select test suite elements that satisfy conditions</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.testsuite.sortbyfixtures.html" name="sortByFixtures" init="S" unlisted="y">
                        <purpose>Reorder test suite based on shared fixtures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.eventually-class.html" name="matlab.unittest.constraints.Eventually" init="M" unlisted="y">
                        <purpose>Poll for value to asynchronously satisfy constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hasfield-class.html" name="matlab.unittest.constraints.HasField" init="M" unlisted="y">
                        <purpose>Constraint specifying structure containing particular field</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hasuniqueelements-class.html" name="matlab.unittest.constraints.HasUniqueElements" init="M" unlisted="y">
                        <purpose>Constraint specifying set contains unique elements</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isanything-class.html" name="matlab.unittest.constraints.IsAnything" init="M" unlisted="y">
                        <purpose>Constraint specifying any value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isequalto-class.html" name="matlab.unittest.constraints.IsEqualTo" init="M" unlisted="y">
                        <purpose>General constraint to compare for equality</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfalse-class.html" name="matlab.unittest.constraints.IsFalse" init="M" unlisted="y">
                        <purpose>Constraint specifying false value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfile-class.html" name="matlab.unittest.constraints.IsFile" init="M" unlisted="y">
                        <purpose>Constraint specifying value points to file</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfolder-class.html" name="matlab.unittest.constraints.IsFolder" init="M" unlisted="y">
                        <purpose>Constraint specifying value points to folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issamehandleas-class.html" name="matlab.unittest.constraints.IsSameHandleAs" init="M" unlisted="y">
                        <purpose>Constraint specifying handle instance same as another</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issamesetas-class.html" name="matlab.unittest.constraints.IsSameSetAs" init="M" unlisted="y">
                        <purpose>Constraint specifying set contains same elements as another set</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isscalar-class.html" name="matlab.unittest.constraints.IsScalar" init="M" unlisted="y">
                        <purpose>Constraint specifying scalar value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issubsetof-class.html" name="matlab.unittest.constraints.IsSubsetOf" init="M" unlisted="y">
                        <purpose>Constraint specifying actual set is subset of expected set</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issupersetof-class.html" name="matlab.unittest.constraints.IsSupersetOf" init="M" unlisted="y">
                        <purpose>Constraint specifying actual set is superset of expected set</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.istrue-class.html" name="matlab.unittest.constraints.IsTrue" init="M" unlisted="y">
                        <purpose>Constraint specifying true value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.returnstrue-class.html" name="matlab.unittest.constraints.ReturnsTrue" init="M" unlisted="y">
                        <purpose>Constraint specifying function handle that returns true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issuesnowarnings-class.html" name="matlab.unittest.constraints.IssuesNoWarnings" init="M" unlisted="y">
                        <purpose>Constraint specifying function that issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issueswarnings-class.html" name="matlab.unittest.constraints.IssuesWarnings" init="M" unlisted="y">
                        <purpose>Constraint specifying function that issues expected warning profile</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.throws-class.html" name="matlab.unittest.constraints.Throws" init="M" unlisted="y">
                        <purpose>Constraint specifying function handle that throws MException</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isgreaterthan-class.html" name="matlab.unittest.constraints.IsGreaterThan" init="M" unlisted="y">
                        <purpose>Constraint specifying value greater than another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isgreaterthanorequalto-class.html" name="matlab.unittest.constraints.IsGreaterThanOrEqualTo" init="M" unlisted="y">
                        <purpose>Constraint specifying value greater than or equal to another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.islessthan-class.html" name="matlab.unittest.constraints.IsLessThan" init="M" unlisted="y">
                        <purpose>Constraint specifying value less than another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.islessthanorequalto-class.html" name="matlab.unittest.constraints.IsLessThanOrEqualTo" init="M" unlisted="y">
                        <purpose>Constraint specifying value less than or equal to another value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.haselementcount-class.html" name="matlab.unittest.constraints.HasElementCount" init="M" unlisted="y">
                        <purpose>Constraint specifying expected number of elements</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.haslength-class.html" name="matlab.unittest.constraints.HasLength" init="M" unlisted="y">
                        <purpose>Constraint specifying expected length of array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hassize-class.html" name="matlab.unittest.constraints.HasSize" init="M" unlisted="y">
                        <purpose>Constraint specifying expected size of array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isempty-class.html" name="matlab.unittest.constraints.IsEmpty" init="M" unlisted="y">
                        <purpose>Constraint specifying empty value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isinstanceof-class.html" name="matlab.unittest.constraints.IsInstanceOf" init="M" unlisted="y">
                        <purpose>Constraint specifying inclusion in given class hierarchy</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isofclass-class.html" name="matlab.unittest.constraints.IsOfClass" init="M" unlisted="y">
                        <purpose>Constraint specifying class type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.containssubstring-class.html" name="matlab.unittest.constraints.ContainsSubstring" init="M" unlisted="y">
                        <purpose>Constraint specifying string containing substring</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.endswithsubstring-class.html" name="matlab.unittest.constraints.EndsWithSubstring" init="M" unlisted="y">
                        <purpose>Constraint specifying string ending with substring</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issubstringof-class.html" name="matlab.unittest.constraints.IsSubstringOf" init="M" unlisted="y">
                        <purpose>Constraint specifying substring of another string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.matches-class.html" name="matlab.unittest.constraints.Matches" init="M" unlisted="y">
                        <purpose>Constraint specifying string matches regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.startswithsubstring-class.html" name="matlab.unittest.constraints.StartsWithSubstring" init="M" unlisted="y">
                        <purpose>Constraint specifying string starting with substring</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hasinf-class.html" name="matlab.unittest.constraints.HasInf" init="M" unlisted="y">
                        <purpose>Constraint specifying array containing any infinite value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.hasnan-class.html" name="matlab.unittest.constraints.HasNaN" init="M" unlisted="y">
                        <purpose>Constraint specifying array containing NaN value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isfinite-class.html" name="matlab.unittest.constraints.IsFinite" init="M" unlisted="y">
                        <purpose>Constraint specifying finite value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.isreal-class.html" name="matlab.unittest.constraints.IsReal" init="M" unlisted="y">
                        <purpose>Constraint specifying real valued array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.issparse-class.html" name="matlab.unittest.constraints.IsSparse" init="M" unlisted="y">
                        <purpose>Constraint specifying sparse array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.anycellof-class.html" name="matlab.unittest.constraints.AnyCellOf" init="M" unlisted="y">
                        <purpose>Test if any element of cell array meets constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.anyelementof-class.html" name="matlab.unittest.constraints.AnyElementOf" init="M" unlisted="y">
                        <purpose>Test if any element of array meets constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.everycellof-class.html" name="matlab.unittest.constraints.EveryCellOf" init="M" unlisted="y">
                        <purpose>Test if all elements of cell array meet constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.everyelementof-class.html" name="matlab.unittest.constraints.EveryElementOf" init="M" unlisted="y">
                        <purpose>Test if all elements of array meet constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.absolutetolerance-class.html" name="matlab.unittest.constraints.AbsoluteTolerance" init="M" unlisted="y">
                        <purpose>Absolute numeric tolerance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.relativetolerance-class.html" name="matlab.unittest.constraints.RelativeTolerance" init="M" unlisted="y">
                        <purpose>Relative numeric tolerance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.cellcomparator-class.html" name="matlab.unittest.constraints.CellComparator" init="M" unlisted="y">
                        <purpose>Comparator for cell arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.logicalcomparator-class.html" name="matlab.unittest.constraints.LogicalComparator" init="M" unlisted="y">
                        <purpose>Comparator for two logical values</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.numericcomparator-class.html" name="matlab.unittest.constraints.NumericComparator" init="M" unlisted="y">
                        <purpose>Comparator for numeric data types</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.objectcomparator-class.html" name="matlab.unittest.constraints.ObjectComparator" init="M" unlisted="y">
                        <purpose>Comparator for MATLAB or Java objects</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.publicpropertycomparator-class.html" name="matlab.unittest.constraints.PublicPropertyComparator" init="M" unlisted="y">
                        <purpose>Comparator for public properties of MATLAB objects</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.publicpropertycomparator.supportingallvalues.html" name="matlab.unittest.constraints.PublicPropertyComparator.supportingAllValues" init="M" unlisted="y">
                        <purpose>Comparator for public properties that supports any value in recursion</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.stringcomparator-class.html" name="matlab.unittest.constraints.StringComparator" init="M" unlisted="y">
                        <purpose>Comparator for two strings, character arrays, or cell arrays of character arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.structcomparator-class.html" name="matlab.unittest.constraints.StructComparator" init="M" unlisted="y">
                        <purpose>Comparator for MATLAB structure arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.tablecomparator-class.html" name="matlab.unittest.constraints.TableComparator" init="M" unlisted="y">
                        <purpose>Comparator for MATLAB tables</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.andconstraint-class.html" name="matlab.unittest.constraints.AndConstraint" init="M" unlisted="y">
                        <purpose>Boolean conjunction of two constraints</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.orconstraint-class.html" name="matlab.unittest.constraints.OrConstraint" init="M" unlisted="y">
                        <purpose>Boolean disjunction of two constraints</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.notconstraint-class.html" name="matlab.unittest.constraints.NotConstraint" init="M" unlisted="y">
                        <purpose>Boolean complement of constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.andtolerance-class.html" name="matlab.unittest.constraints.AndTolerance" init="M" unlisted="y">
                        <purpose>Boolean conjunction of two tolerances</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.ortolerance-class.html" name="matlab.unittest.constraints.OrTolerance" init="M" unlisted="y">
                        <purpose>Boolean disjunction of two constraints</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.displaydiagnostic-class.html" name="matlab.unittest.diagnostics.DisplayDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic using a value's displayed output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.functionhandlediagnostic-class.html" name="matlab.unittest.diagnostics.FunctionHandleDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic using a function's displayed output</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.stringdiagnostic-class.html" name="matlab.unittest.diagnostics.StringDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic using string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.loggeddiagnosticeventdata-class.html" name="matlab.unittest.diagnostics.LoggedDiagnosticEventData" init="M" unlisted="y">
                        <purpose>Event data for DiagnosticLogged event listeners</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.diagnosticresult-class.html" name="matlab.unittest.diagnostics.DiagnosticResult" init="M" unlisted="y">
                        <purpose>Result of a diagnosed Diagnostic instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.figurediagnostic-class.html" name="matlab.unittest.diagnostics.FigureDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic to save specified figure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.frameworkdiagnostic-class.html" name="matlab.unittest.diagnostics.FrameworkDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic provided by testing framework</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.screenshotdiagnostic-class.html" name="matlab.unittest.diagnostics.ScreenshotDiagnostic" init="M" unlisted="y">
                        <purpose>Diagnostic to capture screen as image file</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.fileartifact-class.html" name="matlab.unittest.diagnostics.FileArtifact" init="M" unlisted="y">
                        <purpose>Artifact associated with a file on disk</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.fileartifact.copyto.html" name="copyTo" init="C" unlisted="y">
                        <purpose>Copy artifacts to new location</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.currentfolderfixture-class.html" name="matlab.unittest.fixtures.CurrentFolderFixture" init="M" unlisted="y">
                        <purpose>Fixture for changing current working folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.pathfixture-class.html" name="matlab.unittest.fixtures.PathFixture" init="M" unlisted="y">
                        <purpose>Fixture for adding a folder to the MATLAB path</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.projectfixture-class.html" name="matlab.unittest.fixtures.ProjectFixture" init="M" unlisted="y">
                        <purpose>Fixture for loading project</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.suppressedwarningsfixture-class.html" name="matlab.unittest.fixtures.SuppressedWarningsFixture" init="M" unlisted="y">
                        <purpose>Fixture to suppress display of warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.temporaryfolderfixture-class.html" name="matlab.unittest.fixtures.TemporaryFolderFixture" init="M" unlisted="y">
                        <purpose>Fixture for creating a temporary folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.workingfolderfixture-class.html" name="matlab.unittest.fixtures.WorkingFolderFixture" init="M" unlisted="y">
                        <purpose>Fixture for creating and changing to temporary working folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.parameters.classsetupparameter-class.html" name="matlab.unittest.parameters.ClassSetupParameter" init="M" unlisted="y">
                        <purpose>Specification of Class Setup Parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.parameters.emptyparameter-class.html" name="matlab.unittest.parameters.EmptyParameter" init="M" unlisted="y">
                        <purpose>Empty parameter implementation</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.parameters.methodsetupparameter-class.html" name="matlab.unittest.parameters.MethodSetupParameter" init="M" unlisted="y">
                        <purpose>Specification of Method Setup Parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.parameters.parameter-class.html" name="matlab.unittest.parameters.Parameter" init="M" unlisted="y">
                        <purpose>Base class for parameters</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.parameters.parameter.fromdata.html" name="matlab.unittest.parameters.Parameter.fromData" init="M" unlisted="y">
                        <purpose>Create parameters from data</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.parameters.testparameter-class.html" name="matlab.unittest.parameters.TestParameter" init="M" unlisted="y">
                        <purpose>Specification of Test Parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.codecoverageplugin-class.html" name="matlab.unittest.plugins.CodeCoveragePlugin" init="M" unlisted="y">
                        <purpose>Plugin that produces a code coverage report</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.codecoverageplugin.forfolder.html" name="matlab.unittest.plugins.CodeCoveragePlugin.forFolder" init="M" unlisted="y">
                        <purpose>Construct CodeCoveragePlugin for folders</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.codecoverageplugin.forpackage.html" name="matlab.unittest.plugins.CodeCoveragePlugin.forPackage" init="M" unlisted="y">
                        <purpose>Construct CodeCoveragePlugin for packages</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.codecoverageplugin.forfile.html" name="matlab.unittest.plugins.CodeCoveragePlugin.forFile" init="M" unlisted="y">
                        <purpose>Construct CodeCoveragePlugin for files</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticsoutputplugin-class.html" name="matlab.unittest.plugins.DiagnosticsOutputPlugin" init="M" unlisted="y">
                        <purpose>Plugin to direct diagnostics to output stream</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticsrecordingplugin-class.html" name="matlab.unittest.plugins.DiagnosticsRecordingPlugin" init="M" unlisted="y">
                        <purpose>Plugin to record diagnostics on test results</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticsvalidationplugin-class.html" name="matlab.unittest.plugins.DiagnosticsValidationPlugin" init="M" unlisted="y">
                        <purpose>Plugin to help validate diagnostic code</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.failonwarningsplugin-class.html" name="matlab.unittest.plugins.FailOnWarningsPlugin" init="M" unlisted="y">
                        <purpose>Plugin to fail tests that issue warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.stoponfailuresplugin-class.html" name="matlab.unittest.plugins.StopOnFailuresPlugin" init="M" unlisted="y">
                        <purpose>Plugin to debug test failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testreportplugin-class.html" name="matlab.unittest.plugins.TestReportPlugin" init="M" unlisted="y">
                        <purpose>Plugin that produces a test result report</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testreportplugin.producingdocx.html" name="matlab.unittest.plugins.TestReportPlugin.producingDOCX" init="M" unlisted="y">
                        <purpose>Constructs plugin that produces .docx report</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testreportplugin.producinghtml.html" name="matlab.unittest.plugins.TestReportPlugin.producingHTML" init="M" unlisted="y">
                        <purpose>Constructs plugin that produces .html report</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testreportplugin.producingpdf.html" name="matlab.unittest.plugins.TestReportPlugin.producingPDF" init="M" unlisted="y">
                        <purpose>Constructs plugin that produces .pdf report</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunprogressplugin-class.html" name="matlab.unittest.plugins.TestRunProgressPlugin" init="M" unlisted="y">
                        <purpose>Plugin that reports test run progress</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.tapplugin-class.html" name="matlab.unittest.plugins.TAPPlugin" init="M" unlisted="y">
                        <purpose>Plugin that produces Test Anything Protocol stream</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.tapplugin.producingoriginalformat.html" name="matlab.unittest.plugins.TAPPlugin.producingOriginalFormat" init="M" unlisted="y">
                        <purpose>Construct TAPPlugin for original TAP format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.tapplugin.producingversion13.html" name="matlab.unittest.plugins.TAPPlugin.producingVersion13" init="M" unlisted="y">
                        <purpose>Construct TAPPlugin for version 13 TAP format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.tofile-class.html" name="matlab.unittest.plugins.ToFile" init="M" unlisted="y">
                        <purpose>Output stream to write text output to file</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.tostandardoutput-class.html" name="matlab.unittest.plugins.ToStandardOutput" init="M" unlisted="y">
                        <purpose>Output stream to display text information to screen</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.touniquefile-class.html" name="matlab.unittest.plugins.ToUniqueFile" init="M" unlisted="y">
                        <purpose>Output stream to write text output to unique file</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.loggingplugin-class.html" name="matlab.unittest.plugins.LoggingPlugin" init="M" unlisted="y">
                        <purpose>Plugin to report diagnostic messages</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.loggingplugin.withverbosity.html" name="matlab.unittest.plugins.LoggingPlugin.withVerbosity" init="M" unlisted="y">
                        <purpose>Construct LoggingPlugin for messages of specified verbosity</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.xmlplugin-class.html" name="matlab.unittest.plugins.XMLPlugin" init="M" unlisted="y">
                        <purpose>Plugin that writes test results in XML format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.xmlplugin.producingjunitformat.html" name="matlab.unittest.plugins.XMLPlugin.producingJUnitFormat" init="M" unlisted="y">
                        <purpose>Construct plugin to write test results in XML format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testreport.docxtestreportplugin-class.html" name="matlab.unittest.plugins.testreport.DOCXTestReportPlugin" init="M" unlisted="y">
                        <purpose>TestReportPlugin that creates a test report in .docx format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testreport.htmltestreportplugin-class.html" name="matlab.unittest.plugins.testreport.HTMLTestReportPlugin" init="M" unlisted="y">
                        <purpose>TestReportPlugin that creates a test report in .html format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testreport.pdftestreportplugin-class.html" name="matlab.unittest.plugins.testreport.PDFTestReportPlugin" init="M" unlisted="y">
                        <purpose>TestReportPlugin that creates a test report in .pdf format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.codecoverage.coveragereport-class.html" name="matlab.unittest.plugins.codecoverage.CoverageReport" init="M" unlisted="y">
                        <purpose>Format for code coverage report</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.codecoverage.coberturaformat-class.html" name="matlab.unittest.plugins.codecoverage.CoberturaFormat" init="M" unlisted="y">
                        <purpose>Format to create code coverage report using Cobertura XML format</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.codecoverage.profilereport-class.html" name="matlab.unittest.plugins.codecoverage.ProfileReport" init="M" unlisted="y">
                        <purpose>(To be removed) Format to create MATLAB Profiler Coverage Report</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.diagnosticrecord-class.html" name="matlab.unittest.plugins.diagnosticrecord.DiagnosticRecord" init="M" unlisted="y">
                        <purpose>Diagnostic information</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.diagnosticrecord.selectfailed.html" name="selectFailed" init="S" unlisted="y">
                        <purpose>Return diagnostic records for failed events</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.diagnosticrecord.selectincomplete.html" name="selectIncomplete" init="S" unlisted="y">
                        <purpose>Return diagnostic records for incomplete events</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.diagnosticrecord.selectlogged.html" name="selectLogged" init="S" unlisted="y">
                        <purpose>Return diagnostic records for logged events</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.diagnosticrecord.selectpassed.html" name="selectPassed" init="S" unlisted="y">
                        <purpose>Return diagnostic records for passed events</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.exceptiondiagnosticrecord-class.html" name="matlab.unittest.plugins.diagnosticrecord.ExceptionDiagnosticRecord" init="M" unlisted="y">
                        <purpose>Diagnostic information about errors</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.loggeddiagnosticrecord-class.html" name="matlab.unittest.plugins.diagnosticrecord.LoggedDiagnosticRecord" init="M" unlisted="y">
                        <purpose>Diagnostic information about logged events</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.diagnosticrecord.qualificationdiagnosticrecord-class.html" name="matlab.unittest.plugins.diagnosticrecord.QualificationDiagnosticRecord" init="M" unlisted="y">
                        <purpose>Diagnostic information about qualification events</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertionfailedexception-class.html" name="matlab.unittest.qualifications.AssertionFailedException" init="M" unlisted="y">
                        <purpose>Exception used for assertion failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumptionfailedexception-class.html" name="matlab.unittest.qualifications.AssumptionFailedException" init="M" unlisted="y">
                        <purpose>Exception used for assumption failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.exceptioneventdata-class.html" name="matlab.unittest.qualifications.ExceptionEventData" init="M" unlisted="y">
                        <purpose>Event data for ExceptionThrown event listeners</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertionfailedexception-class.html" name="matlab.unittest.qualifications.FatalAssertionFailedException" init="M" unlisted="y">
                        <purpose>Exception used for fatal assertion failures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.qualificationeventdata-class.html" name="matlab.unittest.qualifications.QualificationEventData" init="M" unlisted="y">
                        <purpose>Event data for qualification event listeners</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable-class.html" name="matlab.unittest.qualifications.Assertable" init="M" unlisted="y">
                        <purpose>Qualification to validate preconditions of a test</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertclass.html" name="assertClass" init="A" unlisted="y">
                        <purpose>Assert exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertempty.html" name="assertEmpty" init="A" unlisted="y">
                        <purpose>Assert value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertequal.html" name="assertEqual" init="A" unlisted="y">
                        <purpose>Assert value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.asserterror.html" name="assertError" init="A" unlisted="y">
                        <purpose>Assert function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertfail.html" name="assertFail" init="A" unlisted="y">
                        <purpose>Produce unconditional assertion failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertfalse.html" name="assertFalse" init="A" unlisted="y">
                        <purpose>Assert value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertgreaterthan.html" name="assertGreaterThan" init="A" unlisted="y">
                        <purpose>Assert value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertgreaterthanorequal.html" name="assertGreaterThanOrEqual" init="A" unlisted="y">
                        <purpose>Assert value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertinstanceof.html" name="assertInstanceOf" init="A" unlisted="y">
                        <purpose>Assert value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertlength.html" name="assertLength" init="A" unlisted="y">
                        <purpose>Assert value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertlessthan.html" name="assertLessThan" init="A" unlisted="y">
                        <purpose>Assert value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertlessthanorequal.html" name="assertLessThanOrEqual" init="A" unlisted="y">
                        <purpose>Assert value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertmatches.html" name="assertMatches" init="A" unlisted="y">
                        <purpose>Assert string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnotempty.html" name="assertNotEmpty" init="A" unlisted="y">
                        <purpose>Assert value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnotequal.html" name="assertNotEqual" init="A" unlisted="y">
                        <purpose>Assert value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnotsamehandle.html" name="assertNotSameHandle" init="A" unlisted="y">
                        <purpose>Assert value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertnumelements.html" name="assertNumElements" init="A" unlisted="y">
                        <purpose>Assert value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertreturnstrue.html" name="assertReturnsTrue" init="A" unlisted="y">
                        <purpose>Assert function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertsamehandle.html" name="assertSameHandle" init="A" unlisted="y">
                        <purpose>Assert two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertsize.html" name="assertSize" init="A" unlisted="y">
                        <purpose>Assert value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertsubstring.html" name="assertSubstring" init="A" unlisted="y">
                        <purpose>Assert string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertthat.html" name="assertThat" init="A" unlisted="y">
                        <purpose>Assert that value meets specified constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.asserttrue.html" name="assertTrue" init="A" unlisted="y">
                        <purpose>Assert value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertwarning.html" name="assertWarning" init="A" unlisted="y">
                        <purpose>Assert function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assertable.assertwarningfree.html" name="assertWarningFree" init="A" unlisted="y">
                        <purpose>Assert function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable-class.html" name="matlab.unittest.qualifications.Assumable" init="M" unlisted="y">
                        <purpose>Qualification to filter test content</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeclass.html" name="assumeClass" init="A" unlisted="y">
                        <purpose>Assume exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeempty.html" name="assumeEmpty" init="A" unlisted="y">
                        <purpose>Assume value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeequal.html" name="assumeEqual" init="A" unlisted="y">
                        <purpose>Assume value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeerror.html" name="assumeError" init="A" unlisted="y">
                        <purpose>Assume function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumefail.html" name="assumeFail" init="A" unlisted="y">
                        <purpose>Produce unconditional assumption failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumefalse.html" name="assumeFalse" init="A" unlisted="y">
                        <purpose>Assume value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumegreaterthan.html" name="assumeGreaterThan" init="A" unlisted="y">
                        <purpose>Assume value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumegreaterthanorequal.html" name="assumeGreaterThanOrEqual" init="A" unlisted="y">
                        <purpose>Assume value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumeinstanceof.html" name="assumeInstanceOf" init="A" unlisted="y">
                        <purpose>Assume value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumelength.html" name="assumeLength" init="A" unlisted="y">
                        <purpose>Assume value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumelessthan.html" name="assumeLessThan" init="A" unlisted="y">
                        <purpose>Assume value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumelessthanorequal.html" name="assumeLessThanOrEqual" init="A" unlisted="y">
                        <purpose>Assume value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumematches.html" name="assumeMatches" init="A" unlisted="y">
                        <purpose>Assume string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenotempty.html" name="assumeNotEmpty" init="A" unlisted="y">
                        <purpose>Assume value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenotequal.html" name="assumeNotEqual" init="A" unlisted="y">
                        <purpose>Assume value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenotsamehandle.html" name="assumeNotSameHandle" init="A" unlisted="y">
                        <purpose>Assume value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumenumelements.html" name="assumeNumElements" init="A" unlisted="y">
                        <purpose>Assume value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumereturnstrue.html" name="assumeReturnsTrue" init="A" unlisted="y">
                        <purpose>Assume function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumesamehandle.html" name="assumeSameHandle" init="A" unlisted="y">
                        <purpose>Assume two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumesize.html" name="assumeSize" init="A" unlisted="y">
                        <purpose>Assume value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumesubstring.html" name="assumeSubstring" init="A" unlisted="y">
                        <purpose>Assume string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumethat.html" name="assumeThat" init="A" unlisted="y">
                        <purpose>Assume value meets specified constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumetrue.html" name="assumeTrue" init="A" unlisted="y">
                        <purpose>Assume value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumewarning.html" name="assumeWarning" init="A" unlisted="y">
                        <purpose>Assume function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.assumable.assumewarningfree.html" name="assumeWarningFree" init="A" unlisted="y">
                        <purpose>Assume function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable-class.html" name="matlab.unittest.qualifications.FatalAssertable" init="M" unlisted="y">
                        <purpose>Qualification to abort test execution</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertclass.html" name="fatalAssertClass" init="F" unlisted="y">
                        <purpose>Fatally assert exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertempty.html" name="fatalAssertEmpty" init="F" unlisted="y">
                        <purpose>Fatally assert value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertequal.html" name="fatalAssertEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalasserterror.html" name="fatalAssertError" init="F" unlisted="y">
                        <purpose>Fatally assert function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertfail.html" name="fatalAssertFail" init="F" unlisted="y">
                        <purpose>Produce unconditional fatal assertion failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertfalse.html" name="fatalAssertFalse" init="F" unlisted="y">
                        <purpose>Fatally assert value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertgreaterthan.html" name="fatalAssertGreaterThan" init="F" unlisted="y">
                        <purpose>Fatally assert value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertgreaterthanorequal.html" name="fatalAssertGreaterThanOrEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertinstanceof.html" name="fatalAssertInstanceOf" init="F" unlisted="y">
                        <purpose>Fatally assert value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertlength.html" name="fatalAssertLength" init="F" unlisted="y">
                        <purpose>Fatally assert value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertlessthan.html" name="fatalAssertLessThan" init="F" unlisted="y">
                        <purpose>Fatally assert value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertlessthanorequal.html" name="fatalAssertLessThanOrEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertmatches.html" name="fatalAssertMatches" init="F" unlisted="y">
                        <purpose>Fatally assert string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnotempty.html" name="fatalAssertNotEmpty" init="F" unlisted="y">
                        <purpose>Fatally assert value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnotequal.html" name="fatalAssertNotEqual" init="F" unlisted="y">
                        <purpose>Fatally assert value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnotsamehandle.html" name="fatalAssertNotSameHandle" init="F" unlisted="y">
                        <purpose>Fatally assert value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertnumelements.html" name="fatalAssertNumElements" init="F" unlisted="y">
                        <purpose>Fatally assert value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertreturnstrue.html" name="fatalAssertReturnsTrue" init="F" unlisted="y">
                        <purpose>Fatally assert function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertsamehandle.html" name="fatalAssertSameHandle" init="F" unlisted="y">
                        <purpose>Fatally assert two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertsize.html" name="fatalAssertSize" init="F" unlisted="y">
                        <purpose>Fatally assert value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertsubstring.html" name="fatalAssertSubstring" init="F" unlisted="y">
                        <purpose>Fatally assert string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertthat.html" name="fatalAssertThat" init="F" unlisted="y">
                        <purpose>Fatally assert value meets specified constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalasserttrue.html" name="fatalAssertTrue" init="F" unlisted="y">
                        <purpose>Fatally assert value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertwarning.html" name="fatalAssertWarning" init="F" unlisted="y">
                        <purpose>Fatally assert function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.fatalassertable.fatalassertwarningfree.html" name="fatalAssertWarningFree" init="F" unlisted="y">
                        <purpose>Fatally assert function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable-class.html" name="matlab.unittest.qualifications.Verifiable" init="M" unlisted="y">
                        <purpose>Qualification to produce soft failure conditions</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyclass.html" name="verifyClass" init="V" unlisted="y">
                        <purpose>Verify exact class of specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyempty.html" name="verifyEmpty" init="V" unlisted="y">
                        <purpose>Verify value is empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyequal.html" name="verifyEqual" init="V" unlisted="y">
                        <purpose>Verify value is equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyerror.html" name="verifyError" init="V" unlisted="y">
                        <purpose>Verify function throws specified exception</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyfail.html" name="verifyFail" init="V" unlisted="y">
                        <purpose>Produce unconditional verification failure</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyfalse.html" name="verifyFalse" init="V" unlisted="y">
                        <purpose>Verify value is false</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifygreaterthan.html" name="verifyGreaterThan" init="V" unlisted="y">
                        <purpose>Verify value is greater than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifygreaterthanorequal.html" name="verifyGreaterThanOrEqual" init="V" unlisted="y">
                        <purpose>Verify value is greater than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyinstanceof.html" name="verifyInstanceOf" init="V" unlisted="y">
                        <purpose>Verify value is object of specified type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifylength.html" name="verifyLength" init="V" unlisted="y">
                        <purpose>Verify value has specified length</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifylessthan.html" name="verifyLessThan" init="V" unlisted="y">
                        <purpose>Verify value is less than specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifylessthanorequal.html" name="verifyLessThanOrEqual" init="V" unlisted="y">
                        <purpose>Verify value is less than or equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifymatches.html" name="verifyMatches" init="V" unlisted="y">
                        <purpose>Verify string matches specified regular expression</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynotempty.html" name="verifyNotEmpty" init="V" unlisted="y">
                        <purpose>Verify value is not empty</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynotequal.html" name="verifyNotEqual" init="V" unlisted="y">
                        <purpose>Verify value is not equal to specified value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynotsamehandle.html" name="verifyNotSameHandle" init="V" unlisted="y">
                        <purpose>Verify value is not handle to specified instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifynumelements.html" name="verifyNumElements" init="V" unlisted="y">
                        <purpose>Verify value has specified element count</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifyreturnstrue.html" name="verifyReturnsTrue" init="V" unlisted="y">
                        <purpose>Verify function returns true when evaluated</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifysamehandle.html" name="verifySameHandle" init="V" unlisted="y">
                        <purpose>Verify two values are handles to same instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifysize.html" name="verifySize" init="V" unlisted="y">
                        <purpose>Verify value has specified size</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifysubstring.html" name="verifySubstring" init="V" unlisted="y">
                        <purpose>Verify string contains specified string</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifythat.html" name="verifyThat" init="V" unlisted="y">
                        <purpose>Verify value meets given constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifytrue.html" name="verifyTrue" init="V" unlisted="y">
                        <purpose>Verify value is true</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifywarning.html" name="verifyWarning" init="V" unlisted="y">
                        <purpose>Verify function issues specified warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.qualifications.verifiable.verifywarningfree.html" name="verifyWarningFree" init="V" unlisted="y">
                        <purpose>Verify function issues no warnings</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.andselector-class.html" name="matlab.unittest.selectors.AndSelector" init="M" unlisted="y">
                        <purpose>Boolean conjunction of two selectors</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hasbasefolder-class.html" name="matlab.unittest.selectors.HasBaseFolder" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by folder</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hasname-class.html" name="matlab.unittest.selectors.HasName" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by name</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hasparameter-class.html" name="matlab.unittest.selectors.HasParameter" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by parameterization</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hasprocedurename-class.html" name="matlab.unittest.selectors.HasProcedureName" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by procedure name</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hassharedtestfixture-class.html" name="matlab.unittest.selectors.HasSharedTestFixture" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements that use shared test fixture</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hassuperclass-class.html" name="matlab.unittest.selectors.HasSuperclass" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by test class hierarchy</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.hastag-class.html" name="matlab.unittest.selectors.HasTag" init="M" unlisted="y">
                        <purpose>Selector for TestSuite elements determined by tag</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.notselector-class.html" name="matlab.unittest.selectors.NotSelector" init="M" unlisted="y">
                        <purpose>Boolean complement of selector</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.selectors.orselector-class.html" name="matlab.unittest.selectors.OrSelector" init="M" unlisted="y">
                        <purpose>Boolean disjunction of two selectors</purpose>
                    </ref>
                </cat>
                <cat target="extend-test-framework.html">
                    <title>Extend Unit Testing Framework</title>
                    <ref target="ref/matlab.unittest.constraints.constraint-class.html" name="matlab.unittest.constraints.Constraint" init="M">
                        <purpose>Fundamental interface class for comparisons</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.booleanconstraint-class.html" name="matlab.unittest.constraints.BooleanConstraint" init="M">
                        <purpose>Interface class for Boolean combinations of constraints</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.tolerance-class.html" name="matlab.unittest.constraints.Tolerance" init="M">
                        <purpose>Abstract interface class for tolerances</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture-class.html" name="matlab.unittest.fixtures.Fixture" init="M">
                        <purpose>Interface class for test fixtures</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.diagnostic-class.html" name="matlab.unittest.diagnostics.Diagnostic" init="M">
                        <purpose>Fundamental interface class for matlab.unittest diagnostics</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic-class.html" name="matlab.unittest.diagnostics.ConstraintDiagnostic" init="M">
                        <purpose>Diagnostic with fields common to most constraints</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin-class.html" name="matlab.unittest.plugins.TestRunnerPlugin" init="M">
                        <purpose>Plugin interface for extending TestRunner</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.parallelizable-class.html" name="matlab.unittest.plugins.Parallelizable" init="M">
                        <purpose>Interface for plugins that support running tests in parallel</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.qualifyingplugin-class.html" name="matlab.unittest.plugins.QualifyingPlugin" init="M">
                        <purpose>Interface for plugins that perform system-wide qualifications</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.outputstream-class.html" name="matlab.unittest.plugins.OutputStream" init="M">
                        <purpose>Interface that determines where to send text output</purpose>
                    </ref>
                    <ref target="ref/matlab.test.behavior.missing-class.html" name="matlab.test.behavior.Missing" init="M">
                        <purpose>Test if class satisfies contract for missing values</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.communicationbuffer-class.html" name="matlab.unittest.plugins.plugindata.CommunicationBuffer" init="M" unlisted="y">
                        <purpose>Buffer for parallelizable plugins</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.finalizedresultplugindata-class.html" name="matlab.unittest.plugins.plugindata.FinalizedResultPluginData" init="M" unlisted="y">
                        <purpose>Plugin data containing finalized test result information</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.finalizedsuiteplugindata-class.html" name="matlab.unittest.plugins.plugindata.FinalizedSuitePluginData" init="M" unlisted="y">
                        <purpose>Plugin data containing finalized TestSuite information</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.implicitfixtureplugindata-class.html" name="matlab.unittest.plugins.plugindata.ImplicitFixturePluginData" init="M" unlisted="y">
                        <purpose>Plugin data containing test setup and teardown information</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.plugindata-class.html" name="matlab.unittest.plugins.plugindata.PluginData" init="M" unlisted="y">
                        <purpose>Data object passed to TestRunnerPlugin methods</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.qualificationcontext-class.html" name="matlab.unittest.plugins.plugindata.QualificationContext" init="M" unlisted="y">
                        <purpose>Context for qualifying plugins</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.resultdetails-class.html" name="matlab.unittest.plugins.plugindata.ResultDetails" init="M" unlisted="y">
                        <purpose>Class for modifying test result details</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.runplugindata-class.html" name="matlab.unittest.plugins.plugindata.RunPluginData" init="M" unlisted="y">
                        <purpose>Plugin data describing Test elements being run</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.sharedtestfixtureplugindata-class.html" name="matlab.unittest.plugins.plugindata.SharedTestFixturePluginData" init="M" unlisted="y">
                        <purpose>Plugin data containing shared test fixture information</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.testcontentcreationplugindata-class.html" name="matlab.unittest.plugins.plugindata.TestContentCreationPluginData" init="M" unlisted="y">
                        <purpose>Plugin data containing test content creation information</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.plugindata.testsuiterunplugindata-class.html" name="matlab.unittest.plugins.plugindata.TestSuiteRunPluginData" init="M" unlisted="y">
                        <purpose>Plugin data describing TestSuite portion being run</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.booleanconstraint.getnegativediagnosticfor.html" name="getNegativeDiagnosticFor" init="G" unlisted="y">
                        <purpose>Produce negated diagnostic for value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.constraint.getdiagnosticfor.html" name="getDiagnosticFor" init="G" unlisted="y">
                        <purpose>Produce diagnostic for compared value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.constraint.satisfiedby.html" name="satisfiedBy" init="S" unlisted="y">
                        <purpose>Determine whether value satisfies constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.tolerance.getdiagnosticfor.html" name="getDiagnosticFor" init="G" unlisted="y">
                        <purpose>Produce diagnostic for two values specified to be within tolerance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.tolerance.satisfiedby.html" name="satisfiedBy" init="S" unlisted="y">
                        <purpose>Determine whether two values are within tolerance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.constraints.tolerance.supports.html" name="supports" init="S" unlisted="y">
                        <purpose>Determine whether tolerance supports specified data type</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture.applyfixture.html" name="applyFixture" init="A" unlisted="y">
                        <purpose>Set up fixture to delegate work to another fixture</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture.log.html" name="log" init="L" unlisted="y">
                        <purpose>Record diagnostic information during fixture setup and teardown</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture.onfailure.html" name="onFailure" init="O" unlisted="y">
                        <purpose>Dynamically add diagnostics for failures during fixture setup and teardown</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture.setup.html" name="setup" init="S" unlisted="y">
                        <purpose>Set up fixture</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture.teardown.html" name="teardown" init="T" unlisted="y">
                        <purpose>Tear down fixture</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture.addteardown.html" name="addTeardown" init="A" unlisted="y">
                        <purpose>Dynamically add teardown routine to Fixture instance</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.fixtures.fixture.iscompatible.html" name="isCompatible" init="I" unlisted="y">
                        <purpose>Determine if two fixtures of the same class are interchangeable</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.addcondition.html" name="addCondition" init="A" unlisted="y">
                        <purpose>Add condition to condition list</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.addconditionsfrom.html" name="addConditionsFrom" init="A" unlisted="y">
                        <purpose>Add condition from another ConstraintDiagnostic to condition list</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.getdisplayablestring.html" name="matlab.unittest.diagnostics.ConstraintDiagnostic.getDisplayableString" init="M" unlisted="y">
                        <purpose>Convert object to string for display</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.getpredescriptionstring.html" name="getPreDescriptionString" init="G" unlisted="y">
                        <purpose>Returns text to be displayed prior to description</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.getpostdescriptionstring.html" name="getPostDescriptionString" init="G" unlisted="y">
                        <purpose>Returns text to be displayed following description</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.getpostconditionstring.html" name="getPostConditionString" init="G" unlisted="y">
                        <purpose>Returns text to be displayed following conditions list</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.getpostactvalstring.html" name="getPostActValString" init="G" unlisted="y">
                        <purpose>Returns text to be displayed following actual value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.constraintdiagnostic.getpostexpvalstring.html" name="getPostExpValString" init="G" unlisted="y">
                        <purpose>Returns text to be displayed following expected value</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.diagnostic.diagnose.html" name="diagnose" init="D" unlisted="y">
                        <purpose>Execute diagnostic action</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.diagnostics.diagnostic.join.html" name="join" init="J" unlisted="y">
                        <purpose>Join multiple diagnostics into a single array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.outputstream.print.html" name="print" init="P" unlisted="y">
                        <purpose>Write text to output stream</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.parallelizable.supportsparallel.html" name="supportsParallel" init="S" unlisted="y">
                        <purpose>Specify when plugin supports running tests in parallel</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.parallelizable.storein.html" name="storeIn" init="S" unlisted="y">
                        <purpose>Store data collected for group of tests</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.parallelizable.retrievefrom.html" name="retrieveFrom" init="R" unlisted="y">
                        <purpose>Retrieve data stored for group of tests</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.qualifyingplugin.assertusing.html" name="assertUsing" init="A" unlisted="y">
                        <purpose>Assert that value satisfies given constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.qualifyingplugin.assumeusing.html" name="assumeUsing" init="A" unlisted="y">
                        <purpose>Assume that value satisfies given constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.qualifyingplugin.fatalassertusing.html" name="fatalAssertUsing" init="F" unlisted="y">
                        <purpose>Fatally assert that value satisfies given constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.qualifyingplugin.verifyusing.html" name="verifyUsing" init="V" unlisted="y">
                        <purpose>Verify that value satisfies given constraint</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.createsharedtestfixture.html" name="createSharedTestFixture" init="C" unlisted="y">
                        <purpose>Extend creation of shared test fixture instances</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.createtestclassinstance.html" name="createTestClassInstance" init="C" unlisted="y">
                        <purpose>Extend creation of class-level TestCase instances</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.createtestmethodinstance.html" name="createTestMethodInstance" init="C" unlisted="y">
                        <purpose>Extend creation of method-level TestCase instances</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.reportfinalizedresult.html" name="reportFinalizedResult" init="R" unlisted="y">
                        <purpose>Enable reporting of finalized test results</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.reportfinalizedsuite.html" name="reportFinalizedSuite" init="R" unlisted="y">
                        <purpose>Extend reporting of finalized TestSuite array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.runsession.html" name="runSession" init="R" unlisted="y">
                        <purpose>Extend running of test session</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.runtest.html" name="runTest" init="R" unlisted="y">
                        <purpose>Extend running of single Test element</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.runtestclass.html" name="runTestClass" init="R" unlisted="y">
                        <purpose>Extend running of Test elements from same class or function</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.runtestsuite.html" name="runTestSuite" init="R" unlisted="y">
                        <purpose>Extend running of TestSuite array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.runtestmethod.html" name="runTestMethod" init="R" unlisted="y">
                        <purpose>Extend running of single test method</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.setupsharedtestfixture.html" name="setupSharedTestFixture" init="S" unlisted="y">
                        <purpose>Extend setting up shared test fixture</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.setuptestclass.html" name="setupTestClass" init="S" unlisted="y">
                        <purpose>Extend setting up test class</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.setuptestmethod.html" name="setupTestMethod" init="S" unlisted="y">
                        <purpose>Extend setting up test method</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.teardownsharedtestfixture.html" name="teardownSharedTestFixture" init="T" unlisted="y">
                        <purpose>Extend tearing down shared test fixture</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.teardowntestclass.html" name="teardownTestClass" init="T" unlisted="y">
                        <purpose>Extend tearing down test class</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.plugins.testrunnerplugin.teardowntestmethod.html" name="teardownTestMethod" init="T" unlisted="y">
                        <purpose>Extend tearing down test method</purpose>
                    </ref>
                </cat>
                <cat target="app-testing-framework.html">
                    <title>App Testing Framework</title>
                    <ref target="ref/matlab.uitest.testcase.press.html" name="press" init="P">
                        <purpose>Perform press gesture on UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.uitest.testcase.choose.html" name="choose" init="C">
                        <purpose>Perform choose gesture on UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.uitest.testcase.drag.html" name="drag" init="D">
                        <purpose>Perform drag gesture on UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.uitest.testcase.type.html" name="type" init="T">
                        <purpose>Type in UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.uitest.testcase.hover.html" name="hover" init="H">
                        <purpose>Perform hover gesture on UI component</purpose>
                    </ref>
                    <ref target="ref/matlab.uitest.unlock.html" name="matlab.uitest.unlock" init="M">
                        <purpose>Unlock figure locked by app testing framework</purpose>
                    </ref>
                    <ref target="ref/matlab.uitest.testcase.forinteractiveuse.html" name="matlab.uitest.TestCase.forInteractiveUse" init="M">
                        <purpose>Create a TestCase object for interactive use</purpose>
                    </ref>
                    <ref target="ref/matlab.uitest.testcase-class.html" name="matlab.uitest.TestCase" init="M">
                        <purpose>TestCase to write tests with app testing framework</purpose>
                    </ref>
                </cat>
                <cat target="performance-testing-framework.html">
                    <title>Performance Testing Framework</title>
                    <ref target="ref/runperf.html" name="runperf" init="R">
                        <purpose>Run set of tests for performance measurement</purpose>
                    </ref>
                    <ref target="ref/testsuite.html" name="testsuite" init="T">
                        <purpose>Create suite of tests</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.timeexperiment-class.html" name="matlab.perftest.TimeExperiment" init="M">
                        <purpose>Interface for measuring execution time of code under test</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.fixedtimeexperiment-class.html" name="matlab.perftest.FixedTimeExperiment" init="M">
                        <purpose>TimeExperiment that collects fixed number of measurements</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.frequentisttimeexperiment-class.html" name="matlab.perftest.FrequentistTimeExperiment" init="M">
                        <purpose>TimeExperiment that collects variable number of measurements</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.testcase-class.html" name="matlab.perftest.TestCase" init="M">
                        <purpose>Superclass of matlab.perftest performance test classes</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.timeresult-class.html" name="matlab.perftest.TimeResult" init="M">
                        <purpose>Result from running time experiment</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.measurement.defaultmeasurementresult-class.html" name="matlab.unittest.measurement.DefaultMeasurementResult" init="M">
                        <purpose>Default implementation of MeasurementResult class</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.measurement.measurementresult-class.html" name="matlab.unittest.measurement.MeasurementResult" init="M">
                        <purpose>Base class for classes holding measurement results</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.measurement.chart.comparisonplot-class.html" name="matlab.unittest.measurement.chart.ComparisonPlot" init="M">
                        <purpose>Visually compare two sets of time experiment results</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.measurement.measurementresult.samplefun.html" name="samplefun" init="S" unlisted="y">
                        <purpose>Apply function across samples of MeasurementResult array</purpose>
                    </ref>
                    <ref target="ref/matlab.unittest.measurement.measurementresult.samplesummary.html" name="sampleSummary" init="S" unlisted="y">
                        <purpose>Create table of summary statistics from MeasurementResult array</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.timeexperiment.limitingsamplingerror.html" name="matlab.perftest.TimeExperiment.limitingSamplingError" init="M" unlisted="y">
                        <purpose>Construct time experiment for specified margin of error and confidence level</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.timeexperiment.run.html" name="run" init="R" unlisted="y">
                        <purpose>Run time experiment on test suite</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.timeexperiment.withfixedsamplesize.html" name="matlab.perftest.TimeExperiment.withFixedSampleSize" init="M" unlisted="y">
                        <purpose>Construct time experiment with fixed number of measurements</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.timeresult.comparisonplot.html" name="comparisonPlot" init="C" unlisted="y">
                        <purpose>Create plot to compare baseline and measurement test results</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.testcase.keepmeasuring.html" name="keepMeasuring" init="K" unlisted="y">
                        <purpose>Measure code with automatic looping</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.testcase.startmeasuring.html" name="startMeasuring" init="S" unlisted="y">
                        <purpose>Designate start of measurement boundary</purpose>
                    </ref>
                    <ref target="ref/matlab.perftest.testcase.stopmeasuring.html" name="stopMeasuring" init="S" unlisted="y">
                        <purpose>Designate end of measurement boundary</purpose>
                    </ref>
                </cat>
                <cat target="mocking-framework.html">
                    <title>Mocking Framework</title>
                    <ref target="ref/matlab.mock.testcase-class.html" name="matlab.mock.TestCase" init="M">
                        <purpose>TestCase to write tests with mocking framework</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.anyarguments-class.html" name="matlab.mock.AnyArguments" init="M">
                        <purpose>Match any number of arguments</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.assignoutputs-class.html" name="matlab.mock.actions.AssignOutputs" init="M">
                        <purpose>Define return values for method called or property accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.donothing-class.html" name="matlab.mock.actions.DoNothing" init="M">
                        <purpose>Take no action</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.invoke-class.html" name="matlab.mock.actions.Invoke" init="M">
                        <purpose>Invoke function handle when method is called</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.returnstoredvalue-class.html" name="matlab.mock.actions.ReturnStoredValue" init="M">
                        <purpose>Return stored property value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.storevalue-class.html" name="matlab.mock.actions.StoreValue" init="M">
                        <purpose>Store property value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.throwexception-class.html" name="matlab.mock.actions.ThrowException" init="M">
                        <purpose>Throw exception when method is called or when property is set or accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.constraints.occurred-class.html" name="matlab.mock.constraints.Occurred" init="M">
                        <purpose>Constraint qualifying mock object interactions</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.constraints.wasaccessed-class.html" name="matlab.mock.constraints.WasAccessed" init="M">
                        <purpose>Constraint determining property get access</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.constraints.wascalled-class.html" name="matlab.mock.constraints.WasCalled" init="M">
                        <purpose>Constraint determining method call</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.constraints.wasset-class.html" name="matlab.mock.constraints.WasSet" init="M">
                        <purpose>Constraint determining property set interaction</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.methodcallbehavior-class.html" name="matlab.mock.MethodCallBehavior" init="M">
                        <purpose>Specify mock object method behavior and qualify method calls</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertybehavior-class.html" name="matlab.mock.PropertyBehavior" init="M">
                        <purpose>Specify mock object property behavior and qualify interactions</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertygetbehavior-class.html" name="matlab.mock.PropertyGetBehavior" init="M">
                        <purpose>Specify mock property get behavior</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertysetbehavior-class.html" name="matlab.mock.PropertySetBehavior" init="M">
                        <purpose>Specify mock object set behavior</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.getmockhistory.html" name="getMockHistory" init="G">
                        <purpose>Return history of mock interactions from TestCase instance</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.interactionhistory.formock.html" name="matlab.mock.InteractionHistory.forMock" init="M">
                        <purpose>Return history from mock object</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.interactionhistory-class.html" name="matlab.mock.InteractionHistory" init="M">
                        <purpose>Interface for mock object interaction history</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assertaccessed.html" name="assertAccessed" init="A" unlisted="y">
                        <purpose>Assert that a property was accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assertcalled.html" name="assertCalled" init="A" unlisted="y">
                        <purpose>Assert that a method was called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assertset.html" name="assertSet" init="A" unlisted="y">
                        <purpose>Assert that a property was set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assertnotaccessed.html" name="assertNotAccessed" init="A" unlisted="y">
                        <purpose>Assert that a property was not accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assertnotcalled.html" name="assertNotCalled" init="A" unlisted="y">
                        <purpose>Assert that a method was not called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assertnotset.html" name="assertNotSet" init="A" unlisted="y">
                        <purpose>Assert that a property was not set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assignoutputswhen.html" name="assignOutputsWhen" init="A" unlisted="y">
                        <purpose>Define return values for method call or property access</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assumeaccessed.html" name="assumeAccessed" init="A" unlisted="y">
                        <purpose>Assume that a property was accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assumecalled.html" name="assumeCalled" init="A" unlisted="y">
                        <purpose>Assume that a method was called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assumeset.html" name="assumeSet" init="A" unlisted="y">
                        <purpose>Assume that a property was set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assumenotaccessed.html" name="assumeNotAccessed" init="A" unlisted="y">
                        <purpose>Assume that a property was not accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assumenotcalled.html" name="assumeNotCalled" init="A" unlisted="y">
                        <purpose>Assume that a method was not called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.assumenotset.html" name="assumeNotSet" init="A" unlisted="y">
                        <purpose>Assume that a property was not set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.createmock.html" name="createMock" init="C" unlisted="y">
                        <purpose>Create mock object</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.clearmockhistory.html" name="clearMockHistory" init="C" unlisted="y">
                        <purpose>Clear history of mock object interactions</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.fatalassertaccessed.html" name="fatalAssertAccessed" init="F" unlisted="y">
                        <purpose>Fatally assert that a property was accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.fatalassertcalled.html" name="fatalAssertCalled" init="F" unlisted="y">
                        <purpose>Fatally assert that a method was called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.fatalassertset.html" name="fatalAssertSet" init="F" unlisted="y">
                        <purpose>Fatally assert that a property was set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.fatalassertnotaccessed.html" name="fatalAssertNotAccessed" init="F" unlisted="y">
                        <purpose>Fatally assert that a property was not accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.fatalassertnotcalled.html" name="fatalAssertNotCalled" init="F" unlisted="y">
                        <purpose>Fatally assert that a method was not called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.fatalassertnotset.html" name="fatalAssertNotSet" init="F" unlisted="y">
                        <purpose>Fatally assert that a property was not set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.forinteractiveuse.html" name="matlab.mock.TestCase.forInteractiveUse" init="M" unlisted="y">
                        <purpose>Create TestCase for interactive use of mock objects</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.returnstoredvaluewhen.html" name="returnStoredValueWhen" init="R" unlisted="y">
                        <purpose>Return stored value when property is accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.storevaluewhen.html" name="storeValueWhen" init="S" unlisted="y">
                        <purpose>Store value when property is set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.throwexceptionwhen.html" name="throwExceptionWhen" init="T" unlisted="y">
                        <purpose>Throw exception for method call or property interaction</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.verifyaccessed.html" name="verifyAccessed" init="V" unlisted="y">
                        <purpose>Verify that a property was accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.verifycalled.html" name="verifyCalled" init="V" unlisted="y">
                        <purpose>Verify that a method was called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.verifyset.html" name="verifySet" init="V" unlisted="y">
                        <purpose>Verify that a property was set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.verifynotaccessed.html" name="verifyNotAccessed" init="V" unlisted="y">
                        <purpose>Verify that a property was not accessed</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.verifynotcalled.html" name="verifyNotCalled" init="V" unlisted="y">
                        <purpose>Verify that a method was not called with certain input values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.testcase.verifynotset.html" name="verifyNotSet" init="V" unlisted="y">
                        <purpose>Verify that a property was not set</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.methodcallbehavior.when.html" name="when" init="W" unlisted="y">
                        <purpose>Specify mock object method behavior</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.methodcallbehavior.withanyinputs.html" name="withAnyInputs" init="W" unlisted="y">
                        <purpose>Specify mock object method call with any number of inputs with any value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.methodcallbehavior.withexactinputs.html" name="withExactInputs" init="W" unlisted="y">
                        <purpose>Specify mock object method call with only object as input</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.methodcallbehavior.withnargout.html" name="withNargout" init="W" unlisted="y">
                        <purpose>Specify mock object method call with defined number of output arguments</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertybehavior.get.html" name="get" init="G" unlisted="y">
                        <purpose>Construct object to define mock property get behavior</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertybehavior.set.html" name="set" init="S" unlisted="y">
                        <purpose>Construct object to define mock property set behavior</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertybehavior.settovalue.html" name="setToValue" init="S" unlisted="y">
                        <purpose>Construct object to define behavior when mocked property is set to specific value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertygetbehavior.when.html" name="when" init="W" unlisted="y">
                        <purpose>Specify mock object property access action</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.propertysetbehavior.when.html" name="when" init="W" unlisted="y">
                        <purpose>Specify mock object property set action</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.assignoutputs.repeat.html" name="repeat" init="R" unlisted="y">
                        <purpose>Repeat defining return values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.assignoutputs.then.html" name="then" init="T" unlisted="y">
                        <purpose>Action for mock object interaction or action subsequent to defining return values</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.donothing.repeat.html" name="repeat" init="R" unlisted="y">
                        <purpose>Repeat taking no action</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.donothing.then.html" name="then" init="T" unlisted="y">
                        <purpose>Action for mock object interaction or action subsequent to taking no action</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.invoke.repeat.html" name="repeat" init="R" unlisted="y">
                        <purpose>Repeat invoking function handle</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.invoke.then.html" name="then" init="T" unlisted="y">
                        <purpose>Action for mock object interaction or action subsequent to invoking function handle</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.returnstoredvalue.repeat.html" name="repeat" init="R" unlisted="y">
                        <purpose>Repeat returning stored property value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.returnstoredvalue.then.html" name="then" init="T" unlisted="y">
                        <purpose>Action for mock object interaction or action subsequent to returning stored property value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.storevalue.repeat.html" name="repeat" init="R" unlisted="y">
                        <purpose>Repeat storing property value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.storevalue.then.html" name="then" init="T" unlisted="y">
                        <purpose>Action for mock object interaction or action subsequent to storing property value</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.throwexception.repeat.html" name="repeat" init="R" unlisted="y">
                        <purpose>Repeat throwing exception</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.actions.throwexception.then.html" name="then" init="T" unlisted="y">
                        <purpose>Action for mock object interaction or action subsequent to throwing exception</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.methodcall-class.html" name="matlab.mock.history.MethodCall" init="M" unlisted="y">
                        <purpose>Representation of mock object method call</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.propertyaccess-class.html" name="matlab.mock.history.PropertyAccess" init="M" unlisted="y">
                        <purpose>Representation of mock object property access</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.propertymodification-class.html" name="matlab.mock.history.PropertyModification" init="M" unlisted="y">
                        <purpose>Representation of mock object property modification</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.successfulmethodcall-class.html" name="matlab.mock.history.SuccessfulMethodCall" init="M" unlisted="y">
                        <purpose>Representation of successful mock object method call</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.successfulpropertyaccess-class.html" name="matlab.mock.history.SuccessfulPropertyAccess" init="M" unlisted="y">
                        <purpose>Representation of successful mock object property access</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.successfulpropertymodification-class.html" name="matlab.mock.history.SuccessfulPropertyModification" init="M" unlisted="y">
                        <purpose>Representation of successful mock object property modification</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.unsuccessfulmethodcall-class.html" name="matlab.mock.history.UnsuccessfulMethodCall" init="M" unlisted="y">
                        <purpose>Representation of unsuccessful mock object method call</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.unsuccessfulpropertyaccess-class.html" name="matlab.mock.history.UnsuccessfulPropertyAccess" init="M" unlisted="y">
                        <purpose>Representation of unsuccessful mock object property access</purpose>
                    </ref>
                    <ref target="ref/matlab.mock.history.unsuccessfulpropertymodification-class.html" name="matlab.mock.history.UnsuccessfulPropertyModification" init="M" unlisted="y">
                        <purpose>Representation of unsuccessful mock object property modification</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="continuous-integration.html">
                <title>Continuous Integration (CI)</title>
            </cat>
            <cat target="creating-help.html">
                <title>Toolbox Distribution</title>
                <ref target="ref/matlab.addons.toolbox.packagetoolbox.html" name="matlab.addons.toolbox.packageToolbox" init="M">
                    <purpose>Package toolbox project</purpose>
                </ref>
                <ref target="ref/matlab.addons.toolbox.toolboxversion.html" name="matlab.addons.toolbox.toolboxVersion" init="M">
                    <purpose>Query or modify version of toolbox</purpose>
                </ref>
                <ref target="ref/matlab.addons.toolbox.installtoolbox.html" name="matlab.addons.toolbox.installToolbox" init="M">
                    <purpose>Install toolbox file</purpose>
                </ref>
                <ref target="ref/matlab.addons.toolbox.uninstalltoolbox.html" name="matlab.addons.toolbox.uninstallToolbox" init="M">
                    <purpose>Uninstall toolbox</purpose>
                </ref>
                <ref target="ref/matlab.addons.toolbox.installedtoolboxes.html" name="matlab.addons.toolbox.installedToolboxes" init="M">
                    <purpose>Return information about installed toolboxes</purpose>
                </ref>
                <ref target="ref/builddocsearchdb.html" name="builddocsearchdb" init="B">
                    <purpose>Build searchable documentation database</purpose>
                </ref>
                <ref target="ref/validatefunctionsignaturesjson.html" name="validateFunctionSignaturesJSON" init="V">
                    <purpose>Validate functionSignatures.json files</purpose>
                </ref>
                <ref target="ref/matlab.codetools.requiredfilesandproducts.html" name="matlab.codetools.requiredFilesAndProducts" init="M">
                    <purpose>List dependencies of MATLAB program files</purpose>
                </ref>
                <ref target="ref/matlab.settings.factorygroup.matlab.settings.factorygroup.createtoolboxgroup.html" name="matlab.settings.FactoryGroup.createToolboxGroup" init="M">
                    <purpose>Create FactoryGroup root object for toolbox</purpose>
                </ref>
                <ref target="ref/matlab.settings.factorygroup.addgroup.html" name="addGroup" init="A">
                    <purpose>Add new factory settings group</purpose>
                </ref>
                <ref target="ref/matlab.settings.factorygroup.addsetting.html" name="addSetting" init="A">
                    <purpose>Add new factory setting</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbelogicalscalar.html" name="matlab.settings.mustBeLogicalScalar" init="M">
                    <purpose>Validate that setting value is logical array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbenumericscalar.html" name="matlab.settings.mustBeNumericScalar" init="M">
                    <purpose>Validate that setting value is numeric array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbestringscalar.html" name="matlab.settings.mustBeStringScalar" init="M">
                    <purpose>Validate that setting value is string array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbeintegerscalar.html" name="matlab.settings.mustBeIntegerScalar" init="M">
                    <purpose>Validate that setting value is integer array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsfileupgrader.html" name="SettingsFileUpgrader" init="S">
                    <purpose>Settings file upgrader object</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsfileupgrader.move.html" name="move" init="M">
                    <purpose>Record move or rename of factory setting or group</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsfileupgrader.remove.html" name="remove" init="R">
                    <purpose>Record removal of factory setting or group</purpose>
                </ref>
                <ref target="ref/matlab.settings.reloadfactoryfile.html" name="matlab.settings.reloadFactoryFile" init="M">
                    <purpose>Load or reload factory settings</purpose>
                </ref>
                <ref target="ref/matlab.settings.loadsettingscompatibilityresults.html" name="matlab.settings.loadSettingsCompatibilityResults" init="M">
                    <purpose>Get results of upgrading personal settings of toolbox for specific version</purpose>
                </ref>
                <ref target="ref/matlab.settings.factorygroup.html" name="FactoryGroup" init="F">
                    <purpose>Group of factory settings and factory subgroup objects</purpose>
                </ref>
                <ref target="ref/matlab.settings.factorysetting.html" name="FactorySetting" init="F">
                    <purpose>Factory settings object</purpose>
                </ref>
                <ref target="ref/matlab.settings.releasecompatibilityresults.html" name="ReleaseCompatibilityResults" init="R">
                    <purpose>Release compatibility results object</purpose>
                </ref>
                <ref target="ref/matlab.settings.releasecompatibilityexception.html" name="ReleaseCompatibilityException" init="R">
                    <purpose>Release compatibility exception object</purpose>
                </ref>
                <ref target="ref/matlab.settings.versionresults.html" name="VersionResults" init="V">
                    <purpose>Version results object</purpose>
                </ref>
                <ref target="ref/matlab.settings.operationresult.html" name="OperationResult" init="O">
                    <purpose>Operation result object</purpose>
                </ref>
            </cat>
        </cat>
        <cat target="external-language-interfaces.html">
            <title>External Language Interfaces</title>
            <cat target="">
                <title>Calling Libraries in Other Languages</title>
                <cat target="call-cpp-library-functions.html">
                    <title>C++ Libraries</title>
                    <cat target="build-matlab-interface-to-c-library.html">
                        <title>Build MATLAB Interface to C++ Library</title>
                        <ref target="ref/clibgen.generatelibrarydefinition.html" name="clibgen.generateLibraryDefinition" init="C">
                            <purpose>Create definition file for C++ library</purpose>
                        </ref>
                        <ref target="ref/clibgen.buildinterface.html" name="clibgen.buildInterface" init="C">
                            <purpose>Create interface to C++ library without definition file</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition-class.html" name="clibgen.LibraryDefinition" init="C" unlisted="y">
                            <purpose>MATLAB definition for C++ library</purpose>
                        </ref>
                        <ref target="ref/clibgen.classdefinition-class.html" name="clibgen.ClassDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB class corresponding to C++ class</purpose>
                        </ref>
                        <ref target="ref/clibgen.constructordefinition-class.html" name="clibgen.ConstructorDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB function corresponding to C++ class constructor</purpose>
                        </ref>
                        <ref target="ref/clibgen.propertydefinition-class.html" name="clibgen.PropertyDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB property corresponding to public property of C++ class</purpose>
                        </ref>
                        <ref target="ref/clibgen.methoddefinition-class.html" name="clibgen.MethodDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB function corresponding to C++ class method</purpose>
                        </ref>
                        <ref target="ref/clibgen.functiondefinition-class.html" name="clibgen.FunctionDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB function corresponding to C++ package function</purpose>
                        </ref>
                        <ref target="ref/clibgen.enumdefinition-class.html" name="clibgen.EnumDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB enumeration corresponding to C++ enumeration</purpose>
                        </ref>
                        <ref target="ref/clibgen.classdefinition-class.html" name="clibgen.ClassDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB class corresponding to C++ class</purpose>
                        </ref>
                        <ref target="ref/clibgen.classdefinition.addconstructor.html" name="addConstructor" init="A" unlisted="y">
                            <purpose>Add constructor to C++ class definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.classdefinition.addmethod.html" name="addMethod" init="A" unlisted="y">
                            <purpose>Add method to C++ class definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.classdefinition.addproperty.html" name="addProperty" init="A" unlisted="y">
                            <purpose>Add property to C++ class definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.constructordefinition-class.html" name="clibgen.ConstructorDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB function corresponding to C++ class constructor</purpose>
                        </ref>
                        <ref target="ref/clibgen.constructordefinition.defineargument.html" name="defineArgument" init="D" unlisted="y">
                            <purpose>Add input argument definition for C++ constructor</purpose>
                        </ref>
                        <ref target="ref/clibgen.constructordefinition.validate.html" name="validate" init="V" unlisted="y">
                            <purpose>Validate C++ constructor definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.enumdefinition-class.html" name="clibgen.EnumDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB enumeration corresponding to C++ enumeration</purpose>
                        </ref>
                        <ref target="ref/clibgen.functiondefinition-class.html" name="clibgen.FunctionDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB function corresponding to C++ package function</purpose>
                        </ref>
                        <ref target="ref/clibgen.functiondefinition.defineargument.html" name="defineArgument" init="D" unlisted="y">
                            <purpose>Add input argument definition for C++ package function</purpose>
                        </ref>
                        <ref target="ref/clibgen.functiondefinition.defineoutput.html" name="defineOutput" init="D" unlisted="y">
                            <purpose>Add output argument definition for C++ package function</purpose>
                        </ref>
                        <ref target="ref/clibgen.functiondefinition.validate.html" name="validate" init="V" unlisted="y">
                            <purpose>Validate function definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition-class.html" name="clibgen.LibraryDefinition" init="C" unlisted="y">
                            <purpose>MATLAB definition for C++ library</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition.addclass.html" name="addClass" init="A" unlisted="y">
                            <purpose>Add class to library definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition.addenumeration.html" name="addEnumeration" init="A" unlisted="y">
                            <purpose>Add enumeration to library definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition.addfunction.html" name="addFunction" init="A" unlisted="y">
                            <purpose>Add function to library definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition.build.html" name="build" init="B" unlisted="y">
                            <purpose>Build library interface</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition.summary.html" name="summary" init="S" unlisted="y">
                            <purpose>Display C++ classes, functions and enums in MATLAB interface</purpose>
                        </ref>
                        <ref target="ref/clibgen.librarydefinition.validate.html" name="validate" init="V" unlisted="y">
                            <purpose>Validate library definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.methoddefinition-class.html" name="clibgen.MethodDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB function corresponding to C++ class method</purpose>
                        </ref>
                        <ref target="ref/clibgen.methoddefinition.defineargument.html" name="defineArgument" init="D" unlisted="y">
                            <purpose>Add input argument definition for C++ method</purpose>
                        </ref>
                        <ref target="ref/clibgen.methoddefinition.defineoutput.html" name="defineOutput" init="D" unlisted="y">
                            <purpose>Add output argument definition for C++ method</purpose>
                        </ref>
                        <ref target="ref/clibgen.methoddefinition.validate.html" name="validate" init="V" unlisted="y">
                            <purpose>Validate method definition</purpose>
                        </ref>
                        <ref target="ref/clibgen.propertydefinition-class.html" name="clibgen.PropertyDefinition" init="C" unlisted="y">
                            <purpose>Definition for MATLAB property corresponding to public property of C++ class</purpose>
                        </ref>
                    </cat>
                    <cat target="use-prebuilt-matlab-interface-to-c-library.html">
                        <title>Use Prebuilt MATLAB Interface to C++ Library</title>
                        <ref target="ref/clibarray.html" name="clibArray" init="C">
                            <purpose>Create MATLAB object for C++ array or std::vector</purpose>
                        </ref>
                        <ref target="ref/clibconvertarray.html" name="clibConvertArray" init="C">
                            <purpose>Convert numeric array to MATLAB object for C++ array</purpose>
                        </ref>
                        <ref target="ref/clibisnull.html" name="clibIsNull" init="C">
                            <purpose>Determine if C++ object is null</purpose>
                        </ref>
                        <ref target="ref/clibisreadonly.html" name="clibIsReadOnly" init="C">
                            <purpose>Determine if C++ object is read-only</purpose>
                        </ref>
                        <ref target="ref/clibrelease.html" name="clibRelease" init="C">
                            <purpose>Release C++ object from MATLAB</purpose>
                        </ref>
                        <ref target="ref/underlyingvalue.html" name="underlyingValue" init="U">
                            <purpose>Underlying numeric value for C++ enumeration object created in MATLAB</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="call-c-library-functions.html">
                    <title>C Libraries</title>
                    <ref target="ref/loadlibrary.html" name="loadlibrary" init="L">
                        <purpose>Load C shared library into MATLAB</purpose>
                    </ref>
                    <ref target="ref/unloadlibrary.html" name="unloadlibrary" init="U">
                        <purpose>Unload shared C library from memory</purpose>
                    </ref>
                    <ref target="ref/calllib.html" name="calllib" init="C">
                        <purpose>Call function in C shared library</purpose>
                    </ref>
                    <ref target="ref/libfunctions.html" name="libfunctions" init="L">
                        <purpose>Return information on functions in shared C library</purpose>
                    </ref>
                    <ref target="ref/libfunctionsview.html" name="libfunctionsview" init="L">
                        <purpose>Display shared C library function signatures in window</purpose>
                    </ref>
                    <ref target="ref/libisloaded.html" name="libisloaded" init="L">
                        <purpose>Determine if shared C library is loaded</purpose>
                    </ref>
                    <ref target="ref/libpointer.html" name="libpointer" init="L">
                        <purpose>Pointer object for use with shared C library</purpose>
                    </ref>
                    <ref target="ref/libstruct.html" name="libstruct" init="L">
                        <purpose>Convert MATLAB structure to C-style structure for use with shared C library</purpose>
                    </ref>
                    <ref target="ref/lib.pointer-class.html" name="lib.pointer" init="L">
                        <purpose>Pointer object compatible with C pointer</purpose>
                    </ref>
                    <ref target="ref/lib.pointer.disp.html" name="disp" init="D" unlisted="y">
                        <purpose>Display lib.pointer type</purpose>
                    </ref>
                    <ref target="ref/lib.pointer.isnull.html" name="isNull" init="I" unlisted="y">
                        <purpose>Points to NULL pointer</purpose>
                    </ref>
                    <ref target="ref/lib.pointer.plus.html" name="plus" init="P" unlisted="y">
                        <purpose>+ (plus) operator for pointer arithmetic</purpose>
                    </ref>
                    <ref target="ref/lib.pointer.reshape.html" name="reshape" init="R" unlisted="y">
                        <purpose>Reshape lib.pointer array</purpose>
                    </ref>
                    <ref target="ref/lib.pointer.setdatatype.html" name="setdatatype" init="S" unlisted="y">
                        <purpose>Initialize type and size of lib.pointer object</purpose>
                    </ref>
                </cat>
                <cat target="call-mex-file-functions.html">
                    <title>MEX File Functions</title>
                    <ref target="ref/mexext.html" name="mexext" init="M">
                        <purpose>Binary MEX file-name extension</purpose>
                    </ref>
                </cat>
                <cat target="using-java-libraries-in-matlab.html">
                    <title>Java Libraries</title>
                    <ref target="ref/isjava.html" name="isjava" init="I">
                        <purpose>Determine if input is Java object</purpose>
                    </ref>
                    <ref target="ref/javaaddpath.html" name="javaaddpath" init="J">
                        <purpose>Add entries to dynamic Java class path</purpose>
                    </ref>
                    <ref target="ref/javaarray.html" name="javaArray" init="J">
                        <purpose>Construct Java array object</purpose>
                    </ref>
                    <ref target="ref/javachk.html" name="javachk" init="J">
                        <purpose>Error message based on Java feature support</purpose>
                    </ref>
                    <ref target="ref/javaclasspath.html" name="javaclasspath" init="J">
                        <purpose>Return Java class path or specify dynamic path</purpose>
                    </ref>
                    <ref target="ref/javamethod.html" name="javaMethod" init="J">
                        <purpose>Call Java method</purpose>
                    </ref>
                    <ref target="ref/javamethodedt.html" name="javaMethodEDT" init="J">
                        <purpose>Call Java method from Event Dispatch Thread (EDT)</purpose>
                    </ref>
                    <ref target="ref/javaobject.html" name="javaObject" init="J">
                        <purpose>Call Java constructor</purpose>
                    </ref>
                    <ref target="ref/javaobjectedt.html" name="javaObjectEDT" init="J">
                        <purpose>Call Java constructor on Event Dispatch Thread (EDT)</purpose>
                    </ref>
                    <ref target="ref/javarmpath.html" name="javarmpath" init="J">
                        <purpose>Remove entries from dynamic Java class path</purpose>
                    </ref>
                    <ref target="ref/usejava.html" name="usejava" init="U">
                        <purpose>Determine if Java feature is available</purpose>
                    </ref>
                    <ref target="ref/matlab.exception.javaexception-class.html" name="matlab.exception.JavaException" init="M">
                        <purpose>Capture error information for Java exception</purpose>
                    </ref>
                </cat>
                <cat target="call-python-libraries.html">
                    <title>Python Libraries</title>
                    <cat target="getting-started-with-python.html">
                        <title>Call Python Library Functions</title>
                        <ref target="ref/pyenv.html" name="pyenv" init="P">
                            <purpose>Change default environment of Python interpreter</purpose>
                        </ref>
                        <ref target="ref/matlab.pyclient.pythonenvironment.html" name="PythonEnvironment" init="P">
                            <purpose>Python environment information</purpose>
                        </ref>
                        <ref target="ref/pythonenvironment.terminate.html" name="terminate" init="T" unlisted="y">
                            <purpose>Terminate process associated with Python interpreter</purpose>
                        </ref>
                        <ref target="ref/pyversion.html" name="pyversion" init="P" unlisted="y">
                            <purpose>(Not recommended) Change default version of Python interpreter</purpose>
                        </ref>
                        <ref target="ref/matlab.exception.pyexception-class.html" name="matlab.exception.PyException" init="M">
                            <purpose>Capture error information for Python exception</purpose>
                        </ref>
                    </cat>
                    <cat target="python-data-types.html">
                        <title>Python Data Types in MATLAB</title>
                    </cat>
                    <cat target="calling-python-functions.html">
                        <title>Python Functions in MATLAB</title>
                        <ref target="ref/pyargs.html" name="pyargs" init="P">
                            <purpose>Create keyword arguments for Python function</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="using-net-libraries-in-matlab.html">
                    <title>.NET Libraries</title>
                    <cat target="getting-started.html">
                        <title>Getting Started with Microsoft .NET</title>
                        <ref target="ref/net.addassembly.html" name="NET.addAssembly" init="N">
                            <purpose>Make .NET assembly visible to MATLAB</purpose>
                        </ref>
                        <ref target="ref/net.isnetsupported.html" name="NET.isNETSupported" init="N">
                            <purpose>Check for supported Microsoft .NET Framework</purpose>
                        </ref>
                        <ref target="ref/net.html" name="NET" init="N">
                            <purpose>Summary of functions in MATLAB .NET interface</purpose>
                        </ref>
                        <ref target="ref/enablenetfromnetworkdrive.html" name="enableNETfromNetworkDrive" init="E">
                            <purpose>(To be removed) Enable access to .NET commands from network drive</purpose>
                        </ref>
                        <ref target="ref/net.assembly-class.html" name="NET.Assembly" init="N">
                            <purpose>Members of .NET assembly</purpose>
                        </ref>
                        <ref target="ref/net.netexception-class.html" name="NET.NetException" init="N">
                            <purpose>Capture error information for .NET exception</purpose>
                        </ref>
                    </cat>
                    <cat target="net-types.html">
                        <title>.NET Data Types in MATLAB</title>
                        <ref target="ref/net.createarray.html" name="NET.createArray" init="N">
                            <purpose>Array for nonprimitive .NET types</purpose>
                        </ref>
                        <ref target="ref/net.disableautorelease.html" name="NET.disableAutoRelease" init="N">
                            <purpose>Lock .NET object representing RunTime Callable Wrapper (COM wrapper)</purpose>
                        </ref>
                        <ref target="ref/net.enableautorelease.html" name="NET.enableAutoRelease" init="N">
                            <purpose>Unlock .NET object representing RunTime Callable Wrapper (COM wrapper)</purpose>
                        </ref>
                    </cat>
                    <cat target="properties.html">
                        <title>.NET Properties in MATLAB</title>
                        <ref target="ref/net.setstaticproperty.html" name="NET.setStaticProperty" init="N">
                            <purpose>Static property or field name</purpose>
                        </ref>
                    </cat>
                    <cat target="methods-.html">
                        <title>.NET Methods in MATLAB</title>
                    </cat>
                    <cat target="events-and-delegates.html">
                        <title>.NET Events and Delegates in MATLAB</title>
                        <ref target="ref/begininvoke.html" name="BeginInvoke" init="B">
                            <purpose>Initiate asynchronous .NET delegate call</purpose>
                        </ref>
                        <ref target="ref/endinvoke.html" name="EndInvoke" init="E">
                            <purpose>Retrieve result of asynchronous call initiated by .NET System.Delegate BeginInvoke method</purpose>
                        </ref>
                        <ref target="ref/combine.html" name="Combine" init="C">
                            <purpose>Convenience function for static .NET System.Delegate Combine method</purpose>
                        </ref>
                        <ref target="ref/remove.html" name="Remove" init="R">
                            <purpose>Convenience function for static .NET System.Delegate Remove method</purpose>
                        </ref>
                        <ref target="ref/removeall.html" name="RemoveAll" init="R">
                            <purpose>Convenience function for static .NET System.Delegate RemoveAll method</purpose>
                        </ref>
                    </cat>
                    <cat target="enumerations.html">
                        <title>.NET Enumerations in MATLAB</title>
                        <ref target="ref/bitnot.html" name="bitnot" init="B">
                            <purpose>.NET enumeration object bit-wise NOT instance method</purpose>
                        </ref>
                    </cat>
                    <cat target="generic-classes.html">
                        <title>.NET Generic Classes in MATLAB</title>
                        <ref target="ref/net.creategeneric.html" name="NET.createGeneric" init="N">
                            <purpose>Create instance of specialized .NET generic type</purpose>
                        </ref>
                        <ref target="ref/net.invokegenericmethod.html" name="NET.invokeGenericMethod" init="N">
                            <purpose>Invoke generic method of object</purpose>
                        </ref>
                        <ref target="ref/net.convertarray.html" name="NET.convertArray" init="N">
                            <purpose>(Not recommended) Convert numeric MATLAB array to .NET array</purpose>
                        </ref>
                        <ref target="ref/net.genericclass-class.html" name="NET.GenericClass" init="N">
                            <purpose>Represent parameterized generic type definitions</purpose>
                        </ref>
                    </cat>
                </cat>
                <cat target="using-com-objects-in-matlab.html">
                    <title>COM Objects</title>
                    <ref target="ref/actxserver.html" name="actxserver" init="A">
                        <purpose>Create COM server</purpose>
                    </ref>
                    <ref target="ref/actxgetrunningserver.html" name="actxGetRunningServer" init="A">
                        <purpose>Handle to running instance of Automation server</purpose>
                    </ref>
                    <ref target="ref/methodsview.html" name="methodsview" init="M">
                        <purpose>View class methods</purpose>
                    </ref>
                    <ref target="ref/eventlisteners.html" name="eventlisteners" init="E">
                        <purpose>List event handler functions associated with COM object events</purpose>
                    </ref>
                    <ref target="ref/registerevent.html" name="registerevent" init="R">
                        <purpose>Associate event handler for COM object event at run time</purpose>
                    </ref>
                    <ref target="ref/unregisterallevents.html" name="unregisterallevents" init="U">
                        <purpose>Unregister all event handlers associated with COM object events</purpose>
                    </ref>
                    <ref target="ref/unregisterevent.html" name="unregisterevent" init="U">
                        <purpose>Unregister event handler associated with COM object event at run time</purpose>
                    </ref>
                    <ref target="ref/iscom.html" name="iscom" init="I">
                        <purpose>Determine whether input is COM object</purpose>
                    </ref>
                    <ref target="ref/isevent.html" name="isevent" init="I">
                        <purpose>Determine whether input is COM object event</purpose>
                    </ref>
                    <ref target="ref/isinterface.html" name="isinterface" init="I">
                        <purpose>Determine whether input is COM interface</purpose>
                    </ref>
                    <ref target="ref/com.html" name="COM" init="C">
                        <purpose>Access COM components from MATLAB</purpose>
                    </ref>
                    <ref target="ref/addproperty.html" name="addproperty" init="A" unlisted="y">
                        <purpose>Add custom property to COM object</purpose>
                    </ref>
                    <ref target="ref/deleteproperty.html" name="deleteproperty" init="D" unlisted="y">
                        <purpose>Remove custom property from COM object</purpose>
                    </ref>
                    <ref target="ref/com.com.events.html" name="events (COM)" init="E" unlisted="y">
                        <purpose>List of events COM object can trigger</purpose>
                    </ref>
                    <ref target="ref/invoke.html" name="invoke" init="I" unlisted="y">
                        <purpose>Invoke method on COM object or interface, or display methods</purpose>
                    </ref>
                    <ref target="ref/release.html" name="release" init="R" unlisted="y">
                        <purpose>Release COM interface</purpose>
                    </ref>
                    <ref target="ref/com.com.load.html" name="load (COM)" init="L" unlisted="y">
                        <purpose>Initialize COM control object from file</purpose>
                    </ref>
                    <ref target="ref/com.move.html" name="move" init="M" unlisted="y">
                        <purpose>Move or resize control in parent window</purpose>
                    </ref>
                    <ref target="ref/com.com.propedit.html" name="propedit (COM)" init="P" unlisted="y">
                        <purpose>Open built-in property page for COM control</purpose>
                    </ref>
                    <ref target="ref/com.com.save.html" name="save (COM)" init="S" unlisted="y">
                        <purpose>Serialize COM control object to file</purpose>
                    </ref>
                    <ref target="ref/actxcontrol.html" name="actxcontrol" init="A" unlisted="y">
                        <purpose>(To be removed) Create Microsoft ActiveX control in figure window</purpose>
                    </ref>
                    <ref target="ref/actxcontrollist.html" name="actxcontrollist" init="A" unlisted="y">
                        <purpose>(To be removed) List currently installed Microsoft ActiveX controls</purpose>
                    </ref>
                    <ref target="ref/actxcontrolselect.html" name="actxcontrolselect" init="A" unlisted="y">
                        <purpose>(To be removed) Create Microsoft ActiveX control from UI</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="">
                <title>Calling Web Services</title>
                <cat target="http-interface.html">
                    <title>HTTP Interface</title>
                    <ref target="ref/matlab.net.http.requestmessage-class.html" name="matlab.net.http.RequestMessage" init="M">
                        <purpose>HTTP request message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.responsemessage-class.html" name="matlab.net.http.ResponseMessage" init="M">
                        <purpose>HTTP response message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.message-class.html" name="matlab.net.http.Message" init="M">
                        <purpose>HTTP request or response message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.messagetype-class.html" name="matlab.net.http.MessageType" init="M">
                        <purpose>HTTP message type</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.messagebody-class.html" name="matlab.net.http.MessageBody" init="M">
                        <purpose>Body of HTTP message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.protocolversion-class.html" name="matlab.net.http.ProtocolVersion" init="M">
                        <purpose>HTTP protocol version</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.requestline-class.html" name="matlab.net.http.RequestLine" init="M">
                        <purpose>First line of HTTP request message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.requestmethod-class.html" name="matlab.net.http.RequestMethod" init="M">
                        <purpose>HTTP request method</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.startline-class.html" name="matlab.net.http.StartLine" init="M">
                        <purpose>First line of HTTP message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.statusclass-class.html" name="matlab.net.http.StatusClass" init="M">
                        <purpose>Status class of HTTP response</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.statuscode-class.html" name="matlab.net.http.StatusCode" init="M">
                        <purpose>Status code in HTTP response</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.statusline-class.html" name="matlab.net.http.StatusLine" init="M">
                        <purpose>First line of HTTP response message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield-class.html" name="matlab.net.http.HeaderField" init="M">
                        <purpose>Header field of HTTP message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.acceptfield-class.html" name="matlab.net.http.field.AcceptField" init="M">
                        <purpose>HTTP Accept header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.authenticatefield-class.html" name="matlab.net.http.field.AuthenticateField" init="M">
                        <purpose>HTTP WWW-Authenticate or Proxy-Authenticate header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.authenticationinfofield-class.html" name="matlab.net.http.field.AuthenticationInfoField" init="M">
                        <purpose>HTTP Authentication-Info header field in response message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.authorizationfield-class.html" name="matlab.net.http.field.AuthorizationField" init="M">
                        <purpose>HTTP Authorization or Proxy-Authorization header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.contentdispositionfield-class.html" name="matlab.net.http.field.ContentDispositionField" init="M">
                        <purpose>HTTP Content-Disposition header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.contentlengthfield-class.html" name="matlab.net.http.field.ContentLengthField" init="M">
                        <purpose>HTTP Content-Length field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.contentlocationfield-class.html" name="matlab.net.http.field.ContentLocationField" init="M">
                        <purpose>HTTP Content-Location header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.contenttypefield-class.html" name="matlab.net.http.field.ContentTypeField" init="M">
                        <purpose>HTTP Content-Type header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.cookiefield-class.html" name="matlab.net.http.field.CookieField" init="M">
                        <purpose>HTTP Cookie header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.datefield-class.html" name="matlab.net.http.field.DateField" init="M">
                        <purpose>HTTP Date header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.genericfield-class.html" name="matlab.net.http.field.GenericField" init="M">
                        <purpose>HTTP header field with any name and value</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.genericparameterizedfield-class.html" name="matlab.net.http.field.GenericParameterizedField" init="M">
                        <purpose>GenericField to support parameterized syntax</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.httpdatefield-class.html" name="matlab.net.http.field.HTTPDateField" init="M">
                        <purpose>HTTP header field containing date</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.integerfield-class.html" name="matlab.net.http.field.IntegerField" init="M">
                        <purpose>Base class for HTTP header fields containing nonnegative integers</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.locationfield-class.html" name="matlab.net.http.field.LocationField" init="M">
                        <purpose>HTTP Location header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.mediarangefield-class.html" name="matlab.net.http.field.MediaRangeField" init="M">
                        <purpose>Base class for HTTP Content-Type and Accept header fields</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.setcookiefield-class.html" name="matlab.net.http.field.SetCookieField" init="M">
                        <purpose>HTTP Set-Cookie header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.urireferencefield-class.html" name="matlab.net.http.field.URIReferenceField" init="M">
                        <purpose>Base class for HTTP header fields containing URI components</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentconsumer-class.html" name="matlab.net.http.io.ContentConsumer" init="M">
                        <purpose>Consumer for HTTP message payloads</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.fileconsumer-class.html" name="matlab.net.http.io.FileConsumer" init="M">
                        <purpose>Consumer for files in HTTP messages</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringconsumer-class.html" name="matlab.net.http.io.StringConsumer" init="M">
                        <purpose>String consumer for HTTP payloads</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.jsonconsumer-class.html" name="matlab.net.http.io.JSONConsumer" init="M">
                        <purpose>Content consumer that converts JSON input into MATLAB data</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageconsumer-class.html" name="matlab.net.http.io.ImageConsumer" init="M">
                        <purpose>Consumer for image data in HTTP payloads</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartconsumer-class.html" name="matlab.net.http.io.MultipartConsumer" init="M">
                        <purpose>Helper for multipart content types in HTTP messages</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.binaryconsumer-class.html" name="matlab.net.http.io.BinaryConsumer" init="M">
                        <purpose>Consumer for binary data in HTTP messages</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericconsumer-class.html" name="matlab.net.http.io.GenericConsumer" init="M">
                        <purpose>Consumer for multiple content types in HTTP messages</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider-class.html" name="matlab.net.http.io.ContentProvider" init="M">
                        <purpose>ContentProvider for HTTP message payloads</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.fileprovider-class.html" name="matlab.net.http.io.FileProvider" init="M">
                        <purpose>ContentProvider to send files</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.formprovider-class.html" name="matlab.net.http.io.FormProvider" init="M">
                        <purpose>ContentProvider that sends form data</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartformprovider-class.html" name="matlab.net.http.io.MultipartFormProvider" init="M">
                        <purpose>ContentProvider to send multipart/form-data messages</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringprovider-class.html" name="matlab.net.http.io.StringProvider" init="M">
                        <purpose>ContentProvider to send MATLAB strings</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.jsonprovider-class.html" name="matlab.net.http.io.JSONProvider" init="M">
                        <purpose>ContentProvider to send MATLAB data as JSON string</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageprovider-class.html" name="matlab.net.http.io.ImageProvider" init="M">
                        <purpose>ContentProvider to send MATLAB image data</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartprovider-class.html" name="matlab.net.http.io.MultipartProvider" init="M">
                        <purpose>ContentProvider to send multipart/mixed HTTP messages</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericprovider-class.html" name="matlab.net.http.io.GenericProvider" init="M">
                        <purpose>Generic ContentProvider for HTTP payloads</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.authenticationscheme-class.html" name="matlab.net.http.AuthenticationScheme" init="M">
                        <purpose>HTTP Authentication scheme</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.authinfo-class.html" name="matlab.net.http.AuthInfo" init="M">
                        <purpose>Authentication or authorization information in HTTP messages</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.cookie-class.html" name="matlab.net.http.Cookie" init="M">
                        <purpose>HTTP cookie received from server</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.cookieinfo-class.html" name="matlab.net.http.CookieInfo" init="M">
                        <purpose>HTTP cookie information</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.credentials-class.html" name="matlab.net.http.Credentials" init="M">
                        <purpose>Credentials for authenticating HTTP requests</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.disposition-class.html" name="matlab.net.http.Disposition" init="M">
                        <purpose>Results in HTTP log record</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.httpexception-class.html" name="matlab.net.http.HTTPException" init="M">
                        <purpose>Exception thrown by HTTP services</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.httpoptions-class.html" name="matlab.net.http.HTTPOptions" init="M">
                        <purpose>Options controlling HTTP message exchange</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.logrecord-class.html" name="matlab.net.http.LogRecord" init="M">
                        <purpose>HTTP history log record</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.mediatype-class.html" name="matlab.net.http.MediaType" init="M">
                        <purpose>Internet media type used in HTTP headers</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.progressmonitor-class.html" name="matlab.net.http.ProgressMonitor" init="M">
                        <purpose>Progress monitor for HTTP message exchange</purpose>
                    </ref>
                    <ref target="ref/matlab.net.uri-class.html" name="matlab.net.URI" init="M">
                        <purpose>Uniform resource identifier (URI)</purpose>
                    </ref>
                    <ref target="ref/matlab.net.arrayformat-class.html" name="matlab.net.ArrayFormat" init="M">
                        <purpose>Convert arrays in HTTP queries</purpose>
                    </ref>
                    <ref target="ref/matlab.net.queryparameter-class.html" name="matlab.net.QueryParameter" init="M">
                        <purpose>Parameter in query portion of uniform resource identifier (URI)</purpose>
                    </ref>
                    <ref target="ref/matlab.net.base64decode.html" name="matlab.net.base64decode" init="M">
                        <purpose>Base 64 decoding of string</purpose>
                    </ref>
                    <ref target="ref/matlab.net.base64encode.html" name="matlab.net.base64encode" init="M">
                        <purpose>Base 64 encoding of byte string or vector</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.requestmessage.complete.html" name="complete" init="C" unlisted="y">
                        <purpose>Validate and complete HTTP request message without sending</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.requestmessage.send.html" name="send" init="S" unlisted="y">
                        <purpose>Send HTTP request message and receive response</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.responsemessage.complete.html" name="complete" init="C" unlisted="y">
                        <purpose>Process or reprocess response payload Content-Type</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.message.addfields.html" name="addFields" init="A" unlisted="y">
                        <purpose>Add fields to message header</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.message.changefields.html" name="changeFields" init="C" unlisted="y">
                        <purpose>Change existing fields in message header</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.message.getfields.html" name="getFields" init="G" unlisted="y">
                        <purpose>Return message header fields matching name or class</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.message.removefields.html" name="removeFields" init="R" unlisted="y">
                        <purpose>Remove fields from message header</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.message.replacefields.html" name="replaceFields" init="R" unlisted="y">
                        <purpose>Change values in or add fields to message header</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.message.show.html" name="show" init="S" unlisted="y">
                        <purpose>Display or return formatted version of message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.messagebody.show.html" name="show" init="S" unlisted="y">
                        <purpose>Display or return formatted version of message body data</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.statusclass.getreasonphrase.html" name="getReasonPhrase" init="G" unlisted="y">
                        <purpose>StatusClass name as text phrase</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.statuscode.fromvalue.html" name="matlab.net.http.StatusCode.fromValue" init="M" unlisted="y">
                        <purpose>Create StatusCode object from string or number</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.statuscode.getclass.html" name="getClass" init="G" unlisted="y">
                        <purpose>StatusClass for StatusCode</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.statuscode.getreasonphrase.html" name="getReasonPhrase" init="G" unlisted="y">
                        <purpose>StatusCode identifier as text phrase</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.convert.html" name="convert" init="C" unlisted="y">
                        <purpose>Convert header field value to MATLAB type</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.convertlike.html" name="convertLike" init="C" unlisted="y">
                        <purpose>Convert header field value like another header field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.displaysubclasses.html" name="matlab.net.http.HeaderField.displaySubclasses" init="M" unlisted="y">
                        <purpose>Display supported HeaderField subclasses</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.parse.html" name="parse" init="P" unlisted="y">
                        <purpose>Parse header field value and return as strings</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.eq.html" name="eq" init="E" unlisted="y">
                        <purpose>Compare two HeaderField arrays</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.addfields.html" name="addFields" init="A" unlisted="y">
                        <purpose>Add fields to HeaderField array</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.changefields.html" name="changeFields" init="C" unlisted="y">
                        <purpose>Change existing values in HeaderField array</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.getfields.html" name="getFields" init="G" unlisted="y">
                        <purpose>Return header fields matching name or class</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.removefields.html" name="removeFields" init="R" unlisted="y">
                        <purpose>Remove fields from header field array</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.headerfield.replacefields.html" name="replaceFields" init="R" unlisted="y">
                        <purpose>Change values in or add fields to array of HeaderFields</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.genericfield.getparameter.html" name="getParameter" init="G" unlisted="y">
                        <purpose>Return value of parameter in field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.genericfield.removeparameter.html" name="removeParameter" init="R" unlisted="y">
                        <purpose>Remove parameter from field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.genericfield.setparameter.html" name="setParameter" init="S" unlisted="y">
                        <purpose>Set value of parameter in field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.field.setcookiefield.convert.html" name="convert" init="C" unlisted="y">
                        <purpose>Returns CookieInfo object for each Set-Cookie field</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.authinfo.getparameter.html" name="getParameter" init="G" unlisted="y">
                        <purpose>Return value of AuthInfo parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.authinfo.removeparameter.html" name="removeParameter" init="R" unlisted="y">
                        <purpose>Remove AuthInfo parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.authinfo.setparameter.html" name="setParameter" init="S" unlisted="y">
                        <purpose>Set value of AuthInfo parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.cookieinfo.collectfromlog.html" name="matlab.net.http.CookieInfo.collectFromLog" init="M" unlisted="y">
                        <purpose>Latest CookieInfo objects from HTTP response message history</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.logrecord.show.html" name="show" init="S" unlisted="y">
                        <purpose>Display or return human-readable version of vector of LogRecords</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.mediatype.getparameter.html" name="getParameter" init="G" unlisted="y">
                        <purpose>Value of media type parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.mediatype.setparameter.html" name="setParameter" init="S" unlisted="y">
                        <purpose>Set value of media type parameter</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.progressmonitor.done.html" name="done" init="D" unlisted="y">
                        <purpose>Indicate all message transfers completed</purpose>
                    </ref>
                    <ref target="ref/matlab.net.queryparameter.string.html" name="string" init="S" unlisted="y">
                        <purpose>Encoded query parameter as string</purpose>
                    </ref>
                    <ref target="ref/matlab.net.queryparameter.char.html" name="char" init="C" unlisted="y">
                        <purpose>Encoded query parameter as character vector</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentconsumer.delegateto.html" name="delegateTo" init="D" unlisted="y">
                        <purpose>Delegate to another consumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentconsumer.initialize.html" name="initialize" init="I" unlisted="y">
                        <purpose>Prepare consumer for new HTTP payload</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Process or save next buffer of data for ContentConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentconsumer.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start HTTP data transfer to ContentConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.binaryconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Save next buffer of data for BinaryConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.binaryconsumer.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start HTTP transfer from BinaryConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.fileconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Save next buffer of data to file for FileConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.fileconsumer.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start transfer of file to FileConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Save next buffer of data for GenericConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericconsumer.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer to GenericConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageconsumer.initialize.html" name="initialize" init="I" unlisted="y">
                        <purpose>Prepare ImageConsumer for new image in HTTP message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Save data for ImageConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.jsonconsumer.initialize.html" name="initialize" init="I" unlisted="y">
                        <purpose>Prepare JSONConsumer for new HTTP message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.jsonconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Save next buffer of JSON data for JSONConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartconsumer.initialize.html" name="initialize" init="I" unlisted="y">
                        <purpose>Prepare MultipartConsumer for new HTTP message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Process next buffer of data for MultipartConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartconsumer.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer to MultipartConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringconsumer.convert.html" name="convert" init="C" unlisted="y">
                        <purpose>Convert data to string in StringConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringconsumer.initialize.html" name="initialize" init="I" unlisted="y">
                        <purpose>Prepare StringConsumer for new HTTP message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringconsumer.putdata.html" name="putData" init="P" unlisted="y">
                        <purpose>Append next buffer of string data to response</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringconsumer.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer to StringConsumer</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.complete.html" name="complete" init="C" unlisted="y">
                        <purpose>Complete HTTP header for ContentProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.delegateto.html" name="delegateTo" init="D" unlisted="y">
                        <purpose>Delegate to another provider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.expectedcontentlength.html" name="expectedContentLength" init="E" unlisted="y">
                        <purpose>Content length of ContentProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.getdata.html" name="getData" init="G" unlisted="y">
                        <purpose>Next buffer of data to send in HTTP request message from ContentProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.preferredbuffersize.html" name="preferredBufferSize" init="P" unlisted="y">
                        <purpose>Preferred buffer size for ContentProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.restartable.html" name="restartable" init="R" unlisted="y">
                        <purpose>Indicate whether ContentProvider is restartable</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.reusable.html" name="reusable" init="R" unlisted="y">
                        <purpose>Indicate whether ContentProvider is reusable</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.show.html" name="show" init="S" unlisted="y">
                        <purpose>Display ContentProvider information</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer from ContentProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.contentprovider.string.html" name="string" init="S" unlisted="y">
                        <purpose>Show ContentProvider as string</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.fileprovider.getdata.html" name="getData" init="G" unlisted="y">
                        <purpose>Next buffer of data to send in HTTP request message from FileProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.fileprovider.string.html" name="string" init="S" unlisted="y">
                        <purpose>Show FileProvider as string</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.formprovider.string.html" name="string" init="S" unlisted="y">
                        <purpose>FormProvider Data property</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericprovider.expectedcontentlength.html" name="expectedContentLength" init="E" unlisted="y">
                        <purpose>Content length of GenericProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericprovider.getdata.html" name="getData" init="G" unlisted="y">
                        <purpose>Next buffer of data to send in HTTP request message from GenericProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericprovider.preferredbuffersize.html" name="preferredBufferSize" init="P" unlisted="y">
                        <purpose>Preferred buffer size for GenericProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericprovider.restartable.html" name="restartable" init="R" unlisted="y">
                        <purpose>Indicate whether GenericProvider is restartable</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.genericprovider.reusable.html" name="reusable" init="R" unlisted="y">
                        <purpose>Indicate whether GenericProvider is reusable</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageprovider.complete.html" name="complete" init="C" unlisted="y">
                        <purpose>Complete HTTP header for ImageProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageprovider.restartable.html" name="restartable" init="R" unlisted="y">
                        <purpose>Indicate whether ImageProvider is restartable</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageprovider.reusable.html" name="reusable" init="R" unlisted="y">
                        <purpose>Indicate whether ImageProvider is reusable</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.imageprovider.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer from ImageProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.jsonprovider.complete.html" name="complete" init="C" unlisted="y">
                        <purpose>Complete HTTP header for JSONProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.jsonprovider.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer from JSONProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartprovider.complete.html" name="complete" init="C" unlisted="y">
                        <purpose>Complete HTTP header for MultipartProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartprovider.getdata.html" name="getData" init="G" unlisted="y">
                        <purpose>Next buffer of data to send in multipart HTTP request message</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.multipartprovider.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer from MultipartProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringprovider.complete.html" name="complete" init="C" unlisted="y">
                        <purpose>Complete HTTP header for StringProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringprovider.getdata.html" name="getData" init="G" unlisted="y">
                        <purpose>Next buffer of data to send in HTTP request message from StringProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringprovider.start.html" name="start" init="S" unlisted="y">
                        <purpose>Start data transfer from StringProvider</purpose>
                    </ref>
                    <ref target="ref/matlab.net.http.io.stringprovider.string.html" name="string" init="S" unlisted="y">
                        <purpose>StringProvider Data property</purpose>
                    </ref>
                </cat>
                <cat target="call-wsdl-web-services.html">
                    <title>WSDL (Web Services Description Language)</title>
                    <ref target="ref/matlab.wsdl.createwsdlclient.html" name="matlab.wsdl.createWSDLClient" init="M">
                        <purpose>Create interface to SOAP-based web service</purpose>
                    </ref>
                    <ref target="ref/matlab.wsdl.setwsdltoolpath.html" name="matlab.wsdl.setWSDLToolPath" init="M">
                        <purpose>Location of WSDL tools</purpose>
                    </ref>
                    <ref target="ref/createclassfromwsdl.html" name="createClassFromWsdl" init="C" unlisted="y">
                        <purpose>(To be removed) Create MATLAB class based on WSDL document</purpose>
                    </ref>
                    <ref target="ref/createsoapmessage.html" name="createSoapMessage" init="C" unlisted="y">
                        <purpose>(To be removed) Create SOAP (Simple Object Access Protocol) message to send to server</purpose>
                    </ref>
                    <ref target="ref/callsoapservice.html" name="callSoapService" init="C" unlisted="y">
                        <purpose>(To be removed) Send SOAP (Simple Object Access Protocol) message to endpoint</purpose>
                    </ref>
                    <ref target="ref/parsesoapresponse.html" name="parseSoapResponse" init="P" unlisted="y">
                        <purpose>(To be removed) Convert response string from SOAP (Simple Object Access Protocol) server into MATLAB types</purpose>
                    </ref>
                </cat>
            </cat>
            <cat target="">
                <title>Calling MATLAB from Other Languages</title>
                <cat target="interoperating-with-external-programming-languages-and-systems.html">
                    <title>Choosing a MATLAB API for Your Application</title>
                </cat>
                <cat target="Cpp-api.html">
                    <title>Calling MATLAB from C++</title>
                    <cat target="calling-matlab-engine-from-cpp-programs.html">
                        <title>MATLAB Engine API for C++</title>
                        <ref target="ref/matlab.engine.shareengine.html" name="matlab.engine.shareEngine" init="M">
                            <purpose>Convert running MATLAB session to shared session</purpose>
                        </ref>
                    </cat>
                    <cat target="cpp-mex-file-applications.html">
                        <title>C++ MEX Applications</title>
                        <ref target="ref/mexhost.html" name="mexhost" init="M">
                            <purpose>Create host process for C++ MEX function</purpose>
                        </ref>
                        <ref target="ref/matlab.mex.mexhost.feval.html" name="feval" init="F">
                            <purpose>Evaluate C++ MEX function in MEX host process</purpose>
                        </ref>
                        <ref target="ref/matlab.mex.mexhost-class.html" name="matlab.mex.MexHost" init="M">
                            <purpose>Out-of-process host for C++ MEX function execution</purpose>
                        </ref>
                    </cat>
                    <cat target="matlab-data-array.html">
                        <title>MATLAB Data API</title>
                    </cat>
                </cat>
                <cat target="matlab-engine-api-for-java.html">
                    <title>Calling MATLAB from Java</title>
                    <ref target="ref/matlab.engine.shareengine.html" name="matlab.engine.shareEngine" init="M">
                        <purpose>Convert running MATLAB session to shared session</purpose>
                    </ref>
                    <ref target="ref/matlab.engine.enginename.html" name="matlab.engine.engineName" init="M">
                        <purpose>Return name of shared MATLAB session</purpose>
                    </ref>
                    <ref target="ref/matlab.engine.isengineshared.html" name="matlab.engine.isEngineShared" init="M">
                        <purpose>Determine if MATLAB session is shared</purpose>
                    </ref>
                    <ref target="apiref/com.mathworks.engine.matlabengine-class.html" name="com.mathworks.engine.MatlabEngine" init="C">
                        <purpose>Java class using MATLAB as a computational engine</purpose>
                    </ref>
                    <ref target="apiref/com.mathworks.matlab.types.complex-class.html" name="com.mathworks.matlab.types.Complex" init="C">
                        <purpose>Java class to pass complex data to and from MATLAB</purpose>
                    </ref>
                    <ref target="apiref/com.mathworks.matlab.types.struct-class.html" name="com.mathworks.matlab.types.Struct" init="C">
                        <purpose>Java class to pass MATLAB struct to and from MATLAB</purpose>
                    </ref>
                    <ref target="apiref/com.mathworks.matlab.types.cellstr-class.html" name="com.mathworks.matlab.types.CellStr" init="C">
                        <purpose>Java class to represent MATLAB cell array of char vectors</purpose>
                    </ref>
                    <ref target="apiref/com.mathworks.matlab.types.handleobject-class.html" name="com.mathworks.matlab.types.HandleObject" init="C">
                        <purpose>Java class to represent MATLAB handle objects</purpose>
                    </ref>
                </cat>
                <cat target="matlab-engine-for-python.html">
                    <title>Calling MATLAB from Python</title>
                    <ref target="apiref/matlab.engine.start_matlab.html" name="matlab.engine.start_matlab" init="M">
                        <purpose>Start MATLAB Engine for Python</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.find_matlab.html" name="matlab.engine.find_matlab" init="M">
                        <purpose>Find shared MATLAB sessions to connect to MATLAB Engine for Python</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.connect_matlab.html" name="matlab.engine.connect_matlab" init="M">
                        <purpose>Connect shared MATLAB session to MATLAB Engine for Python</purpose>
                    </ref>
                    <ref target="ref/matlab.engine.shareengine.html" name="matlab.engine.shareEngine" init="M">
                        <purpose>Convert running MATLAB session to shared session</purpose>
                    </ref>
                    <ref target="ref/matlab.engine.enginename.html" name="matlab.engine.engineName" init="M">
                        <purpose>Return name of shared MATLAB session</purpose>
                    </ref>
                    <ref target="ref/matlab.engine.isengineshared.html" name="matlab.engine.isEngineShared" init="M">
                        <purpose>Determine if MATLAB session is shared</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.matlabengine-class.html" name="matlab.engine.MatlabEngine" init="M">
                        <purpose>Python object using MATLAB as computational engine within Python session</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.futureresult-class.html" name="matlab.engine.FutureResult" init="M">
                        <purpose>Results of asynchronous call to MATLAB function stored in Python object</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.futureresult.cancel.html" name="cancel" init="C" unlisted="y">
                        <purpose>Cancel asynchronous call to MATLAB function from Python</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.futureresult.cancelled.html" name="cancelled" init="C" unlisted="y">
                        <purpose>Cancellation status of asynchronous call to MATLAB function from Python</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.futureresult.done.html" name="done" init="D" unlisted="y">
                        <purpose>Completion status of asynchronous call to MATLAB function from Python</purpose>
                    </ref>
                    <ref target="apiref/matlab.engine.futureresult.result.html" name="result" init="R" unlisted="y">
                        <purpose>Result of asynchronous call to MATLAB function from Python</purpose>
                    </ref>
                </cat>
                <cat target="matlab-api-for-c.html">
                    <title>Calling MATLAB from C</title>
                    <cat target="calling-matlab-engine-from-c-programs-1.html">
                        <title>MATLAB Engine API for C</title>
                    </cat>
                    <cat target="call-mex-files-1.html">
                        <title>C MEX File Applications</title>
                        <ref target="ref/mex.html" name="mex" init="M">
                            <purpose>Build MEX function or engine application</purpose>
                        </ref>
                        <ref target="ref/dbmex.html" name="dbmex" init="D">
                            <purpose>Enable MEX-file debugging on UNIX platforms</purpose>
                        </ref>
                        <ref target="ref/mex.getcompilerconfigurations.html" name="mex.getCompilerConfigurations" init="M" unlisted="y">
                            <purpose>Get compiler configuration information for building MEX files</purpose>
                        </ref>
                    </cat>
                    <cat target="matlab-c-api-to-read-mat-file-data.html">
                        <title>MATLAB C API to Read MAT-File Data</title>
                    </cat>
                    <cat target="cc-mx-matrix-library.html">
                        <title>C Matrix API</title>
                    </cat>
                </cat>
                <cat target="matlab-api-for-fortran.html">
                    <title>Calling MATLAB from Fortran</title>
                    <cat target="calling-matlab-engine-from-fortran-programs.html">
                        <title>MATLAB Engine API for Fortran</title>
                    </cat>
                    <cat target="call-mex-fortran.html">
                        <title>Fortran MEX File Applications</title>
                        <cat target="mex-library-fortran.html">
                            <title>Fortran MEX API</title>
                        </cat>
                        <cat target="write-fortran-mex-files.html">
                            <title>Fortran Source MEX Files</title>
                        </cat>
                        <cat target="build-fortran-mex-files-1.html">
                            <title>Executable Fortran MEX Files</title>
                        </cat>
                    </cat>
                    <cat target="Fortran-applications-to-read-mat-file-data.html">
                        <title>MATLAB Fortran API to Read MAT-File Data</title>
                    </cat>
                    <cat target="fortran-mx-matrix-library.html">
                        <title>Fortran Matrix API</title>
                        <cat target="fortran-data-types.html">
                            <title>Fortran Data Types</title>
                        </cat>
                        <cat target="create-or-delete-fortran-array.html">
                            <title>Create or Delete Fortran Array</title>
                        </cat>
                        <cat target="validate-fortran-data.html">
                            <title>Validate Data</title>
                        </cat>
                        <cat target="access-fortran-data.html">
                            <title>Access Data</title>
                        </cat>
                        <cat target="convert-fortran-data-types.html">
                            <title>Convert Arrays</title>
                        </cat>
                    </cat>
                </cat>
                <cat target="call-matlab-com-automation-server.html">
                    <title>Calling MATLAB as COM Automation Server</title>
                    <ref target="ref/comserver.html" name="comserver" init="C">
                        <purpose>Register, unregister, or query MATLAB COM server</purpose>
                    </ref>
                    <ref target="ref/regmatlabserver.html" name="regmatlabserver" init="R">
                        <purpose>Register current MATLAB as COM server</purpose>
                    </ref>
                    <ref target="ref/enableservice.html" name="enableservice" init="E">
                        <purpose>Enable, disable, or report status of MATLAB Automation server</purpose>
                    </ref>
                    <ref target="ref/execute.html" name="Execute" init="E">
                        <purpose>Execute MATLAB command in Automation server</purpose>
                    </ref>
                    <ref target="ref/com.feval.html" name="Feval" init="F">
                        <purpose>Execute MATLAB function in Automation server</purpose>
                    </ref>
                    <ref target="ref/getfullmatrix.html" name="GetFullMatrix" init="G">
                        <purpose>Matrix from Automation server workspace</purpose>
                    </ref>
                    <ref target="ref/putfullmatrix.html" name="PutFullMatrix" init="P">
                        <purpose>Matrix in Automation server workspace</purpose>
                    </ref>
                    <ref target="ref/getchararray.html" name="GetCharArray" init="G">
                        <purpose>Character array from Automation server</purpose>
                    </ref>
                    <ref target="ref/putchararray.html" name="PutCharArray" init="P">
                        <purpose>Character array in Automation server</purpose>
                    </ref>
                    <ref target="ref/getvariable.html" name="GetVariable" init="G">
                        <purpose>Data from variable in Automation server workspace</purpose>
                    </ref>
                    <ref target="ref/getworkspacedata.html" name="GetWorkspaceData" init="G">
                        <purpose>Data from Automation server workspace</purpose>
                    </ref>
                    <ref target="ref/putworkspacedata.html" name="PutWorkspaceData" init="P">
                        <purpose>Data in Automation server workspace</purpose>
                    </ref>
                    <ref target="ref/maximizecommandwindow.html" name="MaximizeCommandWindow" init="M">
                        <purpose>Open Automation server window</purpose>
                    </ref>
                    <ref target="ref/minimizecommandwindow.html" name="MinimizeCommandWindow" init="M">
                        <purpose>Minimize size of Automation server window</purpose>
                    </ref>
                    <ref target="ref/com.quit.html" name="Quit" init="Q">
                        <purpose>Terminate MATLAB Automation server</purpose>
                    </ref>
                </cat>
            </cat>
        </cat>
        <cat target="desktop-tools-and-development-environment.html">
            <title>Environment and Settings</title>
            <cat target="startup-and-shutdown.html">
                <title>Startup and Shutdown</title>
                <ref target="ref/matlabwindows.html" name="matlab (Windows)" init="M">
                    <purpose>Start MATLAB program from Windows system prompt</purpose>
                </ref>
                <ref target="ref/matlabmacos.html" name="matlab (macOS)" init="M">
                    <purpose>Start MATLAB program from macOS Terminal</purpose>
                </ref>
                <ref target="ref/matlablinux.html" name="matlab (Linux)" init="M">
                    <purpose>Start MATLAB program from Linux system prompt</purpose>
                </ref>
                <ref target="ref/batchstartupoptionused.html" name="batchStartupOptionUsed" init="B">
                    <purpose>Determine if MATLAB started with -batch option</purpose>
                </ref>
                <ref target="ref/quit.html" name="quit" init="Q">
                    <purpose>Terminate MATLAB program</purpose>
                </ref>
                <ref target="ref/exit.html" name="exit" init="E">
                    <purpose>Terminate MATLAB program (same as quit)</purpose>
                </ref>
                <ref target="ref/startup.html" name="startup" init="S">
                    <purpose>User-defined startup script for MATLAB</purpose>
                </ref>
                <ref target="ref/finish.html" name="finish" init="F">
                    <purpose>User-defined termination script for MATLAB</purpose>
                </ref>
                <ref target="ref/matlabrc.html" name="matlabrc" init="M">
                    <purpose>System administrator-defined start up script for MATLAB</purpose>
                </ref>
            </cat>
            <cat target="basic-settings.html">
                <title>Basic Settings</title>
                <ref target="ref/prefdir.html" name="prefdir" init="P">
                    <purpose>Folder containing preferences, settings, history, and layout files</purpose>
                </ref>
                <ref target="ref/preferences.html" name="preferences" init="P">
                    <purpose>Open Preferences dialog box</purpose>
                </ref>
            </cat>
            <cat target="add-ons.html">
                <title>Add-Ons</title>
                <ref target="ref/supportpackageinstaller.html" name="supportPackageInstaller" init="S" unlisted="y">
                    <purpose>Install support for third-party hardware or software (Not recommended)</purpose>
                </ref>
                <ref target="ref/upgradepreviouslyinstalledsupportpackages.html" name="upgradePreviouslyInstalledSupportPackages" init="U" unlisted="y">
                    <purpose>Get previously installed hardware support packages and optional features for the currently installed release</purpose>
                </ref>
                <ref target="ref/matlabshared.supportpkg.checkforupdate.html" name="matlabshared.supportpkg.checkForUpdate" init="M" unlisted="y">
                    <purpose>List of support packages that can be updated (Not recommended)</purpose>
                </ref>
                <ref target="ref/matlabshared.supportpkg.getinstalled.html" name="matlabshared.supportpkg.getInstalled" init="M" unlisted="y">
                    <purpose>List of installed support packages</purpose>
                </ref>
                <ref target="ref/matlabshared.supportpkg.getsupportpackageroot.html" name="matlabshared.supportpkg.getSupportPackageRoot" init="M" unlisted="y">
                    <purpose>Get root folder of support packages</purpose>
                </ref>
                <ref target="ref/matlabshared.supportpkg.setsupportpackageroot.html" name="matlabshared.supportpkg.setSupportPackageRoot" init="M" unlisted="y">
                    <purpose>Set root folder of support packages</purpose>
                </ref>
            </cat>
            <cat target="matlab-version-and-license.html">
                <title>Platform and License</title>
                <ref target="ref/version.html" name="version" init="V">
                    <purpose>Version number for MATLAB and libraries</purpose>
                </ref>
                <ref target="ref/ver.html" name="ver" init="V">
                    <purpose>Version information for MathWorks products</purpose>
                </ref>
                <ref target="ref/verlessthan.html" name="verLessThan" init="V">
                    <purpose>Compare toolbox version to specified character vector</purpose>
                </ref>
                <ref target="ref/license.html" name="license" init="L">
                    <purpose>Get license number or perform licensing task</purpose>
                </ref>
                <ref target="ref/ispc.html" name="ispc" init="I">
                    <ext name="codegen" value="limited"/>
                    <purpose>Determine if version is for Windows (PC) platform</purpose>
                </ref>
                <ref target="ref/ismac.html" name="ismac" init="I">
                    <ext name="codegen" value="limited"/>
                    <purpose>Determine if version is for macOS platform</purpose>
                </ref>
                <ref target="ref/isunix.html" name="isunix" init="I">
                    <ext name="codegen" value="limited"/>
                    <purpose>Determine if version is for Linux or Mac platforms</purpose>
                </ref>
                <ref target="ref/isstudent.html" name="isstudent" init="I">
                    <purpose>Determine if version is Student Version</purpose>
                </ref>
                <ref target="ref/javachk.html" name="javachk" init="J">
                    <purpose>Error message based on Java feature support</purpose>
                </ref>
                <ref target="ref/usejava.html" name="usejava" init="U">
                    <purpose>Determine if Java feature is available</purpose>
                </ref>
            </cat>
            <cat target="matlab-environment-control.html">
                <title>System Commands</title>
                <ref target="ref/clipboard.html" name="clipboard" init="C">
                    <purpose>Copy and paste text to and from system clipboard</purpose>
                </ref>
                <ref target="ref/computer.html" name="computer" init="C">
                    <ext name="codegen" value="limited"/>
                    <purpose>Information about computer on which MATLAB is running</purpose>
                </ref>
                <ref target="ref/system.html" name="system" init="S">
                    <purpose>Execute operating system command and return output</purpose>
                </ref>
                <ref target="ref/dos.html" name="dos" init="D">
                    <purpose>Execute DOS command and return output</purpose>
                </ref>
                <ref target="ref/unix.html" name="unix" init="U">
                    <purpose>Execute UNIX command and return output</purpose>
                </ref>
                <ref target="ref/getenv.html" name="getenv" init="G">
                    <purpose>Environment variable</purpose>
                </ref>
                <ref target="ref/setenv.html" name="setenv" init="S">
                    <purpose>Set environment variable</purpose>
                </ref>
                <ref target="ref/perl.html" name="perl" init="P">
                    <purpose>Call Perl script using operating system executable</purpose>
                </ref>
                <ref target="ref/winqueryreg.html" name="winqueryreg" init="W">
                    <purpose>Item from Windows registry</purpose>
                </ref>
                <ref target="ref/matlab.io.savevariablestoscript.html" name="matlab.io.saveVariablesToScript" init="M">
                    <purpose>Save workspace variables to MATLAB script</purpose>
                </ref>
                <ref target="ref/getpref.html" name="getpref" init="G">
                    <purpose>Get custom preference value</purpose>
                </ref>
                <ref target="ref/setpref.html" name="setpref" init="S">
                    <purpose>Set custom preference value</purpose>
                </ref>
                <ref target="ref/addpref.html" name="addpref" init="A">
                    <purpose>Add custom preference</purpose>
                </ref>
                <ref target="ref/rmpref.html" name="rmpref" init="R">
                    <purpose>Remove custom preference</purpose>
                </ref>
                <ref target="ref/ispref.html" name="ispref" init="I">
                    <purpose>Determine if custom preference exists</purpose>
                </ref>
                <ref target="ref/matlab.addons.installedaddons.html" name="matlab.addons.installedAddons" init="M">
                    <purpose>Get list of installed add-ons</purpose>
                </ref>
                <ref target="ref/matlab.addons.isaddonenabled.html" name="matlab.addons.isAddonEnabled" init="M">
                    <purpose>Determine if add-on is enabled</purpose>
                </ref>
                <ref target="ref/matlab.addons.enableaddon.html" name="matlab.addons.enableAddon" init="M">
                    <purpose>Enable installed add-on</purpose>
                </ref>
                <ref target="ref/matlab.addons.disableaddon.html" name="matlab.addons.disableAddon" init="M">
                    <purpose>Disable installed add-on</purpose>
                </ref>
                <ref target="ref/matlab.addons.install.html" name="matlab.addons.install" init="M">
                    <purpose>Install add-on</purpose>
                </ref>
                <ref target="ref/matlab.addons.uninstall.html" name="matlab.addons.uninstall" init="M">
                    <purpose>Uninstall add-on</purpose>
                </ref>
                <ref target="ref/settings.html" name="settings" init="S">
                    <purpose>Access the SettingsGroup root object</purpose>
                </ref>
                <ref target="ref/matlab.settings.setting.cleartemporaryvalue.html" name="clearTemporaryValue" init="C">
                    <purpose>Clear the temporary value for a setting</purpose>
                </ref>
                <ref target="ref/matlab.settings.setting.clearpersonalvalue.html" name="clearPersonalValue" init="C">
                    <purpose>Clear the personal value for a setting</purpose>
                </ref>
                <ref target="ref/matlab.settings.setting.hastemporaryvalue.html" name="hasTemporaryValue" init="H">
                    <purpose>Determine whether the setting has a temporary value set</purpose>
                </ref>
                <ref target="ref/matlab.settings.setting.haspersonalvalue.html" name="hasPersonalValue" init="H">
                    <purpose>Determine whether the setting has a personal value set</purpose>
                </ref>
                <ref target="ref/matlab.settings.setting.hasfactoryvalue.html" name="hasFactoryValue" init="H">
                    <purpose>Determine whether the setting has a factory value set</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsgroup.addsetting.html" name="addSetting" init="A">
                    <purpose>Add new setting</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsgroup.addgroup.html" name="addGroup" init="A">
                    <purpose>Add new settings group</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsgroup.hasgroup.html" name="hasGroup" init="H">
                    <purpose>Determine if settings group exists</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsgroup.hassetting.html" name="hasSetting" init="H">
                    <purpose>Determine if setting exists in settings group</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsgroup.removegroup.html" name="removeGroup" init="R">
                    <purpose>Remove settings group</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsgroup.removesetting.html" name="removeSetting" init="R">
                    <purpose>Remove setting</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbelogicalscalar.html" name="matlab.settings.mustBeLogicalScalar" init="M">
                    <purpose>Validate that setting value is logical array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbenumericscalar.html" name="matlab.settings.mustBeNumericScalar" init="M">
                    <purpose>Validate that setting value is numeric array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbestringscalar.html" name="matlab.settings.mustBeStringScalar" init="M">
                    <purpose>Validate that setting value is string array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.mustbeintegerscalar.html" name="matlab.settings.mustBeIntegerScalar" init="M">
                    <purpose>Validate that setting value is integer array with one element</purpose>
                </ref>
                <ref target="ref/matlab.settings.setting.html" name="Setting" init="S">
                    <purpose>Setting object</purpose>
                </ref>
                <ref target="ref/matlab.settings.settingsgroup.html" name="SettingsGroup" init="S">
                    <purpose>Group of settings and subgroup objects</purpose>
                </ref>
            </cat>
            <cat target="internationalization.html">
                <title>Internationalization</title>
            </cat>
            <cat target="help-and-support.html">
                <title>Help and Support</title>
                <ref target="ref/doc.html" name="doc" init="D">
                    <purpose>Reference page in Help browser</purpose>
                </ref>
                <ref target="ref/help.html" name="help" init="H">
                    <purpose>Help for functions in Command Window</purpose>
                </ref>
                <ref target="ref/docsearch.html" name="docsearch" init="D">
                    <purpose>Help browser search</purpose>
                </ref>
                <ref target="ref/lookfor.html" name="lookfor" init="L">
                    <purpose>Search for keyword in all help entries</purpose>
                </ref>
                <ref target="ref/demo.html" name="demo" init="D">
                    <purpose>Access product examples in Help browser</purpose>
                </ref>
                <ref target="ref/echodemo.html" name="echodemo" init="E">
                    <purpose>Run example script step-by-step in Command Window</purpose>
                </ref>
                <ref target="ref/helpbrowser.html" name="helpbrowser" init="H" unlisted="y">
                    <purpose>Open Help browser to access online documentation</purpose>
                </ref>
                <ref target="ref/helpdesk.html" name="helpdesk" init="H" unlisted="y">
                    <purpose>Open Help browser</purpose>
                </ref>
                <ref target="ref/helpwin.html" name="helpwin" init="H" unlisted="y">
                    <purpose>Provide access to help comments for all functions</purpose>
                </ref>
                <ref target="ref/info.html" name="info" init="I" unlisted="y">
                    <purpose>Information about contacting MathWorks</purpose>
                </ref>
                <ref target="ref/support.html" name="support" init="S" unlisted="y">
                    <purpose>Open MathWorks Technical Support Web page</purpose>
                </ref>
                <ref target="ref/whatsnew.html" name="whatsnew" init="W" unlisted="y">
                    <purpose>Release Notes</purpose>
                </ref>
            </cat>
        </cat>
    </cat>
</data>